!(function (e, t) {
  for (var r in t) e[r] = t[r];
})(
  exports,
  (function (e) {
    var t = {};
    function r(n) {
      if (t[n]) return t[n].exports;
      var i = (t[n] = { i: n, l: !1, exports: {} });
      return e[n].call(i.exports, i, i.exports, r), (i.l = !0), i.exports;
    }
    return (
      (r.m = e),
      (r.c = t),
      (r.d = function (e, t, n) {
        r.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: n });
      }),
      (r.r = function (e) {
        'undefined' != typeof Symbol &&
          Symbol.toStringTag &&
          Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
          Object.defineProperty(e, '__esModule', { value: !0 });
      }),
      (r.t = function (e, t) {
        if ((1 & t && (e = r(e)), 8 & t)) return e;
        if (4 & t && 'object' == typeof e && e && e.__esModule) return e;
        var n = Object.create(null);
        if (
          (r.r(n),
          Object.defineProperty(n, 'default', { enumerable: !0, value: e }),
          2 & t && 'string' != typeof e)
        )
          for (var i in e)
            r.d(
              n,
              i,
              function (t) {
                return e[t];
              }.bind(null, i)
            );
        return n;
      }),
      (r.n = function (e) {
        var t =
          e && e.__esModule
            ? function () {
                return e.default;
              }
            : function () {
                return e;
              };
        return r.d(t, 'a', t), t;
      }),
      (r.o = function (e, t) {
        return Object.prototype.hasOwnProperty.call(e, t);
      }),
      (r.p = ''),
      r((r.s = 566))
    );
  })([
    function (e, t, r) {
      const n = r(2).Buffer,
        i = r(51),
        o = r(21),
        a = r(166),
        s = r(3),
        u = r(13),
        c = r(81),
        f = r(1),
        l = r(167),
        d = f.OP_RESERVED;
      function p(e) {
        return (
          u.Buffer(e) ||
          (function (e) {
            return (
              u.Number(e) &&
              (e === f.OP_0 ||
                (e >= f.OP_1 && e <= f.OP_16) ||
                e === f.OP_1NEGATE)
            );
          })(e)
        );
      }
      function h(e) {
        return u.Array(e) && e.every(p);
      }
      function m(e) {
        return 0 === e.length
          ? f.OP_0
          : 1 === e.length
          ? e[0] >= 1 && e[0] <= 16
            ? d + e[0]
            : 129 === e[0]
            ? f.OP_1NEGATE
            : void 0
          : void 0;
      }
      function b(e) {
        if (n.isBuffer(e)) return e;
        s(u.Array, e);
        const t = e.reduce(function (e, t) {
            return n.isBuffer(t)
              ? 1 === t.length && void 0 !== m(t)
                ? e + 1
                : e + a.encodingLength(t.length) + t.length
              : e + 1;
          }, 0),
          r = n.allocUnsafe(t);
        let i = 0;
        if (
          (e.forEach(function (e) {
            if (n.isBuffer(e)) {
              const t = m(e);
              if (void 0 !== t) return r.writeUInt8(t, i), void (i += 1);
              (i += a.encode(r, e.length, i)), e.copy(r, i), (i += e.length);
            } else r.writeUInt8(e, i), (i += 1);
          }),
          i !== r.length)
        )
          throw new Error('Could not decode chunks');
        return r;
      }
      function g(e) {
        if (u.Array(e)) return e;
        s(u.Buffer, e);
        const t = [];
        let r = 0;
        for (; r < e.length; ) {
          const n = e[r];
          if (n > f.OP_0 && n <= f.OP_PUSHDATA4) {
            const n = a.decode(e, r);
            if (null === n) return null;
            if (((r += n.size), r + n.number > e.length)) return null;
            const i = e.slice(r, r + n.number);
            r += n.number;
            const o = m(i);
            void 0 !== o ? t.push(o) : t.push(i);
          } else t.push(n), (r += 1);
        }
        return t;
      }
      function v(e) {
        const t = -129 & e;
        return t > 0 && t < 4;
      }
      e.exports = {
        compile: b,
        decompile: g,
        fromASM: function (e) {
          return (
            s(u.String, e),
            b(
              e.split(' ').map(function (e) {
                return void 0 !== f[e] ? f[e] : (s(u.Hex, e), n.from(e, 'hex'));
              })
            )
          );
        },
        toASM: function (e) {
          return (
            n.isBuffer(e) && (e = g(e)),
            e
              .map(function (e) {
                if (n.isBuffer(e)) {
                  const t = m(e);
                  if (void 0 === t) return e.toString('hex');
                  e = t;
                }
                return l[e];
              })
              .join(' ')
          );
        },
        toStack: function (e) {
          return (
            (e = g(e)),
            s(h, e),
            e.map(function (e) {
              return n.isBuffer(e)
                ? e
                : e === f.OP_0
                ? n.allocUnsafe(0)
                : c.encode(e - d);
            })
          );
        },
        number: r(81),
        signature: r(168),
        isCanonicalPubKey: function (e) {
          return o.isPoint(e);
        },
        isCanonicalScriptSignature: function (e) {
          return (
            !!n.isBuffer(e) && !!v(e[e.length - 1]) && i.check(e.slice(0, -1))
          );
        },
        isPushOnly: h,
        isDefinedHashType: v,
      };
    },
    function (e) {
      e.exports = JSON.parse(
        '{"OP_FALSE":0,"OP_0":0,"OP_PUSHDATA1":76,"OP_PUSHDATA2":77,"OP_PUSHDATA4":78,"OP_1NEGATE":79,"OP_RESERVED":80,"OP_TRUE":81,"OP_1":81,"OP_2":82,"OP_3":83,"OP_4":84,"OP_5":85,"OP_6":86,"OP_7":87,"OP_8":88,"OP_9":89,"OP_10":90,"OP_11":91,"OP_12":92,"OP_13":93,"OP_14":94,"OP_15":95,"OP_16":96,"OP_NOP":97,"OP_VER":98,"OP_IF":99,"OP_NOTIF":100,"OP_VERIF":101,"OP_VERNOTIF":102,"OP_ELSE":103,"OP_ENDIF":104,"OP_VERIFY":105,"OP_RETURN":106,"OP_TOALTSTACK":107,"OP_FROMALTSTACK":108,"OP_2DROP":109,"OP_2DUP":110,"OP_3DUP":111,"OP_2OVER":112,"OP_2ROT":113,"OP_2SWAP":114,"OP_IFDUP":115,"OP_DEPTH":116,"OP_DROP":117,"OP_DUP":118,"OP_NIP":119,"OP_OVER":120,"OP_PICK":121,"OP_ROLL":122,"OP_ROT":123,"OP_SWAP":124,"OP_TUCK":125,"OP_CAT":126,"OP_SUBSTR":127,"OP_LEFT":128,"OP_RIGHT":129,"OP_SIZE":130,"OP_INVERT":131,"OP_AND":132,"OP_OR":133,"OP_XOR":134,"OP_EQUAL":135,"OP_EQUALVERIFY":136,"OP_RESERVED1":137,"OP_RESERVED2":138,"OP_1ADD":139,"OP_1SUB":140,"OP_2MUL":141,"OP_2DIV":142,"OP_NEGATE":143,"OP_ABS":144,"OP_NOT":145,"OP_0NOTEQUAL":146,"OP_ADD":147,"OP_SUB":148,"OP_MUL":149,"OP_DIV":150,"OP_MOD":151,"OP_LSHIFT":152,"OP_RSHIFT":153,"OP_BOOLAND":154,"OP_BOOLOR":155,"OP_NUMEQUAL":156,"OP_NUMEQUALVERIFY":157,"OP_NUMNOTEQUAL":158,"OP_LESSTHAN":159,"OP_GREATERTHAN":160,"OP_LESSTHANOREQUAL":161,"OP_GREATERTHANOREQUAL":162,"OP_MIN":163,"OP_MAX":164,"OP_WITHIN":165,"OP_RIPEMD160":166,"OP_SHA1":167,"OP_SHA256":168,"OP_HASH160":169,"OP_HASH256":170,"OP_CODESEPARATOR":171,"OP_CHECKSIG":172,"OP_CHECKSIGVERIFY":173,"OP_CHECKMULTISIG":174,"OP_CHECKMULTISIGVERIFY":175,"OP_NOP1":176,"OP_NOP2":177,"OP_CHECKLOCKTIMEVERIFY":177,"OP_NOP3":178,"OP_CHECKSEQUENCEVERIFY":178,"OP_NOP4":179,"OP_NOP5":180,"OP_NOP6":181,"OP_NOP7":182,"OP_NOP8":183,"OP_NOP9":184,"OP_NOP10":185,"OP_PUBKEYHASH":253,"OP_PUBKEY":254,"OP_INVALIDOPCODE":255}'
      );
    },
    function (e, t, r) {
      /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
      var n = r(39),
        i = n.Buffer;
      function o(e, t) {
        for (var r in e) t[r] = e[r];
      }
      function a(e, t, r) {
        return i(e, t, r);
      }
      i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow
        ? (e.exports = n)
        : (o(n, t), (t.Buffer = a)),
        (a.prototype = Object.create(i.prototype)),
        o(i, a),
        (a.from = function (e, t, r) {
          if ('number' == typeof e)
            throw new TypeError('Argument must not be a number');
          return i(e, t, r);
        }),
        (a.alloc = function (e, t, r) {
          if ('number' != typeof e)
            throw new TypeError('Argument must be a number');
          var n = i(e);
          return (
            void 0 !== t
              ? 'string' == typeof r
                ? n.fill(t, r)
                : n.fill(t)
              : n.fill(0),
            n
          );
        }),
        (a.allocUnsafe = function (e) {
          if ('number' != typeof e)
            throw new TypeError('Argument must be a number');
          return i(e);
        }),
        (a.allocUnsafeSlow = function (e) {
          if ('number' != typeof e)
            throw new TypeError('Argument must be a number');
          return n.SlowBuffer(e);
        });
    },
    function (e, t, r) {
      var n = r(78),
        i = r(50),
        o = n.tfJSON,
        a = n.TfTypeError,
        s = n.TfPropertyTypeError,
        u = n.tfSubError,
        c = n.getValueTypeName,
        f = {
          arrayOf: function (e, t) {
            function r(r, n) {
              return (
                !!i.Array(r) &&
                !i.Nil(r) &&
                !(void 0 !== t.minLength && r.length < t.minLength) &&
                !(void 0 !== t.maxLength && r.length > t.maxLength) &&
                (void 0 === t.length || r.length === t.length) &&
                r.every(function (t, r) {
                  try {
                    return d(e, t, n);
                  } catch (e) {
                    throw u(e, r);
                  }
                })
              );
            }
            return (
              (e = l(e)),
              (t = t || {}),
              (r.toJSON = function () {
                var r = '[' + o(e) + ']';
                return (
                  void 0 !== t.length
                    ? (r += '{' + t.length + '}')
                    : (void 0 === t.minLength && void 0 === t.maxLength) ||
                      (r +=
                        '{' +
                        (void 0 === t.minLength ? 0 : t.minLength) +
                        ',' +
                        (void 0 === t.maxLength ? 1 / 0 : t.maxLength) +
                        '}'),
                  r
                );
              }),
              r
            );
          },
          maybe: function e(t) {
            function r(r, n) {
              return i.Nil(r) || t(r, n, e);
            }
            return (
              (t = l(t)),
              (r.toJSON = function () {
                return '?' + o(t);
              }),
              r
            );
          },
          map: function (e, t) {
            function r(r, n) {
              if (!i.Object(r)) return !1;
              if (i.Nil(r)) return !1;
              for (var o in r) {
                try {
                  t && d(t, o, n);
                } catch (e) {
                  throw u(e, o, 'key');
                }
                try {
                  var a = r[o];
                  d(e, a, n);
                } catch (e) {
                  throw u(e, o);
                }
              }
              return !0;
            }
            return (
              (e = l(e)),
              t && (t = l(t)),
              (r.toJSON = t
                ? function () {
                    return '{' + o(t) + ': ' + o(e) + '}';
                  }
                : function () {
                    return '{' + o(e) + '}';
                  }),
              r
            );
          },
          object: function (e) {
            var t = {};
            for (var r in e) t[r] = l(e[r]);
            function n(e, r) {
              if (!i.Object(e)) return !1;
              if (i.Nil(e)) return !1;
              var n;
              try {
                for (n in t) {
                  d(t[n], e[n], r);
                }
              } catch (e) {
                throw u(e, n);
              }
              if (r) for (n in e) if (!t[n]) throw new s(void 0, n);
              return !0;
            }
            return (
              (n.toJSON = function () {
                return o(t);
              }),
              n
            );
          },
          anyOf: function () {
            var e = [].slice.call(arguments).map(l);
            function t(t, r) {
              return e.some(function (e) {
                try {
                  return d(e, t, r);
                } catch (e) {
                  return !1;
                }
              });
            }
            return (
              (t.toJSON = function () {
                return e.map(o).join('|');
              }),
              t
            );
          },
          allOf: function () {
            var e = [].slice.call(arguments).map(l);
            function t(t, r) {
              return e.every(function (e) {
                try {
                  return d(e, t, r);
                } catch (e) {
                  return !1;
                }
              });
            }
            return (
              (t.toJSON = function () {
                return e.map(o).join(' & ');
              }),
              t
            );
          },
          quacksLike: function (e) {
            function t(t) {
              return e === c(t);
            }
            return (
              (t.toJSON = function () {
                return e;
              }),
              t
            );
          },
          tuple: function () {
            var e = [].slice.call(arguments).map(l);
            function t(t, r) {
              return (
                !i.Nil(t) &&
                !i.Nil(t.length) &&
                (!r || t.length === e.length) &&
                e.every(function (e, n) {
                  try {
                    return d(e, t[n], r);
                  } catch (e) {
                    throw u(e, n);
                  }
                })
              );
            }
            return (
              (t.toJSON = function () {
                return '(' + e.map(o).join(', ') + ')';
              }),
              t
            );
          },
          value: function (e) {
            function t(t) {
              return t === e;
            }
            return (
              (t.toJSON = function () {
                return e;
              }),
              t
            );
          },
        };
      function l(e) {
        if (i.String(e))
          return '?' === e[0] ? f.maybe(e.slice(1)) : i[e] || f.quacksLike(e);
        if (e && i.Object(e)) {
          if (i.Array(e)) {
            if (1 !== e.length)
              throw new TypeError(
                'Expected compile() parameter of type Array of length 1'
              );
            return f.arrayOf(e[0]);
          }
          return f.object(e);
        }
        return i.Function(e) ? e : f.value(e);
      }
      function d(e, t, r, n) {
        if (i.Function(e)) {
          if (e(t, r)) return !0;
          throw new a(n || e, t);
        }
        return d(l(e), t, r);
      }
      for (var p in ((f.oneOf = f.anyOf), i)) d[p] = i[p];
      for (p in f) d[p] = f[p];
      var h = r(157);
      for (p in h) d[p] = h[p];
      (d.compile = l),
        (d.TfTypeError = a),
        (d.TfPropertyTypeError = s),
        (e.exports = d);
    },
    function (e, t) {
      e.exports = require('crypto');
    },
    function (e, t) {
      e.exports = require('stream');
    },
    function (e, t) {
      e.exports = require('util');
    },
    ,
    function (e, t, r) {
      'use strict';
      var n = t,
        i = r(10),
        o = r(22),
        a = r(72);
      (n.assert = o),
        (n.toArray = a.toArray),
        (n.zero2 = a.zero2),
        (n.toHex = a.toHex),
        (n.encode = a.encode),
        (n.getNAF = function (e, t, r) {
          var n = new Array(Math.max(e.bitLength(), r) + 1);
          n.fill(0);
          for (var i = 1 << (t + 1), o = e.clone(), a = 0; a < n.length; a++) {
            var s,
              u = o.andln(i - 1);
            o.isOdd()
              ? ((s = u > (i >> 1) - 1 ? (i >> 1) - u : u), o.isubn(s))
              : (s = 0),
              (n[a] = s),
              o.iushrn(1);
          }
          return n;
        }),
        (n.getJSF = function (e, t) {
          var r = [[], []];
          (e = e.clone()), (t = t.clone());
          for (var n = 0, i = 0; e.cmpn(-n) > 0 || t.cmpn(-i) > 0; ) {
            var o,
              a,
              s,
              u = (e.andln(3) + n) & 3,
              c = (t.andln(3) + i) & 3;
            if ((3 === u && (u = -1), 3 === c && (c = -1), 0 == (1 & u))) o = 0;
            else
              o =
                (3 !== (s = (e.andln(7) + n) & 7) && 5 !== s) || 2 !== c
                  ? u
                  : -u;
            if ((r[0].push(o), 0 == (1 & c))) a = 0;
            else
              a =
                (3 !== (s = (t.andln(7) + i) & 7) && 5 !== s) || 2 !== u
                  ? c
                  : -c;
            r[1].push(a),
              2 * n === o + 1 && (n = 1 - n),
              2 * i === a + 1 && (i = 1 - i),
              e.iushrn(1),
              t.iushrn(1);
          }
          return r;
        }),
        (n.cachedProperty = function (e, t, r) {
          var n = '_' + t;
          e.prototype[t] = function () {
            return void 0 !== this[n] ? this[n] : (this[n] = r.call(this));
          };
        }),
        (n.parseBytes = function (e) {
          return 'string' == typeof e ? n.toArray(e, 'hex') : e;
        }),
        (n.intFromLE = function (e) {
          return new i(e, 'hex', 'le');
        });
    },
    ,
    function (e, t, r) {
      (function (e) {
        !(function (e, t) {
          'use strict';
          function n(e, t) {
            if (!e) throw new Error(t || 'Assertion failed');
          }
          function i(e, t) {
            e.super_ = t;
            var r = function () {};
            (r.prototype = t.prototype),
              (e.prototype = new r()),
              (e.prototype.constructor = e);
          }
          function o(e, t, r) {
            if (o.isBN(e)) return e;
            (this.negative = 0),
              (this.words = null),
              (this.length = 0),
              (this.red = null),
              null !== e &&
                (('le' !== t && 'be' !== t) || ((r = t), (t = 10)),
                this._init(e || 0, t || 10, r || 'be'));
          }
          var a;
          'object' == typeof e ? (e.exports = o) : (t.BN = o),
            (o.BN = o),
            (o.wordSize = 26);
          try {
            a = r(39).Buffer;
          } catch (e) {}
          function s(e, t, r) {
            for (var n = 0, i = Math.min(e.length, r), o = t; o < i; o++) {
              var a = e.charCodeAt(o) - 48;
              (n <<= 4),
                (n |=
                  a >= 49 && a <= 54
                    ? a - 49 + 10
                    : a >= 17 && a <= 22
                    ? a - 17 + 10
                    : 15 & a);
            }
            return n;
          }
          function u(e, t, r, n) {
            for (var i = 0, o = Math.min(e.length, r), a = t; a < o; a++) {
              var s = e.charCodeAt(a) - 48;
              (i *= n),
                (i += s >= 49 ? s - 49 + 10 : s >= 17 ? s - 17 + 10 : s);
            }
            return i;
          }
          (o.isBN = function (e) {
            return (
              e instanceof o ||
              (null !== e &&
                'object' == typeof e &&
                e.constructor.wordSize === o.wordSize &&
                Array.isArray(e.words))
            );
          }),
            (o.max = function (e, t) {
              return e.cmp(t) > 0 ? e : t;
            }),
            (o.min = function (e, t) {
              return e.cmp(t) < 0 ? e : t;
            }),
            (o.prototype._init = function (e, t, r) {
              if ('number' == typeof e) return this._initNumber(e, t, r);
              if ('object' == typeof e) return this._initArray(e, t, r);
              'hex' === t && (t = 16), n(t === (0 | t) && t >= 2 && t <= 36);
              var i = 0;
              '-' === (e = e.toString().replace(/\s+/g, ''))[0] && i++,
                16 === t ? this._parseHex(e, i) : this._parseBase(e, t, i),
                '-' === e[0] && (this.negative = 1),
                this.strip(),
                'le' === r && this._initArray(this.toArray(), t, r);
            }),
            (o.prototype._initNumber = function (e, t, r) {
              e < 0 && ((this.negative = 1), (e = -e)),
                e < 67108864
                  ? ((this.words = [67108863 & e]), (this.length = 1))
                  : e < 4503599627370496
                  ? ((this.words = [67108863 & e, (e / 67108864) & 67108863]),
                    (this.length = 2))
                  : (n(e < 9007199254740992),
                    (this.words = [67108863 & e, (e / 67108864) & 67108863, 1]),
                    (this.length = 3)),
                'le' === r && this._initArray(this.toArray(), t, r);
            }),
            (o.prototype._initArray = function (e, t, r) {
              if ((n('number' == typeof e.length), e.length <= 0))
                return (this.words = [0]), (this.length = 1), this;
              (this.length = Math.ceil(e.length / 3)),
                (this.words = new Array(this.length));
              for (var i = 0; i < this.length; i++) this.words[i] = 0;
              var o,
                a,
                s = 0;
              if ('be' === r)
                for (i = e.length - 1, o = 0; i >= 0; i -= 3)
                  (a = e[i] | (e[i - 1] << 8) | (e[i - 2] << 16)),
                    (this.words[o] |= (a << s) & 67108863),
                    (this.words[o + 1] = (a >>> (26 - s)) & 67108863),
                    (s += 24) >= 26 && ((s -= 26), o++);
              else if ('le' === r)
                for (i = 0, o = 0; i < e.length; i += 3)
                  (a = e[i] | (e[i + 1] << 8) | (e[i + 2] << 16)),
                    (this.words[o] |= (a << s) & 67108863),
                    (this.words[o + 1] = (a >>> (26 - s)) & 67108863),
                    (s += 24) >= 26 && ((s -= 26), o++);
              return this.strip();
            }),
            (o.prototype._parseHex = function (e, t) {
              (this.length = Math.ceil((e.length - t) / 6)),
                (this.words = new Array(this.length));
              for (var r = 0; r < this.length; r++) this.words[r] = 0;
              var n,
                i,
                o = 0;
              for (r = e.length - 6, n = 0; r >= t; r -= 6)
                (i = s(e, r, r + 6)),
                  (this.words[n] |= (i << o) & 67108863),
                  (this.words[n + 1] |= (i >>> (26 - o)) & 4194303),
                  (o += 24) >= 26 && ((o -= 26), n++);
              r + 6 !== t &&
                ((i = s(e, t, r + 6)),
                (this.words[n] |= (i << o) & 67108863),
                (this.words[n + 1] |= (i >>> (26 - o)) & 4194303)),
                this.strip();
            }),
            (o.prototype._parseBase = function (e, t, r) {
              (this.words = [0]), (this.length = 1);
              for (var n = 0, i = 1; i <= 67108863; i *= t) n++;
              n--, (i = (i / t) | 0);
              for (
                var o = e.length - r,
                  a = o % n,
                  s = Math.min(o, o - a) + r,
                  c = 0,
                  f = r;
                f < s;
                f += n
              )
                (c = u(e, f, f + n, t)),
                  this.imuln(i),
                  this.words[0] + c < 67108864
                    ? (this.words[0] += c)
                    : this._iaddn(c);
              if (0 !== a) {
                var l = 1;
                for (c = u(e, f, e.length, t), f = 0; f < a; f++) l *= t;
                this.imuln(l),
                  this.words[0] + c < 67108864
                    ? (this.words[0] += c)
                    : this._iaddn(c);
              }
            }),
            (o.prototype.copy = function (e) {
              e.words = new Array(this.length);
              for (var t = 0; t < this.length; t++) e.words[t] = this.words[t];
              (e.length = this.length),
                (e.negative = this.negative),
                (e.red = this.red);
            }),
            (o.prototype.clone = function () {
              var e = new o(null);
              return this.copy(e), e;
            }),
            (o.prototype._expand = function (e) {
              for (; this.length < e; ) this.words[this.length++] = 0;
              return this;
            }),
            (o.prototype.strip = function () {
              for (; this.length > 1 && 0 === this.words[this.length - 1]; )
                this.length--;
              return this._normSign();
            }),
            (o.prototype._normSign = function () {
              return (
                1 === this.length && 0 === this.words[0] && (this.negative = 0),
                this
              );
            }),
            (o.prototype.inspect = function () {
              return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
            });
          var c = [
              '',
              '0',
              '00',
              '000',
              '0000',
              '00000',
              '000000',
              '0000000',
              '00000000',
              '000000000',
              '0000000000',
              '00000000000',
              '000000000000',
              '0000000000000',
              '00000000000000',
              '000000000000000',
              '0000000000000000',
              '00000000000000000',
              '000000000000000000',
              '0000000000000000000',
              '00000000000000000000',
              '000000000000000000000',
              '0000000000000000000000',
              '00000000000000000000000',
              '000000000000000000000000',
              '0000000000000000000000000',
            ],
            f = [
              0,
              0,
              25,
              16,
              12,
              11,
              10,
              9,
              8,
              8,
              7,
              7,
              7,
              7,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
            ],
            l = [
              0,
              0,
              33554432,
              43046721,
              16777216,
              48828125,
              60466176,
              40353607,
              16777216,
              43046721,
              1e7,
              19487171,
              35831808,
              62748517,
              7529536,
              11390625,
              16777216,
              24137569,
              34012224,
              47045881,
              64e6,
              4084101,
              5153632,
              6436343,
              7962624,
              9765625,
              11881376,
              14348907,
              17210368,
              20511149,
              243e5,
              28629151,
              33554432,
              39135393,
              45435424,
              52521875,
              60466176,
            ];
          function d(e, t, r) {
            r.negative = t.negative ^ e.negative;
            var n = (e.length + t.length) | 0;
            (r.length = n), (n = (n - 1) | 0);
            var i = 0 | e.words[0],
              o = 0 | t.words[0],
              a = i * o,
              s = 67108863 & a,
              u = (a / 67108864) | 0;
            r.words[0] = s;
            for (var c = 1; c < n; c++) {
              for (
                var f = u >>> 26,
                  l = 67108863 & u,
                  d = Math.min(c, t.length - 1),
                  p = Math.max(0, c - e.length + 1);
                p <= d;
                p++
              ) {
                var h = (c - p) | 0;
                (f +=
                  ((a = (i = 0 | e.words[h]) * (o = 0 | t.words[p]) + l) /
                    67108864) |
                  0),
                  (l = 67108863 & a);
              }
              (r.words[c] = 0 | l), (u = 0 | f);
            }
            return 0 !== u ? (r.words[c] = 0 | u) : r.length--, r.strip();
          }
          (o.prototype.toString = function (e, t) {
            var r;
            if (((t = 0 | t || 1), 16 === (e = e || 10) || 'hex' === e)) {
              r = '';
              for (var i = 0, o = 0, a = 0; a < this.length; a++) {
                var s = this.words[a],
                  u = (16777215 & ((s << i) | o)).toString(16);
                (r =
                  0 !== (o = (s >>> (24 - i)) & 16777215) ||
                  a !== this.length - 1
                    ? c[6 - u.length] + u + r
                    : u + r),
                  (i += 2) >= 26 && ((i -= 26), a--);
              }
              for (0 !== o && (r = o.toString(16) + r); r.length % t != 0; )
                r = '0' + r;
              return 0 !== this.negative && (r = '-' + r), r;
            }
            if (e === (0 | e) && e >= 2 && e <= 36) {
              var d = f[e],
                p = l[e];
              r = '';
              var h = this.clone();
              for (h.negative = 0; !h.isZero(); ) {
                var m = h.modn(p).toString(e);
                r = (h = h.idivn(p)).isZero() ? m + r : c[d - m.length] + m + r;
              }
              for (this.isZero() && (r = '0' + r); r.length % t != 0; )
                r = '0' + r;
              return 0 !== this.negative && (r = '-' + r), r;
            }
            n(!1, 'Base should be between 2 and 36');
          }),
            (o.prototype.toNumber = function () {
              var e = this.words[0];
              return (
                2 === this.length
                  ? (e += 67108864 * this.words[1])
                  : 3 === this.length && 1 === this.words[2]
                  ? (e += 4503599627370496 + 67108864 * this.words[1])
                  : this.length > 2 &&
                    n(!1, 'Number can only safely store up to 53 bits'),
                0 !== this.negative ? -e : e
              );
            }),
            (o.prototype.toJSON = function () {
              return this.toString(16);
            }),
            (o.prototype.toBuffer = function (e, t) {
              return n(void 0 !== a), this.toArrayLike(a, e, t);
            }),
            (o.prototype.toArray = function (e, t) {
              return this.toArrayLike(Array, e, t);
            }),
            (o.prototype.toArrayLike = function (e, t, r) {
              var i = this.byteLength(),
                o = r || Math.max(1, i);
              n(i <= o, 'byte array longer than desired length'),
                n(o > 0, 'Requested array length <= 0'),
                this.strip();
              var a,
                s,
                u = 'le' === t,
                c = new e(o),
                f = this.clone();
              if (u) {
                for (s = 0; !f.isZero(); s++)
                  (a = f.andln(255)), f.iushrn(8), (c[s] = a);
                for (; s < o; s++) c[s] = 0;
              } else {
                for (s = 0; s < o - i; s++) c[s] = 0;
                for (s = 0; !f.isZero(); s++)
                  (a = f.andln(255)), f.iushrn(8), (c[o - s - 1] = a);
              }
              return c;
            }),
            Math.clz32
              ? (o.prototype._countBits = function (e) {
                  return 32 - Math.clz32(e);
                })
              : (o.prototype._countBits = function (e) {
                  var t = e,
                    r = 0;
                  return (
                    t >= 4096 && ((r += 13), (t >>>= 13)),
                    t >= 64 && ((r += 7), (t >>>= 7)),
                    t >= 8 && ((r += 4), (t >>>= 4)),
                    t >= 2 && ((r += 2), (t >>>= 2)),
                    r + t
                  );
                }),
            (o.prototype._zeroBits = function (e) {
              if (0 === e) return 26;
              var t = e,
                r = 0;
              return (
                0 == (8191 & t) && ((r += 13), (t >>>= 13)),
                0 == (127 & t) && ((r += 7), (t >>>= 7)),
                0 == (15 & t) && ((r += 4), (t >>>= 4)),
                0 == (3 & t) && ((r += 2), (t >>>= 2)),
                0 == (1 & t) && r++,
                r
              );
            }),
            (o.prototype.bitLength = function () {
              var e = this.words[this.length - 1],
                t = this._countBits(e);
              return 26 * (this.length - 1) + t;
            }),
            (o.prototype.zeroBits = function () {
              if (this.isZero()) return 0;
              for (var e = 0, t = 0; t < this.length; t++) {
                var r = this._zeroBits(this.words[t]);
                if (((e += r), 26 !== r)) break;
              }
              return e;
            }),
            (o.prototype.byteLength = function () {
              return Math.ceil(this.bitLength() / 8);
            }),
            (o.prototype.toTwos = function (e) {
              return 0 !== this.negative
                ? this.abs().inotn(e).iaddn(1)
                : this.clone();
            }),
            (o.prototype.fromTwos = function (e) {
              return this.testn(e - 1)
                ? this.notn(e).iaddn(1).ineg()
                : this.clone();
            }),
            (o.prototype.isNeg = function () {
              return 0 !== this.negative;
            }),
            (o.prototype.neg = function () {
              return this.clone().ineg();
            }),
            (o.prototype.ineg = function () {
              return this.isZero() || (this.negative ^= 1), this;
            }),
            (o.prototype.iuor = function (e) {
              for (; this.length < e.length; ) this.words[this.length++] = 0;
              for (var t = 0; t < e.length; t++)
                this.words[t] = this.words[t] | e.words[t];
              return this.strip();
            }),
            (o.prototype.ior = function (e) {
              return n(0 == (this.negative | e.negative)), this.iuor(e);
            }),
            (o.prototype.or = function (e) {
              return this.length > e.length
                ? this.clone().ior(e)
                : e.clone().ior(this);
            }),
            (o.prototype.uor = function (e) {
              return this.length > e.length
                ? this.clone().iuor(e)
                : e.clone().iuor(this);
            }),
            (o.prototype.iuand = function (e) {
              var t;
              t = this.length > e.length ? e : this;
              for (var r = 0; r < t.length; r++)
                this.words[r] = this.words[r] & e.words[r];
              return (this.length = t.length), this.strip();
            }),
            (o.prototype.iand = function (e) {
              return n(0 == (this.negative | e.negative)), this.iuand(e);
            }),
            (o.prototype.and = function (e) {
              return this.length > e.length
                ? this.clone().iand(e)
                : e.clone().iand(this);
            }),
            (o.prototype.uand = function (e) {
              return this.length > e.length
                ? this.clone().iuand(e)
                : e.clone().iuand(this);
            }),
            (o.prototype.iuxor = function (e) {
              var t, r;
              this.length > e.length
                ? ((t = this), (r = e))
                : ((t = e), (r = this));
              for (var n = 0; n < r.length; n++)
                this.words[n] = t.words[n] ^ r.words[n];
              if (this !== t)
                for (; n < t.length; n++) this.words[n] = t.words[n];
              return (this.length = t.length), this.strip();
            }),
            (o.prototype.ixor = function (e) {
              return n(0 == (this.negative | e.negative)), this.iuxor(e);
            }),
            (o.prototype.xor = function (e) {
              return this.length > e.length
                ? this.clone().ixor(e)
                : e.clone().ixor(this);
            }),
            (o.prototype.uxor = function (e) {
              return this.length > e.length
                ? this.clone().iuxor(e)
                : e.clone().iuxor(this);
            }),
            (o.prototype.inotn = function (e) {
              n('number' == typeof e && e >= 0);
              var t = 0 | Math.ceil(e / 26),
                r = e % 26;
              this._expand(t), r > 0 && t--;
              for (var i = 0; i < t; i++)
                this.words[i] = 67108863 & ~this.words[i];
              return (
                r > 0 &&
                  (this.words[i] = ~this.words[i] & (67108863 >> (26 - r))),
                this.strip()
              );
            }),
            (o.prototype.notn = function (e) {
              return this.clone().inotn(e);
            }),
            (o.prototype.setn = function (e, t) {
              n('number' == typeof e && e >= 0);
              var r = (e / 26) | 0,
                i = e % 26;
              return (
                this._expand(r + 1),
                (this.words[r] = t
                  ? this.words[r] | (1 << i)
                  : this.words[r] & ~(1 << i)),
                this.strip()
              );
            }),
            (o.prototype.iadd = function (e) {
              var t, r, n;
              if (0 !== this.negative && 0 === e.negative)
                return (
                  (this.negative = 0),
                  (t = this.isub(e)),
                  (this.negative ^= 1),
                  this._normSign()
                );
              if (0 === this.negative && 0 !== e.negative)
                return (
                  (e.negative = 0),
                  (t = this.isub(e)),
                  (e.negative = 1),
                  t._normSign()
                );
              this.length > e.length
                ? ((r = this), (n = e))
                : ((r = e), (n = this));
              for (var i = 0, o = 0; o < n.length; o++)
                (t = (0 | r.words[o]) + (0 | n.words[o]) + i),
                  (this.words[o] = 67108863 & t),
                  (i = t >>> 26);
              for (; 0 !== i && o < r.length; o++)
                (t = (0 | r.words[o]) + i),
                  (this.words[o] = 67108863 & t),
                  (i = t >>> 26);
              if (((this.length = r.length), 0 !== i))
                (this.words[this.length] = i), this.length++;
              else if (r !== this)
                for (; o < r.length; o++) this.words[o] = r.words[o];
              return this;
            }),
            (o.prototype.add = function (e) {
              var t;
              return 0 !== e.negative && 0 === this.negative
                ? ((e.negative = 0), (t = this.sub(e)), (e.negative ^= 1), t)
                : 0 === e.negative && 0 !== this.negative
                ? ((this.negative = 0),
                  (t = e.sub(this)),
                  (this.negative = 1),
                  t)
                : this.length > e.length
                ? this.clone().iadd(e)
                : e.clone().iadd(this);
            }),
            (o.prototype.isub = function (e) {
              if (0 !== e.negative) {
                e.negative = 0;
                var t = this.iadd(e);
                return (e.negative = 1), t._normSign();
              }
              if (0 !== this.negative)
                return (
                  (this.negative = 0),
                  this.iadd(e),
                  (this.negative = 1),
                  this._normSign()
                );
              var r,
                n,
                i = this.cmp(e);
              if (0 === i)
                return (
                  (this.negative = 0),
                  (this.length = 1),
                  (this.words[0] = 0),
                  this
                );
              i > 0 ? ((r = this), (n = e)) : ((r = e), (n = this));
              for (var o = 0, a = 0; a < n.length; a++)
                (o = (t = (0 | r.words[a]) - (0 | n.words[a]) + o) >> 26),
                  (this.words[a] = 67108863 & t);
              for (; 0 !== o && a < r.length; a++)
                (o = (t = (0 | r.words[a]) + o) >> 26),
                  (this.words[a] = 67108863 & t);
              if (0 === o && a < r.length && r !== this)
                for (; a < r.length; a++) this.words[a] = r.words[a];
              return (
                (this.length = Math.max(this.length, a)),
                r !== this && (this.negative = 1),
                this.strip()
              );
            }),
            (o.prototype.sub = function (e) {
              return this.clone().isub(e);
            });
          var p = function (e, t, r) {
            var n,
              i,
              o,
              a = e.words,
              s = t.words,
              u = r.words,
              c = 0,
              f = 0 | a[0],
              l = 8191 & f,
              d = f >>> 13,
              p = 0 | a[1],
              h = 8191 & p,
              m = p >>> 13,
              b = 0 | a[2],
              g = 8191 & b,
              v = b >>> 13,
              y = 0 | a[3],
              w = 8191 & y,
              _ = y >>> 13,
              E = 0 | a[4],
              S = 8191 & E,
              x = E >>> 13,
              I = 0 | a[5],
              A = 8191 & I,
              k = I >>> 13,
              z = 0 | a[6],
              M = 8191 & z,
              T = z >>> 13,
              P = 0 | a[7],
              O = 8191 & P,
              j = P >>> 13,
              N = 0 | a[8],
              L = 8191 & N,
              q = N >>> 13,
              R = 0 | a[9],
              B = 8191 & R,
              C = R >>> 13,
              U = 0 | s[0],
              D = 8191 & U,
              K = U >>> 13,
              H = 0 | s[1],
              V = 8191 & H,
              F = H >>> 13,
              W = 0 | s[2],
              Y = 8191 & W,
              G = W >>> 13,
              J = 0 | s[3],
              $ = 8191 & J,
              Z = J >>> 13,
              Q = 0 | s[4],
              X = 8191 & Q,
              ee = Q >>> 13,
              te = 0 | s[5],
              re = 8191 & te,
              ne = te >>> 13,
              ie = 0 | s[6],
              oe = 8191 & ie,
              ae = ie >>> 13,
              se = 0 | s[7],
              ue = 8191 & se,
              ce = se >>> 13,
              fe = 0 | s[8],
              le = 8191 & fe,
              de = fe >>> 13,
              pe = 0 | s[9],
              he = 8191 & pe,
              me = pe >>> 13;
            (r.negative = e.negative ^ t.negative), (r.length = 19);
            var be =
              (((c + (n = Math.imul(l, D))) | 0) +
                ((8191 & (i = ((i = Math.imul(l, K)) + Math.imul(d, D)) | 0)) <<
                  13)) |
              0;
            (c =
              ((((o = Math.imul(d, K)) + (i >>> 13)) | 0) + (be >>> 26)) | 0),
              (be &= 67108863),
              (n = Math.imul(h, D)),
              (i = ((i = Math.imul(h, K)) + Math.imul(m, D)) | 0),
              (o = Math.imul(m, K));
            var ge =
              (((c + (n = (n + Math.imul(l, V)) | 0)) | 0) +
                ((8191 &
                  (i =
                    ((i = (i + Math.imul(l, F)) | 0) + Math.imul(d, V)) | 0)) <<
                  13)) |
              0;
            (c =
              ((((o = (o + Math.imul(d, F)) | 0) + (i >>> 13)) | 0) +
                (ge >>> 26)) |
              0),
              (ge &= 67108863),
              (n = Math.imul(g, D)),
              (i = ((i = Math.imul(g, K)) + Math.imul(v, D)) | 0),
              (o = Math.imul(v, K)),
              (n = (n + Math.imul(h, V)) | 0),
              (i = ((i = (i + Math.imul(h, F)) | 0) + Math.imul(m, V)) | 0),
              (o = (o + Math.imul(m, F)) | 0);
            var ve =
              (((c + (n = (n + Math.imul(l, Y)) | 0)) | 0) +
                ((8191 &
                  (i =
                    ((i = (i + Math.imul(l, G)) | 0) + Math.imul(d, Y)) | 0)) <<
                  13)) |
              0;
            (c =
              ((((o = (o + Math.imul(d, G)) | 0) + (i >>> 13)) | 0) +
                (ve >>> 26)) |
              0),
              (ve &= 67108863),
              (n = Math.imul(w, D)),
              (i = ((i = Math.imul(w, K)) + Math.imul(_, D)) | 0),
              (o = Math.imul(_, K)),
              (n = (n + Math.imul(g, V)) | 0),
              (i = ((i = (i + Math.imul(g, F)) | 0) + Math.imul(v, V)) | 0),
              (o = (o + Math.imul(v, F)) | 0),
              (n = (n + Math.imul(h, Y)) | 0),
              (i = ((i = (i + Math.imul(h, G)) | 0) + Math.imul(m, Y)) | 0),
              (o = (o + Math.imul(m, G)) | 0);
            var ye =
              (((c + (n = (n + Math.imul(l, $)) | 0)) | 0) +
                ((8191 &
                  (i =
                    ((i = (i + Math.imul(l, Z)) | 0) + Math.imul(d, $)) | 0)) <<
                  13)) |
              0;
            (c =
              ((((o = (o + Math.imul(d, Z)) | 0) + (i >>> 13)) | 0) +
                (ye >>> 26)) |
              0),
              (ye &= 67108863),
              (n = Math.imul(S, D)),
              (i = ((i = Math.imul(S, K)) + Math.imul(x, D)) | 0),
              (o = Math.imul(x, K)),
              (n = (n + Math.imul(w, V)) | 0),
              (i = ((i = (i + Math.imul(w, F)) | 0) + Math.imul(_, V)) | 0),
              (o = (o + Math.imul(_, F)) | 0),
              (n = (n + Math.imul(g, Y)) | 0),
              (i = ((i = (i + Math.imul(g, G)) | 0) + Math.imul(v, Y)) | 0),
              (o = (o + Math.imul(v, G)) | 0),
              (n = (n + Math.imul(h, $)) | 0),
              (i = ((i = (i + Math.imul(h, Z)) | 0) + Math.imul(m, $)) | 0),
              (o = (o + Math.imul(m, Z)) | 0);
            var we =
              (((c + (n = (n + Math.imul(l, X)) | 0)) | 0) +
                ((8191 &
                  (i =
                    ((i = (i + Math.imul(l, ee)) | 0) + Math.imul(d, X)) |
                    0)) <<
                  13)) |
              0;
            (c =
              ((((o = (o + Math.imul(d, ee)) | 0) + (i >>> 13)) | 0) +
                (we >>> 26)) |
              0),
              (we &= 67108863),
              (n = Math.imul(A, D)),
              (i = ((i = Math.imul(A, K)) + Math.imul(k, D)) | 0),
              (o = Math.imul(k, K)),
              (n = (n + Math.imul(S, V)) | 0),
              (i = ((i = (i + Math.imul(S, F)) | 0) + Math.imul(x, V)) | 0),
              (o = (o + Math.imul(x, F)) | 0),
              (n = (n + Math.imul(w, Y)) | 0),
              (i = ((i = (i + Math.imul(w, G)) | 0) + Math.imul(_, Y)) | 0),
              (o = (o + Math.imul(_, G)) | 0),
              (n = (n + Math.imul(g, $)) | 0),
              (i = ((i = (i + Math.imul(g, Z)) | 0) + Math.imul(v, $)) | 0),
              (o = (o + Math.imul(v, Z)) | 0),
              (n = (n + Math.imul(h, X)) | 0),
              (i = ((i = (i + Math.imul(h, ee)) | 0) + Math.imul(m, X)) | 0),
              (o = (o + Math.imul(m, ee)) | 0);
            var _e =
              (((c + (n = (n + Math.imul(l, re)) | 0)) | 0) +
                ((8191 &
                  (i =
                    ((i = (i + Math.imul(l, ne)) | 0) + Math.imul(d, re)) |
                    0)) <<
                  13)) |
              0;
            (c =
              ((((o = (o + Math.imul(d, ne)) | 0) + (i >>> 13)) | 0) +
                (_e >>> 26)) |
              0),
              (_e &= 67108863),
              (n = Math.imul(M, D)),
              (i = ((i = Math.imul(M, K)) + Math.imul(T, D)) | 0),
              (o = Math.imul(T, K)),
              (n = (n + Math.imul(A, V)) | 0),
              (i = ((i = (i + Math.imul(A, F)) | 0) + Math.imul(k, V)) | 0),
              (o = (o + Math.imul(k, F)) | 0),
              (n = (n + Math.imul(S, Y)) | 0),
              (i = ((i = (i + Math.imul(S, G)) | 0) + Math.imul(x, Y)) | 0),
              (o = (o + Math.imul(x, G)) | 0),
              (n = (n + Math.imul(w, $)) | 0),
              (i = ((i = (i + Math.imul(w, Z)) | 0) + Math.imul(_, $)) | 0),
              (o = (o + Math.imul(_, Z)) | 0),
              (n = (n + Math.imul(g, X)) | 0),
              (i = ((i = (i + Math.imul(g, ee)) | 0) + Math.imul(v, X)) | 0),
              (o = (o + Math.imul(v, ee)) | 0),
              (n = (n + Math.imul(h, re)) | 0),
              (i = ((i = (i + Math.imul(h, ne)) | 0) + Math.imul(m, re)) | 0),
              (o = (o + Math.imul(m, ne)) | 0);
            var Ee =
              (((c + (n = (n + Math.imul(l, oe)) | 0)) | 0) +
                ((8191 &
                  (i =
                    ((i = (i + Math.imul(l, ae)) | 0) + Math.imul(d, oe)) |
                    0)) <<
                  13)) |
              0;
            (c =
              ((((o = (o + Math.imul(d, ae)) | 0) + (i >>> 13)) | 0) +
                (Ee >>> 26)) |
              0),
              (Ee &= 67108863),
              (n = Math.imul(O, D)),
              (i = ((i = Math.imul(O, K)) + Math.imul(j, D)) | 0),
              (o = Math.imul(j, K)),
              (n = (n + Math.imul(M, V)) | 0),
              (i = ((i = (i + Math.imul(M, F)) | 0) + Math.imul(T, V)) | 0),
              (o = (o + Math.imul(T, F)) | 0),
              (n = (n + Math.imul(A, Y)) | 0),
              (i = ((i = (i + Math.imul(A, G)) | 0) + Math.imul(k, Y)) | 0),
              (o = (o + Math.imul(k, G)) | 0),
              (n = (n + Math.imul(S, $)) | 0),
              (i = ((i = (i + Math.imul(S, Z)) | 0) + Math.imul(x, $)) | 0),
              (o = (o + Math.imul(x, Z)) | 0),
              (n = (n + Math.imul(w, X)) | 0),
              (i = ((i = (i + Math.imul(w, ee)) | 0) + Math.imul(_, X)) | 0),
              (o = (o + Math.imul(_, ee)) | 0),
              (n = (n + Math.imul(g, re)) | 0),
              (i = ((i = (i + Math.imul(g, ne)) | 0) + Math.imul(v, re)) | 0),
              (o = (o + Math.imul(v, ne)) | 0),
              (n = (n + Math.imul(h, oe)) | 0),
              (i = ((i = (i + Math.imul(h, ae)) | 0) + Math.imul(m, oe)) | 0),
              (o = (o + Math.imul(m, ae)) | 0);
            var Se =
              (((c + (n = (n + Math.imul(l, ue)) | 0)) | 0) +
                ((8191 &
                  (i =
                    ((i = (i + Math.imul(l, ce)) | 0) + Math.imul(d, ue)) |
                    0)) <<
                  13)) |
              0;
            (c =
              ((((o = (o + Math.imul(d, ce)) | 0) + (i >>> 13)) | 0) +
                (Se >>> 26)) |
              0),
              (Se &= 67108863),
              (n = Math.imul(L, D)),
              (i = ((i = Math.imul(L, K)) + Math.imul(q, D)) | 0),
              (o = Math.imul(q, K)),
              (n = (n + Math.imul(O, V)) | 0),
              (i = ((i = (i + Math.imul(O, F)) | 0) + Math.imul(j, V)) | 0),
              (o = (o + Math.imul(j, F)) | 0),
              (n = (n + Math.imul(M, Y)) | 0),
              (i = ((i = (i + Math.imul(M, G)) | 0) + Math.imul(T, Y)) | 0),
              (o = (o + Math.imul(T, G)) | 0),
              (n = (n + Math.imul(A, $)) | 0),
              (i = ((i = (i + Math.imul(A, Z)) | 0) + Math.imul(k, $)) | 0),
              (o = (o + Math.imul(k, Z)) | 0),
              (n = (n + Math.imul(S, X)) | 0),
              (i = ((i = (i + Math.imul(S, ee)) | 0) + Math.imul(x, X)) | 0),
              (o = (o + Math.imul(x, ee)) | 0),
              (n = (n + Math.imul(w, re)) | 0),
              (i = ((i = (i + Math.imul(w, ne)) | 0) + Math.imul(_, re)) | 0),
              (o = (o + Math.imul(_, ne)) | 0),
              (n = (n + Math.imul(g, oe)) | 0),
              (i = ((i = (i + Math.imul(g, ae)) | 0) + Math.imul(v, oe)) | 0),
              (o = (o + Math.imul(v, ae)) | 0),
              (n = (n + Math.imul(h, ue)) | 0),
              (i = ((i = (i + Math.imul(h, ce)) | 0) + Math.imul(m, ue)) | 0),
              (o = (o + Math.imul(m, ce)) | 0);
            var xe =
              (((c + (n = (n + Math.imul(l, le)) | 0)) | 0) +
                ((8191 &
                  (i =
                    ((i = (i + Math.imul(l, de)) | 0) + Math.imul(d, le)) |
                    0)) <<
                  13)) |
              0;
            (c =
              ((((o = (o + Math.imul(d, de)) | 0) + (i >>> 13)) | 0) +
                (xe >>> 26)) |
              0),
              (xe &= 67108863),
              (n = Math.imul(B, D)),
              (i = ((i = Math.imul(B, K)) + Math.imul(C, D)) | 0),
              (o = Math.imul(C, K)),
              (n = (n + Math.imul(L, V)) | 0),
              (i = ((i = (i + Math.imul(L, F)) | 0) + Math.imul(q, V)) | 0),
              (o = (o + Math.imul(q, F)) | 0),
              (n = (n + Math.imul(O, Y)) | 0),
              (i = ((i = (i + Math.imul(O, G)) | 0) + Math.imul(j, Y)) | 0),
              (o = (o + Math.imul(j, G)) | 0),
              (n = (n + Math.imul(M, $)) | 0),
              (i = ((i = (i + Math.imul(M, Z)) | 0) + Math.imul(T, $)) | 0),
              (o = (o + Math.imul(T, Z)) | 0),
              (n = (n + Math.imul(A, X)) | 0),
              (i = ((i = (i + Math.imul(A, ee)) | 0) + Math.imul(k, X)) | 0),
              (o = (o + Math.imul(k, ee)) | 0),
              (n = (n + Math.imul(S, re)) | 0),
              (i = ((i = (i + Math.imul(S, ne)) | 0) + Math.imul(x, re)) | 0),
              (o = (o + Math.imul(x, ne)) | 0),
              (n = (n + Math.imul(w, oe)) | 0),
              (i = ((i = (i + Math.imul(w, ae)) | 0) + Math.imul(_, oe)) | 0),
              (o = (o + Math.imul(_, ae)) | 0),
              (n = (n + Math.imul(g, ue)) | 0),
              (i = ((i = (i + Math.imul(g, ce)) | 0) + Math.imul(v, ue)) | 0),
              (o = (o + Math.imul(v, ce)) | 0),
              (n = (n + Math.imul(h, le)) | 0),
              (i = ((i = (i + Math.imul(h, de)) | 0) + Math.imul(m, le)) | 0),
              (o = (o + Math.imul(m, de)) | 0);
            var Ie =
              (((c + (n = (n + Math.imul(l, he)) | 0)) | 0) +
                ((8191 &
                  (i =
                    ((i = (i + Math.imul(l, me)) | 0) + Math.imul(d, he)) |
                    0)) <<
                  13)) |
              0;
            (c =
              ((((o = (o + Math.imul(d, me)) | 0) + (i >>> 13)) | 0) +
                (Ie >>> 26)) |
              0),
              (Ie &= 67108863),
              (n = Math.imul(B, V)),
              (i = ((i = Math.imul(B, F)) + Math.imul(C, V)) | 0),
              (o = Math.imul(C, F)),
              (n = (n + Math.imul(L, Y)) | 0),
              (i = ((i = (i + Math.imul(L, G)) | 0) + Math.imul(q, Y)) | 0),
              (o = (o + Math.imul(q, G)) | 0),
              (n = (n + Math.imul(O, $)) | 0),
              (i = ((i = (i + Math.imul(O, Z)) | 0) + Math.imul(j, $)) | 0),
              (o = (o + Math.imul(j, Z)) | 0),
              (n = (n + Math.imul(M, X)) | 0),
              (i = ((i = (i + Math.imul(M, ee)) | 0) + Math.imul(T, X)) | 0),
              (o = (o + Math.imul(T, ee)) | 0),
              (n = (n + Math.imul(A, re)) | 0),
              (i = ((i = (i + Math.imul(A, ne)) | 0) + Math.imul(k, re)) | 0),
              (o = (o + Math.imul(k, ne)) | 0),
              (n = (n + Math.imul(S, oe)) | 0),
              (i = ((i = (i + Math.imul(S, ae)) | 0) + Math.imul(x, oe)) | 0),
              (o = (o + Math.imul(x, ae)) | 0),
              (n = (n + Math.imul(w, ue)) | 0),
              (i = ((i = (i + Math.imul(w, ce)) | 0) + Math.imul(_, ue)) | 0),
              (o = (o + Math.imul(_, ce)) | 0),
              (n = (n + Math.imul(g, le)) | 0),
              (i = ((i = (i + Math.imul(g, de)) | 0) + Math.imul(v, le)) | 0),
              (o = (o + Math.imul(v, de)) | 0);
            var Ae =
              (((c + (n = (n + Math.imul(h, he)) | 0)) | 0) +
                ((8191 &
                  (i =
                    ((i = (i + Math.imul(h, me)) | 0) + Math.imul(m, he)) |
                    0)) <<
                  13)) |
              0;
            (c =
              ((((o = (o + Math.imul(m, me)) | 0) + (i >>> 13)) | 0) +
                (Ae >>> 26)) |
              0),
              (Ae &= 67108863),
              (n = Math.imul(B, Y)),
              (i = ((i = Math.imul(B, G)) + Math.imul(C, Y)) | 0),
              (o = Math.imul(C, G)),
              (n = (n + Math.imul(L, $)) | 0),
              (i = ((i = (i + Math.imul(L, Z)) | 0) + Math.imul(q, $)) | 0),
              (o = (o + Math.imul(q, Z)) | 0),
              (n = (n + Math.imul(O, X)) | 0),
              (i = ((i = (i + Math.imul(O, ee)) | 0) + Math.imul(j, X)) | 0),
              (o = (o + Math.imul(j, ee)) | 0),
              (n = (n + Math.imul(M, re)) | 0),
              (i = ((i = (i + Math.imul(M, ne)) | 0) + Math.imul(T, re)) | 0),
              (o = (o + Math.imul(T, ne)) | 0),
              (n = (n + Math.imul(A, oe)) | 0),
              (i = ((i = (i + Math.imul(A, ae)) | 0) + Math.imul(k, oe)) | 0),
              (o = (o + Math.imul(k, ae)) | 0),
              (n = (n + Math.imul(S, ue)) | 0),
              (i = ((i = (i + Math.imul(S, ce)) | 0) + Math.imul(x, ue)) | 0),
              (o = (o + Math.imul(x, ce)) | 0),
              (n = (n + Math.imul(w, le)) | 0),
              (i = ((i = (i + Math.imul(w, de)) | 0) + Math.imul(_, le)) | 0),
              (o = (o + Math.imul(_, de)) | 0);
            var ke =
              (((c + (n = (n + Math.imul(g, he)) | 0)) | 0) +
                ((8191 &
                  (i =
                    ((i = (i + Math.imul(g, me)) | 0) + Math.imul(v, he)) |
                    0)) <<
                  13)) |
              0;
            (c =
              ((((o = (o + Math.imul(v, me)) | 0) + (i >>> 13)) | 0) +
                (ke >>> 26)) |
              0),
              (ke &= 67108863),
              (n = Math.imul(B, $)),
              (i = ((i = Math.imul(B, Z)) + Math.imul(C, $)) | 0),
              (o = Math.imul(C, Z)),
              (n = (n + Math.imul(L, X)) | 0),
              (i = ((i = (i + Math.imul(L, ee)) | 0) + Math.imul(q, X)) | 0),
              (o = (o + Math.imul(q, ee)) | 0),
              (n = (n + Math.imul(O, re)) | 0),
              (i = ((i = (i + Math.imul(O, ne)) | 0) + Math.imul(j, re)) | 0),
              (o = (o + Math.imul(j, ne)) | 0),
              (n = (n + Math.imul(M, oe)) | 0),
              (i = ((i = (i + Math.imul(M, ae)) | 0) + Math.imul(T, oe)) | 0),
              (o = (o + Math.imul(T, ae)) | 0),
              (n = (n + Math.imul(A, ue)) | 0),
              (i = ((i = (i + Math.imul(A, ce)) | 0) + Math.imul(k, ue)) | 0),
              (o = (o + Math.imul(k, ce)) | 0),
              (n = (n + Math.imul(S, le)) | 0),
              (i = ((i = (i + Math.imul(S, de)) | 0) + Math.imul(x, le)) | 0),
              (o = (o + Math.imul(x, de)) | 0);
            var ze =
              (((c + (n = (n + Math.imul(w, he)) | 0)) | 0) +
                ((8191 &
                  (i =
                    ((i = (i + Math.imul(w, me)) | 0) + Math.imul(_, he)) |
                    0)) <<
                  13)) |
              0;
            (c =
              ((((o = (o + Math.imul(_, me)) | 0) + (i >>> 13)) | 0) +
                (ze >>> 26)) |
              0),
              (ze &= 67108863),
              (n = Math.imul(B, X)),
              (i = ((i = Math.imul(B, ee)) + Math.imul(C, X)) | 0),
              (o = Math.imul(C, ee)),
              (n = (n + Math.imul(L, re)) | 0),
              (i = ((i = (i + Math.imul(L, ne)) | 0) + Math.imul(q, re)) | 0),
              (o = (o + Math.imul(q, ne)) | 0),
              (n = (n + Math.imul(O, oe)) | 0),
              (i = ((i = (i + Math.imul(O, ae)) | 0) + Math.imul(j, oe)) | 0),
              (o = (o + Math.imul(j, ae)) | 0),
              (n = (n + Math.imul(M, ue)) | 0),
              (i = ((i = (i + Math.imul(M, ce)) | 0) + Math.imul(T, ue)) | 0),
              (o = (o + Math.imul(T, ce)) | 0),
              (n = (n + Math.imul(A, le)) | 0),
              (i = ((i = (i + Math.imul(A, de)) | 0) + Math.imul(k, le)) | 0),
              (o = (o + Math.imul(k, de)) | 0);
            var Me =
              (((c + (n = (n + Math.imul(S, he)) | 0)) | 0) +
                ((8191 &
                  (i =
                    ((i = (i + Math.imul(S, me)) | 0) + Math.imul(x, he)) |
                    0)) <<
                  13)) |
              0;
            (c =
              ((((o = (o + Math.imul(x, me)) | 0) + (i >>> 13)) | 0) +
                (Me >>> 26)) |
              0),
              (Me &= 67108863),
              (n = Math.imul(B, re)),
              (i = ((i = Math.imul(B, ne)) + Math.imul(C, re)) | 0),
              (o = Math.imul(C, ne)),
              (n = (n + Math.imul(L, oe)) | 0),
              (i = ((i = (i + Math.imul(L, ae)) | 0) + Math.imul(q, oe)) | 0),
              (o = (o + Math.imul(q, ae)) | 0),
              (n = (n + Math.imul(O, ue)) | 0),
              (i = ((i = (i + Math.imul(O, ce)) | 0) + Math.imul(j, ue)) | 0),
              (o = (o + Math.imul(j, ce)) | 0),
              (n = (n + Math.imul(M, le)) | 0),
              (i = ((i = (i + Math.imul(M, de)) | 0) + Math.imul(T, le)) | 0),
              (o = (o + Math.imul(T, de)) | 0);
            var Te =
              (((c + (n = (n + Math.imul(A, he)) | 0)) | 0) +
                ((8191 &
                  (i =
                    ((i = (i + Math.imul(A, me)) | 0) + Math.imul(k, he)) |
                    0)) <<
                  13)) |
              0;
            (c =
              ((((o = (o + Math.imul(k, me)) | 0) + (i >>> 13)) | 0) +
                (Te >>> 26)) |
              0),
              (Te &= 67108863),
              (n = Math.imul(B, oe)),
              (i = ((i = Math.imul(B, ae)) + Math.imul(C, oe)) | 0),
              (o = Math.imul(C, ae)),
              (n = (n + Math.imul(L, ue)) | 0),
              (i = ((i = (i + Math.imul(L, ce)) | 0) + Math.imul(q, ue)) | 0),
              (o = (o + Math.imul(q, ce)) | 0),
              (n = (n + Math.imul(O, le)) | 0),
              (i = ((i = (i + Math.imul(O, de)) | 0) + Math.imul(j, le)) | 0),
              (o = (o + Math.imul(j, de)) | 0);
            var Pe =
              (((c + (n = (n + Math.imul(M, he)) | 0)) | 0) +
                ((8191 &
                  (i =
                    ((i = (i + Math.imul(M, me)) | 0) + Math.imul(T, he)) |
                    0)) <<
                  13)) |
              0;
            (c =
              ((((o = (o + Math.imul(T, me)) | 0) + (i >>> 13)) | 0) +
                (Pe >>> 26)) |
              0),
              (Pe &= 67108863),
              (n = Math.imul(B, ue)),
              (i = ((i = Math.imul(B, ce)) + Math.imul(C, ue)) | 0),
              (o = Math.imul(C, ce)),
              (n = (n + Math.imul(L, le)) | 0),
              (i = ((i = (i + Math.imul(L, de)) | 0) + Math.imul(q, le)) | 0),
              (o = (o + Math.imul(q, de)) | 0);
            var Oe =
              (((c + (n = (n + Math.imul(O, he)) | 0)) | 0) +
                ((8191 &
                  (i =
                    ((i = (i + Math.imul(O, me)) | 0) + Math.imul(j, he)) |
                    0)) <<
                  13)) |
              0;
            (c =
              ((((o = (o + Math.imul(j, me)) | 0) + (i >>> 13)) | 0) +
                (Oe >>> 26)) |
              0),
              (Oe &= 67108863),
              (n = Math.imul(B, le)),
              (i = ((i = Math.imul(B, de)) + Math.imul(C, le)) | 0),
              (o = Math.imul(C, de));
            var je =
              (((c + (n = (n + Math.imul(L, he)) | 0)) | 0) +
                ((8191 &
                  (i =
                    ((i = (i + Math.imul(L, me)) | 0) + Math.imul(q, he)) |
                    0)) <<
                  13)) |
              0;
            (c =
              ((((o = (o + Math.imul(q, me)) | 0) + (i >>> 13)) | 0) +
                (je >>> 26)) |
              0),
              (je &= 67108863);
            var Ne =
              (((c + (n = Math.imul(B, he))) | 0) +
                ((8191 &
                  (i = ((i = Math.imul(B, me)) + Math.imul(C, he)) | 0)) <<
                  13)) |
              0;
            return (
              (c =
                ((((o = Math.imul(C, me)) + (i >>> 13)) | 0) + (Ne >>> 26)) |
                0),
              (Ne &= 67108863),
              (u[0] = be),
              (u[1] = ge),
              (u[2] = ve),
              (u[3] = ye),
              (u[4] = we),
              (u[5] = _e),
              (u[6] = Ee),
              (u[7] = Se),
              (u[8] = xe),
              (u[9] = Ie),
              (u[10] = Ae),
              (u[11] = ke),
              (u[12] = ze),
              (u[13] = Me),
              (u[14] = Te),
              (u[15] = Pe),
              (u[16] = Oe),
              (u[17] = je),
              (u[18] = Ne),
              0 !== c && ((u[19] = c), r.length++),
              r
            );
          };
          function h(e, t, r) {
            return new m().mulp(e, t, r);
          }
          function m(e, t) {
            (this.x = e), (this.y = t);
          }
          Math.imul || (p = d),
            (o.prototype.mulTo = function (e, t) {
              var r = this.length + e.length;
              return 10 === this.length && 10 === e.length
                ? p(this, e, t)
                : r < 63
                ? d(this, e, t)
                : r < 1024
                ? (function (e, t, r) {
                    (r.negative = t.negative ^ e.negative),
                      (r.length = e.length + t.length);
                    for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                      var a = i;
                      i = 0;
                      for (
                        var s = 67108863 & n,
                          u = Math.min(o, t.length - 1),
                          c = Math.max(0, o - e.length + 1);
                        c <= u;
                        c++
                      ) {
                        var f = o - c,
                          l = (0 | e.words[f]) * (0 | t.words[c]),
                          d = 67108863 & l;
                        (s = 67108863 & (d = (d + s) | 0)),
                          (i +=
                            (a =
                              ((a = (a + ((l / 67108864) | 0)) | 0) +
                                (d >>> 26)) |
                              0) >>> 26),
                          (a &= 67108863);
                      }
                      (r.words[o] = s), (n = a), (a = i);
                    }
                    return 0 !== n ? (r.words[o] = n) : r.length--, r.strip();
                  })(this, e, t)
                : h(this, e, t);
            }),
            (m.prototype.makeRBT = function (e) {
              for (
                var t = new Array(e), r = o.prototype._countBits(e) - 1, n = 0;
                n < e;
                n++
              )
                t[n] = this.revBin(n, r, e);
              return t;
            }),
            (m.prototype.revBin = function (e, t, r) {
              if (0 === e || e === r - 1) return e;
              for (var n = 0, i = 0; i < t; i++)
                (n |= (1 & e) << (t - i - 1)), (e >>= 1);
              return n;
            }),
            (m.prototype.permute = function (e, t, r, n, i, o) {
              for (var a = 0; a < o; a++) (n[a] = t[e[a]]), (i[a] = r[e[a]]);
            }),
            (m.prototype.transform = function (e, t, r, n, i, o) {
              this.permute(o, e, t, r, n, i);
              for (var a = 1; a < i; a <<= 1)
                for (
                  var s = a << 1,
                    u = Math.cos((2 * Math.PI) / s),
                    c = Math.sin((2 * Math.PI) / s),
                    f = 0;
                  f < i;
                  f += s
                )
                  for (var l = u, d = c, p = 0; p < a; p++) {
                    var h = r[f + p],
                      m = n[f + p],
                      b = r[f + p + a],
                      g = n[f + p + a],
                      v = l * b - d * g;
                    (g = l * g + d * b),
                      (b = v),
                      (r[f + p] = h + b),
                      (n[f + p] = m + g),
                      (r[f + p + a] = h - b),
                      (n[f + p + a] = m - g),
                      p !== s &&
                        ((v = u * l - c * d), (d = u * d + c * l), (l = v));
                  }
            }),
            (m.prototype.guessLen13b = function (e, t) {
              var r = 1 | Math.max(t, e),
                n = 1 & r,
                i = 0;
              for (r = (r / 2) | 0; r; r >>>= 1) i++;
              return 1 << (i + 1 + n);
            }),
            (m.prototype.conjugate = function (e, t, r) {
              if (!(r <= 1))
                for (var n = 0; n < r / 2; n++) {
                  var i = e[n];
                  (e[n] = e[r - n - 1]),
                    (e[r - n - 1] = i),
                    (i = t[n]),
                    (t[n] = -t[r - n - 1]),
                    (t[r - n - 1] = -i);
                }
            }),
            (m.prototype.normalize13b = function (e, t) {
              for (var r = 0, n = 0; n < t / 2; n++) {
                var i =
                  8192 * Math.round(e[2 * n + 1] / t) +
                  Math.round(e[2 * n] / t) +
                  r;
                (e[n] = 67108863 & i),
                  (r = i < 67108864 ? 0 : (i / 67108864) | 0);
              }
              return e;
            }),
            (m.prototype.convert13b = function (e, t, r, i) {
              for (var o = 0, a = 0; a < t; a++)
                (o += 0 | e[a]),
                  (r[2 * a] = 8191 & o),
                  (o >>>= 13),
                  (r[2 * a + 1] = 8191 & o),
                  (o >>>= 13);
              for (a = 2 * t; a < i; ++a) r[a] = 0;
              n(0 === o), n(0 == (-8192 & o));
            }),
            (m.prototype.stub = function (e) {
              for (var t = new Array(e), r = 0; r < e; r++) t[r] = 0;
              return t;
            }),
            (m.prototype.mulp = function (e, t, r) {
              var n = 2 * this.guessLen13b(e.length, t.length),
                i = this.makeRBT(n),
                o = this.stub(n),
                a = new Array(n),
                s = new Array(n),
                u = new Array(n),
                c = new Array(n),
                f = new Array(n),
                l = new Array(n),
                d = r.words;
              (d.length = n),
                this.convert13b(e.words, e.length, a, n),
                this.convert13b(t.words, t.length, c, n),
                this.transform(a, o, s, u, n, i),
                this.transform(c, o, f, l, n, i);
              for (var p = 0; p < n; p++) {
                var h = s[p] * f[p] - u[p] * l[p];
                (u[p] = s[p] * l[p] + u[p] * f[p]), (s[p] = h);
              }
              return (
                this.conjugate(s, u, n),
                this.transform(s, u, d, o, n, i),
                this.conjugate(d, o, n),
                this.normalize13b(d, n),
                (r.negative = e.negative ^ t.negative),
                (r.length = e.length + t.length),
                r.strip()
              );
            }),
            (o.prototype.mul = function (e) {
              var t = new o(null);
              return (
                (t.words = new Array(this.length + e.length)), this.mulTo(e, t)
              );
            }),
            (o.prototype.mulf = function (e) {
              var t = new o(null);
              return (
                (t.words = new Array(this.length + e.length)), h(this, e, t)
              );
            }),
            (o.prototype.imul = function (e) {
              return this.clone().mulTo(e, this);
            }),
            (o.prototype.imuln = function (e) {
              n('number' == typeof e), n(e < 67108864);
              for (var t = 0, r = 0; r < this.length; r++) {
                var i = (0 | this.words[r]) * e,
                  o = (67108863 & i) + (67108863 & t);
                (t >>= 26),
                  (t += (i / 67108864) | 0),
                  (t += o >>> 26),
                  (this.words[r] = 67108863 & o);
              }
              return 0 !== t && ((this.words[r] = t), this.length++), this;
            }),
            (o.prototype.muln = function (e) {
              return this.clone().imuln(e);
            }),
            (o.prototype.sqr = function () {
              return this.mul(this);
            }),
            (o.prototype.isqr = function () {
              return this.imul(this.clone());
            }),
            (o.prototype.pow = function (e) {
              var t = (function (e) {
                for (
                  var t = new Array(e.bitLength()), r = 0;
                  r < t.length;
                  r++
                ) {
                  var n = (r / 26) | 0,
                    i = r % 26;
                  t[r] = (e.words[n] & (1 << i)) >>> i;
                }
                return t;
              })(e);
              if (0 === t.length) return new o(1);
              for (
                var r = this, n = 0;
                n < t.length && 0 === t[n];
                n++, r = r.sqr()
              );
              if (++n < t.length)
                for (var i = r.sqr(); n < t.length; n++, i = i.sqr())
                  0 !== t[n] && (r = r.mul(i));
              return r;
            }),
            (o.prototype.iushln = function (e) {
              n('number' == typeof e && e >= 0);
              var t,
                r = e % 26,
                i = (e - r) / 26,
                o = (67108863 >>> (26 - r)) << (26 - r);
              if (0 !== r) {
                var a = 0;
                for (t = 0; t < this.length; t++) {
                  var s = this.words[t] & o,
                    u = ((0 | this.words[t]) - s) << r;
                  (this.words[t] = u | a), (a = s >>> (26 - r));
                }
                a && ((this.words[t] = a), this.length++);
              }
              if (0 !== i) {
                for (t = this.length - 1; t >= 0; t--)
                  this.words[t + i] = this.words[t];
                for (t = 0; t < i; t++) this.words[t] = 0;
                this.length += i;
              }
              return this.strip();
            }),
            (o.prototype.ishln = function (e) {
              return n(0 === this.negative), this.iushln(e);
            }),
            (o.prototype.iushrn = function (e, t, r) {
              var i;
              n('number' == typeof e && e >= 0),
                (i = t ? (t - (t % 26)) / 26 : 0);
              var o = e % 26,
                a = Math.min((e - o) / 26, this.length),
                s = 67108863 ^ ((67108863 >>> o) << o),
                u = r;
              if (((i -= a), (i = Math.max(0, i)), u)) {
                for (var c = 0; c < a; c++) u.words[c] = this.words[c];
                u.length = a;
              }
              if (0 === a);
              else if (this.length > a)
                for (this.length -= a, c = 0; c < this.length; c++)
                  this.words[c] = this.words[c + a];
              else (this.words[0] = 0), (this.length = 1);
              var f = 0;
              for (c = this.length - 1; c >= 0 && (0 !== f || c >= i); c--) {
                var l = 0 | this.words[c];
                (this.words[c] = (f << (26 - o)) | (l >>> o)), (f = l & s);
              }
              return (
                u && 0 !== f && (u.words[u.length++] = f),
                0 === this.length && ((this.words[0] = 0), (this.length = 1)),
                this.strip()
              );
            }),
            (o.prototype.ishrn = function (e, t, r) {
              return n(0 === this.negative), this.iushrn(e, t, r);
            }),
            (o.prototype.shln = function (e) {
              return this.clone().ishln(e);
            }),
            (o.prototype.ushln = function (e) {
              return this.clone().iushln(e);
            }),
            (o.prototype.shrn = function (e) {
              return this.clone().ishrn(e);
            }),
            (o.prototype.ushrn = function (e) {
              return this.clone().iushrn(e);
            }),
            (o.prototype.testn = function (e) {
              n('number' == typeof e && e >= 0);
              var t = e % 26,
                r = (e - t) / 26,
                i = 1 << t;
              return !(this.length <= r) && !!(this.words[r] & i);
            }),
            (o.prototype.imaskn = function (e) {
              n('number' == typeof e && e >= 0);
              var t = e % 26,
                r = (e - t) / 26;
              if (
                (n(
                  0 === this.negative,
                  'imaskn works only with positive numbers'
                ),
                this.length <= r)
              )
                return this;
              if (
                (0 !== t && r++,
                (this.length = Math.min(r, this.length)),
                0 !== t)
              ) {
                var i = 67108863 ^ ((67108863 >>> t) << t);
                this.words[this.length - 1] &= i;
              }
              return this.strip();
            }),
            (o.prototype.maskn = function (e) {
              return this.clone().imaskn(e);
            }),
            (o.prototype.iaddn = function (e) {
              return (
                n('number' == typeof e),
                n(e < 67108864),
                e < 0
                  ? this.isubn(-e)
                  : 0 !== this.negative
                  ? 1 === this.length && (0 | this.words[0]) < e
                    ? ((this.words[0] = e - (0 | this.words[0])),
                      (this.negative = 0),
                      this)
                    : ((this.negative = 0),
                      this.isubn(e),
                      (this.negative = 1),
                      this)
                  : this._iaddn(e)
              );
            }),
            (o.prototype._iaddn = function (e) {
              this.words[0] += e;
              for (var t = 0; t < this.length && this.words[t] >= 67108864; t++)
                (this.words[t] -= 67108864),
                  t === this.length - 1
                    ? (this.words[t + 1] = 1)
                    : this.words[t + 1]++;
              return (this.length = Math.max(this.length, t + 1)), this;
            }),
            (o.prototype.isubn = function (e) {
              if ((n('number' == typeof e), n(e < 67108864), e < 0))
                return this.iaddn(-e);
              if (0 !== this.negative)
                return (
                  (this.negative = 0), this.iaddn(e), (this.negative = 1), this
                );
              if (
                ((this.words[0] -= e), 1 === this.length && this.words[0] < 0)
              )
                (this.words[0] = -this.words[0]), (this.negative = 1);
              else
                for (var t = 0; t < this.length && this.words[t] < 0; t++)
                  (this.words[t] += 67108864), (this.words[t + 1] -= 1);
              return this.strip();
            }),
            (o.prototype.addn = function (e) {
              return this.clone().iaddn(e);
            }),
            (o.prototype.subn = function (e) {
              return this.clone().isubn(e);
            }),
            (o.prototype.iabs = function () {
              return (this.negative = 0), this;
            }),
            (o.prototype.abs = function () {
              return this.clone().iabs();
            }),
            (o.prototype._ishlnsubmul = function (e, t, r) {
              var i,
                o,
                a = e.length + r;
              this._expand(a);
              var s = 0;
              for (i = 0; i < e.length; i++) {
                o = (0 | this.words[i + r]) + s;
                var u = (0 | e.words[i]) * t;
                (s = ((o -= 67108863 & u) >> 26) - ((u / 67108864) | 0)),
                  (this.words[i + r] = 67108863 & o);
              }
              for (; i < this.length - r; i++)
                (s = (o = (0 | this.words[i + r]) + s) >> 26),
                  (this.words[i + r] = 67108863 & o);
              if (0 === s) return this.strip();
              for (n(-1 === s), s = 0, i = 0; i < this.length; i++)
                (s = (o = -(0 | this.words[i]) + s) >> 26),
                  (this.words[i] = 67108863 & o);
              return (this.negative = 1), this.strip();
            }),
            (o.prototype._wordDiv = function (e, t) {
              var r = (this.length, e.length),
                n = this.clone(),
                i = e,
                a = 0 | i.words[i.length - 1];
              0 !== (r = 26 - this._countBits(a)) &&
                ((i = i.ushln(r)),
                n.iushln(r),
                (a = 0 | i.words[i.length - 1]));
              var s,
                u = n.length - i.length;
              if ('mod' !== t) {
                ((s = new o(null)).length = u + 1),
                  (s.words = new Array(s.length));
                for (var c = 0; c < s.length; c++) s.words[c] = 0;
              }
              var f = n.clone()._ishlnsubmul(i, 1, u);
              0 === f.negative && ((n = f), s && (s.words[u] = 1));
              for (var l = u - 1; l >= 0; l--) {
                var d =
                  67108864 * (0 | n.words[i.length + l]) +
                  (0 | n.words[i.length + l - 1]);
                for (
                  d = Math.min((d / a) | 0, 67108863), n._ishlnsubmul(i, d, l);
                  0 !== n.negative;

                )
                  d--,
                    (n.negative = 0),
                    n._ishlnsubmul(i, 1, l),
                    n.isZero() || (n.negative ^= 1);
                s && (s.words[l] = d);
              }
              return (
                s && s.strip(),
                n.strip(),
                'div' !== t && 0 !== r && n.iushrn(r),
                { div: s || null, mod: n }
              );
            }),
            (o.prototype.divmod = function (e, t, r) {
              return (
                n(!e.isZero()),
                this.isZero()
                  ? { div: new o(0), mod: new o(0) }
                  : 0 !== this.negative && 0 === e.negative
                  ? ((s = this.neg().divmod(e, t)),
                    'mod' !== t && (i = s.div.neg()),
                    'div' !== t &&
                      ((a = s.mod.neg()), r && 0 !== a.negative && a.iadd(e)),
                    { div: i, mod: a })
                  : 0 === this.negative && 0 !== e.negative
                  ? ((s = this.divmod(e.neg(), t)),
                    'mod' !== t && (i = s.div.neg()),
                    { div: i, mod: s.mod })
                  : 0 != (this.negative & e.negative)
                  ? ((s = this.neg().divmod(e.neg(), t)),
                    'div' !== t &&
                      ((a = s.mod.neg()), r && 0 !== a.negative && a.isub(e)),
                    { div: s.div, mod: a })
                  : e.length > this.length || this.cmp(e) < 0
                  ? { div: new o(0), mod: this }
                  : 1 === e.length
                  ? 'div' === t
                    ? { div: this.divn(e.words[0]), mod: null }
                    : 'mod' === t
                    ? { div: null, mod: new o(this.modn(e.words[0])) }
                    : {
                        div: this.divn(e.words[0]),
                        mod: new o(this.modn(e.words[0])),
                      }
                  : this._wordDiv(e, t)
              );
              var i, a, s;
            }),
            (o.prototype.div = function (e) {
              return this.divmod(e, 'div', !1).div;
            }),
            (o.prototype.mod = function (e) {
              return this.divmod(e, 'mod', !1).mod;
            }),
            (o.prototype.umod = function (e) {
              return this.divmod(e, 'mod', !0).mod;
            }),
            (o.prototype.divRound = function (e) {
              var t = this.divmod(e);
              if (t.mod.isZero()) return t.div;
              var r = 0 !== t.div.negative ? t.mod.isub(e) : t.mod,
                n = e.ushrn(1),
                i = e.andln(1),
                o = r.cmp(n);
              return o < 0 || (1 === i && 0 === o)
                ? t.div
                : 0 !== t.div.negative
                ? t.div.isubn(1)
                : t.div.iaddn(1);
            }),
            (o.prototype.modn = function (e) {
              n(e <= 67108863);
              for (
                var t = (1 << 26) % e, r = 0, i = this.length - 1;
                i >= 0;
                i--
              )
                r = (t * r + (0 | this.words[i])) % e;
              return r;
            }),
            (o.prototype.idivn = function (e) {
              n(e <= 67108863);
              for (var t = 0, r = this.length - 1; r >= 0; r--) {
                var i = (0 | this.words[r]) + 67108864 * t;
                (this.words[r] = (i / e) | 0), (t = i % e);
              }
              return this.strip();
            }),
            (o.prototype.divn = function (e) {
              return this.clone().idivn(e);
            }),
            (o.prototype.egcd = function (e) {
              n(0 === e.negative), n(!e.isZero());
              var t = this,
                r = e.clone();
              t = 0 !== t.negative ? t.umod(e) : t.clone();
              for (
                var i = new o(1),
                  a = new o(0),
                  s = new o(0),
                  u = new o(1),
                  c = 0;
                t.isEven() && r.isEven();

              )
                t.iushrn(1), r.iushrn(1), ++c;
              for (var f = r.clone(), l = t.clone(); !t.isZero(); ) {
                for (
                  var d = 0, p = 1;
                  0 == (t.words[0] & p) && d < 26;
                  ++d, p <<= 1
                );
                if (d > 0)
                  for (t.iushrn(d); d-- > 0; )
                    (i.isOdd() || a.isOdd()) && (i.iadd(f), a.isub(l)),
                      i.iushrn(1),
                      a.iushrn(1);
                for (
                  var h = 0, m = 1;
                  0 == (r.words[0] & m) && h < 26;
                  ++h, m <<= 1
                );
                if (h > 0)
                  for (r.iushrn(h); h-- > 0; )
                    (s.isOdd() || u.isOdd()) && (s.iadd(f), u.isub(l)),
                      s.iushrn(1),
                      u.iushrn(1);
                t.cmp(r) >= 0
                  ? (t.isub(r), i.isub(s), a.isub(u))
                  : (r.isub(t), s.isub(i), u.isub(a));
              }
              return { a: s, b: u, gcd: r.iushln(c) };
            }),
            (o.prototype._invmp = function (e) {
              n(0 === e.negative), n(!e.isZero());
              var t = this,
                r = e.clone();
              t = 0 !== t.negative ? t.umod(e) : t.clone();
              for (
                var i, a = new o(1), s = new o(0), u = r.clone();
                t.cmpn(1) > 0 && r.cmpn(1) > 0;

              ) {
                for (
                  var c = 0, f = 1;
                  0 == (t.words[0] & f) && c < 26;
                  ++c, f <<= 1
                );
                if (c > 0)
                  for (t.iushrn(c); c-- > 0; )
                    a.isOdd() && a.iadd(u), a.iushrn(1);
                for (
                  var l = 0, d = 1;
                  0 == (r.words[0] & d) && l < 26;
                  ++l, d <<= 1
                );
                if (l > 0)
                  for (r.iushrn(l); l-- > 0; )
                    s.isOdd() && s.iadd(u), s.iushrn(1);
                t.cmp(r) >= 0 ? (t.isub(r), a.isub(s)) : (r.isub(t), s.isub(a));
              }
              return (i = 0 === t.cmpn(1) ? a : s).cmpn(0) < 0 && i.iadd(e), i;
            }),
            (o.prototype.gcd = function (e) {
              if (this.isZero()) return e.abs();
              if (e.isZero()) return this.abs();
              var t = this.clone(),
                r = e.clone();
              (t.negative = 0), (r.negative = 0);
              for (var n = 0; t.isEven() && r.isEven(); n++)
                t.iushrn(1), r.iushrn(1);
              for (;;) {
                for (; t.isEven(); ) t.iushrn(1);
                for (; r.isEven(); ) r.iushrn(1);
                var i = t.cmp(r);
                if (i < 0) {
                  var o = t;
                  (t = r), (r = o);
                } else if (0 === i || 0 === r.cmpn(1)) break;
                t.isub(r);
              }
              return r.iushln(n);
            }),
            (o.prototype.invm = function (e) {
              return this.egcd(e).a.umod(e);
            }),
            (o.prototype.isEven = function () {
              return 0 == (1 & this.words[0]);
            }),
            (o.prototype.isOdd = function () {
              return 1 == (1 & this.words[0]);
            }),
            (o.prototype.andln = function (e) {
              return this.words[0] & e;
            }),
            (o.prototype.bincn = function (e) {
              n('number' == typeof e);
              var t = e % 26,
                r = (e - t) / 26,
                i = 1 << t;
              if (this.length <= r)
                return this._expand(r + 1), (this.words[r] |= i), this;
              for (var o = i, a = r; 0 !== o && a < this.length; a++) {
                var s = 0 | this.words[a];
                (o = (s += o) >>> 26), (s &= 67108863), (this.words[a] = s);
              }
              return 0 !== o && ((this.words[a] = o), this.length++), this;
            }),
            (o.prototype.isZero = function () {
              return 1 === this.length && 0 === this.words[0];
            }),
            (o.prototype.cmpn = function (e) {
              var t,
                r = e < 0;
              if (0 !== this.negative && !r) return -1;
              if (0 === this.negative && r) return 1;
              if ((this.strip(), this.length > 1)) t = 1;
              else {
                r && (e = -e), n(e <= 67108863, 'Number is too big');
                var i = 0 | this.words[0];
                t = i === e ? 0 : i < e ? -1 : 1;
              }
              return 0 !== this.negative ? 0 | -t : t;
            }),
            (o.prototype.cmp = function (e) {
              if (0 !== this.negative && 0 === e.negative) return -1;
              if (0 === this.negative && 0 !== e.negative) return 1;
              var t = this.ucmp(e);
              return 0 !== this.negative ? 0 | -t : t;
            }),
            (o.prototype.ucmp = function (e) {
              if (this.length > e.length) return 1;
              if (this.length < e.length) return -1;
              for (var t = 0, r = this.length - 1; r >= 0; r--) {
                var n = 0 | this.words[r],
                  i = 0 | e.words[r];
                if (n !== i) {
                  n < i ? (t = -1) : n > i && (t = 1);
                  break;
                }
              }
              return t;
            }),
            (o.prototype.gtn = function (e) {
              return 1 === this.cmpn(e);
            }),
            (o.prototype.gt = function (e) {
              return 1 === this.cmp(e);
            }),
            (o.prototype.gten = function (e) {
              return this.cmpn(e) >= 0;
            }),
            (o.prototype.gte = function (e) {
              return this.cmp(e) >= 0;
            }),
            (o.prototype.ltn = function (e) {
              return -1 === this.cmpn(e);
            }),
            (o.prototype.lt = function (e) {
              return -1 === this.cmp(e);
            }),
            (o.prototype.lten = function (e) {
              return this.cmpn(e) <= 0;
            }),
            (o.prototype.lte = function (e) {
              return this.cmp(e) <= 0;
            }),
            (o.prototype.eqn = function (e) {
              return 0 === this.cmpn(e);
            }),
            (o.prototype.eq = function (e) {
              return 0 === this.cmp(e);
            }),
            (o.red = function (e) {
              return new E(e);
            }),
            (o.prototype.toRed = function (e) {
              return (
                n(!this.red, 'Already a number in reduction context'),
                n(0 === this.negative, 'red works only with positives'),
                e.convertTo(this)._forceRed(e)
              );
            }),
            (o.prototype.fromRed = function () {
              return (
                n(
                  this.red,
                  'fromRed works only with numbers in reduction context'
                ),
                this.red.convertFrom(this)
              );
            }),
            (o.prototype._forceRed = function (e) {
              return (this.red = e), this;
            }),
            (o.prototype.forceRed = function (e) {
              return (
                n(!this.red, 'Already a number in reduction context'),
                this._forceRed(e)
              );
            }),
            (o.prototype.redAdd = function (e) {
              return (
                n(this.red, 'redAdd works only with red numbers'),
                this.red.add(this, e)
              );
            }),
            (o.prototype.redIAdd = function (e) {
              return (
                n(this.red, 'redIAdd works only with red numbers'),
                this.red.iadd(this, e)
              );
            }),
            (o.prototype.redSub = function (e) {
              return (
                n(this.red, 'redSub works only with red numbers'),
                this.red.sub(this, e)
              );
            }),
            (o.prototype.redISub = function (e) {
              return (
                n(this.red, 'redISub works only with red numbers'),
                this.red.isub(this, e)
              );
            }),
            (o.prototype.redShl = function (e) {
              return (
                n(this.red, 'redShl works only with red numbers'),
                this.red.shl(this, e)
              );
            }),
            (o.prototype.redMul = function (e) {
              return (
                n(this.red, 'redMul works only with red numbers'),
                this.red._verify2(this, e),
                this.red.mul(this, e)
              );
            }),
            (o.prototype.redIMul = function (e) {
              return (
                n(this.red, 'redMul works only with red numbers'),
                this.red._verify2(this, e),
                this.red.imul(this, e)
              );
            }),
            (o.prototype.redSqr = function () {
              return (
                n(this.red, 'redSqr works only with red numbers'),
                this.red._verify1(this),
                this.red.sqr(this)
              );
            }),
            (o.prototype.redISqr = function () {
              return (
                n(this.red, 'redISqr works only with red numbers'),
                this.red._verify1(this),
                this.red.isqr(this)
              );
            }),
            (o.prototype.redSqrt = function () {
              return (
                n(this.red, 'redSqrt works only with red numbers'),
                this.red._verify1(this),
                this.red.sqrt(this)
              );
            }),
            (o.prototype.redInvm = function () {
              return (
                n(this.red, 'redInvm works only with red numbers'),
                this.red._verify1(this),
                this.red.invm(this)
              );
            }),
            (o.prototype.redNeg = function () {
              return (
                n(this.red, 'redNeg works only with red numbers'),
                this.red._verify1(this),
                this.red.neg(this)
              );
            }),
            (o.prototype.redPow = function (e) {
              return (
                n(this.red && !e.red, 'redPow(normalNum)'),
                this.red._verify1(this),
                this.red.pow(this, e)
              );
            });
          var b = { k256: null, p224: null, p192: null, p25519: null };
          function g(e, t) {
            (this.name = e),
              (this.p = new o(t, 16)),
              (this.n = this.p.bitLength()),
              (this.k = new o(1).iushln(this.n).isub(this.p)),
              (this.tmp = this._tmp());
          }
          function v() {
            g.call(
              this,
              'k256',
              'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f'
            );
          }
          function y() {
            g.call(
              this,
              'p224',
              'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001'
            );
          }
          function w() {
            g.call(
              this,
              'p192',
              'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff'
            );
          }
          function _() {
            g.call(
              this,
              '25519',
              '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed'
            );
          }
          function E(e) {
            if ('string' == typeof e) {
              var t = o._prime(e);
              (this.m = t.p), (this.prime = t);
            } else
              n(e.gtn(1), 'modulus must be greater than 1'),
                (this.m = e),
                (this.prime = null);
          }
          function S(e) {
            E.call(this, e),
              (this.shift = this.m.bitLength()),
              this.shift % 26 != 0 && (this.shift += 26 - (this.shift % 26)),
              (this.r = new o(1).iushln(this.shift)),
              (this.r2 = this.imod(this.r.sqr())),
              (this.rinv = this.r._invmp(this.m)),
              (this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)),
              (this.minv = this.minv.umod(this.r)),
              (this.minv = this.r.sub(this.minv));
          }
          (g.prototype._tmp = function () {
            var e = new o(null);
            return (e.words = new Array(Math.ceil(this.n / 13))), e;
          }),
            (g.prototype.ireduce = function (e) {
              var t,
                r = e;
              do {
                this.split(r, this.tmp),
                  (t = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength());
              } while (t > this.n);
              var n = t < this.n ? -1 : r.ucmp(this.p);
              return (
                0 === n
                  ? ((r.words[0] = 0), (r.length = 1))
                  : n > 0
                  ? r.isub(this.p)
                  : void 0 !== r.strip
                  ? r.strip()
                  : r._strip(),
                r
              );
            }),
            (g.prototype.split = function (e, t) {
              e.iushrn(this.n, 0, t);
            }),
            (g.prototype.imulK = function (e) {
              return e.imul(this.k);
            }),
            i(v, g),
            (v.prototype.split = function (e, t) {
              for (var r = Math.min(e.length, 9), n = 0; n < r; n++)
                t.words[n] = e.words[n];
              if (((t.length = r), e.length <= 9))
                return (e.words[0] = 0), void (e.length = 1);
              var i = e.words[9];
              for (
                t.words[t.length++] = 4194303 & i, n = 10;
                n < e.length;
                n++
              ) {
                var o = 0 | e.words[n];
                (e.words[n - 10] = ((4194303 & o) << 4) | (i >>> 22)), (i = o);
              }
              (i >>>= 22),
                (e.words[n - 10] = i),
                0 === i && e.length > 10 ? (e.length -= 10) : (e.length -= 9);
            }),
            (v.prototype.imulK = function (e) {
              (e.words[e.length] = 0),
                (e.words[e.length + 1] = 0),
                (e.length += 2);
              for (var t = 0, r = 0; r < e.length; r++) {
                var n = 0 | e.words[r];
                (t += 977 * n),
                  (e.words[r] = 67108863 & t),
                  (t = 64 * n + ((t / 67108864) | 0));
              }
              return (
                0 === e.words[e.length - 1] &&
                  (e.length--, 0 === e.words[e.length - 1] && e.length--),
                e
              );
            }),
            i(y, g),
            i(w, g),
            i(_, g),
            (_.prototype.imulK = function (e) {
              for (var t = 0, r = 0; r < e.length; r++) {
                var n = 19 * (0 | e.words[r]) + t,
                  i = 67108863 & n;
                (n >>>= 26), (e.words[r] = i), (t = n);
              }
              return 0 !== t && (e.words[e.length++] = t), e;
            }),
            (o._prime = function (e) {
              if (b[e]) return b[e];
              var t;
              if ('k256' === e) t = new v();
              else if ('p224' === e) t = new y();
              else if ('p192' === e) t = new w();
              else {
                if ('p25519' !== e) throw new Error('Unknown prime ' + e);
                t = new _();
              }
              return (b[e] = t), t;
            }),
            (E.prototype._verify1 = function (e) {
              n(0 === e.negative, 'red works only with positives'),
                n(e.red, 'red works only with red numbers');
            }),
            (E.prototype._verify2 = function (e, t) {
              n(
                0 == (e.negative | t.negative),
                'red works only with positives'
              ),
                n(e.red && e.red === t.red, 'red works only with red numbers');
            }),
            (E.prototype.imod = function (e) {
              return this.prime
                ? this.prime.ireduce(e)._forceRed(this)
                : e.umod(this.m)._forceRed(this);
            }),
            (E.prototype.neg = function (e) {
              return e.isZero() ? e.clone() : this.m.sub(e)._forceRed(this);
            }),
            (E.prototype.add = function (e, t) {
              this._verify2(e, t);
              var r = e.add(t);
              return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
            }),
            (E.prototype.iadd = function (e, t) {
              this._verify2(e, t);
              var r = e.iadd(t);
              return r.cmp(this.m) >= 0 && r.isub(this.m), r;
            }),
            (E.prototype.sub = function (e, t) {
              this._verify2(e, t);
              var r = e.sub(t);
              return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
            }),
            (E.prototype.isub = function (e, t) {
              this._verify2(e, t);
              var r = e.isub(t);
              return r.cmpn(0) < 0 && r.iadd(this.m), r;
            }),
            (E.prototype.shl = function (e, t) {
              return this._verify1(e), this.imod(e.ushln(t));
            }),
            (E.prototype.imul = function (e, t) {
              return this._verify2(e, t), this.imod(e.imul(t));
            }),
            (E.prototype.mul = function (e, t) {
              return this._verify2(e, t), this.imod(e.mul(t));
            }),
            (E.prototype.isqr = function (e) {
              return this.imul(e, e.clone());
            }),
            (E.prototype.sqr = function (e) {
              return this.mul(e, e);
            }),
            (E.prototype.sqrt = function (e) {
              if (e.isZero()) return e.clone();
              var t = this.m.andln(3);
              if ((n(t % 2 == 1), 3 === t)) {
                var r = this.m.add(new o(1)).iushrn(2);
                return this.pow(e, r);
              }
              for (
                var i = this.m.subn(1), a = 0;
                !i.isZero() && 0 === i.andln(1);

              )
                a++, i.iushrn(1);
              n(!i.isZero());
              var s = new o(1).toRed(this),
                u = s.redNeg(),
                c = this.m.subn(1).iushrn(1),
                f = this.m.bitLength();
              for (
                f = new o(2 * f * f).toRed(this);
                0 !== this.pow(f, c).cmp(u);

              )
                f.redIAdd(u);
              for (
                var l = this.pow(f, i),
                  d = this.pow(e, i.addn(1).iushrn(1)),
                  p = this.pow(e, i),
                  h = a;
                0 !== p.cmp(s);

              ) {
                for (var m = p, b = 0; 0 !== m.cmp(s); b++) m = m.redSqr();
                n(b < h);
                var g = this.pow(l, new o(1).iushln(h - b - 1));
                (d = d.redMul(g)), (l = g.redSqr()), (p = p.redMul(l)), (h = b);
              }
              return d;
            }),
            (E.prototype.invm = function (e) {
              var t = e._invmp(this.m);
              return 0 !== t.negative
                ? ((t.negative = 0), this.imod(t).redNeg())
                : this.imod(t);
            }),
            (E.prototype.pow = function (e, t) {
              if (t.isZero()) return new o(1).toRed(this);
              if (0 === t.cmpn(1)) return e.clone();
              var r = new Array(16);
              (r[0] = new o(1).toRed(this)), (r[1] = e);
              for (var n = 2; n < r.length; n++) r[n] = this.mul(r[n - 1], e);
              var i = r[0],
                a = 0,
                s = 0,
                u = t.bitLength() % 26;
              for (0 === u && (u = 26), n = t.length - 1; n >= 0; n--) {
                for (var c = t.words[n], f = u - 1; f >= 0; f--) {
                  var l = (c >> f) & 1;
                  i !== r[0] && (i = this.sqr(i)),
                    0 !== l || 0 !== a
                      ? ((a <<= 1),
                        (a |= l),
                        (4 === ++s || (0 === n && 0 === f)) &&
                          ((i = this.mul(i, r[a])), (s = 0), (a = 0)))
                      : (s = 0);
                }
                u = 26;
              }
              return i;
            }),
            (E.prototype.convertTo = function (e) {
              var t = e.umod(this.m);
              return t === e ? t.clone() : t;
            }),
            (E.prototype.convertFrom = function (e) {
              var t = e.clone();
              return (t.red = null), t;
            }),
            (o.mont = function (e) {
              return new S(e);
            }),
            i(S, E),
            (S.prototype.convertTo = function (e) {
              return this.imod(e.ushln(this.shift));
            }),
            (S.prototype.convertFrom = function (e) {
              var t = this.imod(e.mul(this.rinv));
              return (t.red = null), t;
            }),
            (S.prototype.imul = function (e, t) {
              if (e.isZero() || t.isZero())
                return (e.words[0] = 0), (e.length = 1), e;
              var r = e.imul(t),
                n = r
                  .maskn(this.shift)
                  .mul(this.minv)
                  .imaskn(this.shift)
                  .mul(this.m),
                i = r.isub(n).iushrn(this.shift),
                o = i;
              return (
                i.cmp(this.m) >= 0
                  ? (o = i.isub(this.m))
                  : i.cmpn(0) < 0 && (o = i.iadd(this.m)),
                o._forceRed(this)
              );
            }),
            (S.prototype.mul = function (e, t) {
              if (e.isZero() || t.isZero()) return new o(0)._forceRed(this);
              var r = e.mul(t),
                n = r
                  .maskn(this.shift)
                  .mul(this.minv)
                  .imaskn(this.shift)
                  .mul(this.m),
                i = r.isub(n).iushrn(this.shift),
                a = i;
              return (
                i.cmp(this.m) >= 0
                  ? (a = i.isub(this.m))
                  : i.cmpn(0) < 0 && (a = i.iadd(this.m)),
                a._forceRed(this)
              );
            }),
            (S.prototype.invm = function (e) {
              return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this);
            });
        })(e, this);
      }.call(this, r(57)(e)));
    },
    function (e, t) {
      e.exports = {
        bitcoin: {
          messagePrefix: 'Bitcoin Signed Message:\n',
          bech32: 'bc',
          bip32: { public: 76067358, private: 76066276 },
          pubKeyHash: 0,
          scriptHash: 5,
          wif: 128,
        },
        regtest: {
          messagePrefix: 'Bitcoin Signed Message:\n',
          bech32: 'bcrt',
          bip32: { public: 70617039, private: 70615956 },
          pubKeyHash: 111,
          scriptHash: 196,
          wif: 239,
        },
        testnet: {
          messagePrefix: 'Bitcoin Signed Message:\n',
          bech32: 'tb',
          bip32: { public: 70617039, private: 70615956 },
          pubKeyHash: 111,
          scriptHash: 196,
          wif: 239,
        },
      };
    },
    function (e, t, r) {
      'use strict';
      var n = r(22),
        i = r(25);
      function o(e, t) {
        return (
          55296 == (64512 & e.charCodeAt(t)) &&
          !(t < 0 || t + 1 >= e.length) &&
          56320 == (64512 & e.charCodeAt(t + 1))
        );
      }
      function a(e) {
        return (
          ((e >>> 24) |
            ((e >>> 8) & 65280) |
            ((e << 8) & 16711680) |
            ((255 & e) << 24)) >>>
          0
        );
      }
      function s(e) {
        return 1 === e.length ? '0' + e : e;
      }
      function u(e) {
        return 7 === e.length
          ? '0' + e
          : 6 === e.length
          ? '00' + e
          : 5 === e.length
          ? '000' + e
          : 4 === e.length
          ? '0000' + e
          : 3 === e.length
          ? '00000' + e
          : 2 === e.length
          ? '000000' + e
          : 1 === e.length
          ? '0000000' + e
          : e;
      }
      (t.inherits = i),
        (t.toArray = function (e, t) {
          if (Array.isArray(e)) return e.slice();
          if (!e) return [];
          var r = [];
          if ('string' == typeof e)
            if (t) {
              if ('hex' === t)
                for (
                  (e = e.replace(/[^a-z0-9]+/gi, '')).length % 2 != 0 &&
                    (e = '0' + e),
                    i = 0;
                  i < e.length;
                  i += 2
                )
                  r.push(parseInt(e[i] + e[i + 1], 16));
            } else
              for (var n = 0, i = 0; i < e.length; i++) {
                var a = e.charCodeAt(i);
                a < 128
                  ? (r[n++] = a)
                  : a < 2048
                  ? ((r[n++] = (a >> 6) | 192), (r[n++] = (63 & a) | 128))
                  : o(e, i)
                  ? ((a =
                      65536 + ((1023 & a) << 10) + (1023 & e.charCodeAt(++i))),
                    (r[n++] = (a >> 18) | 240),
                    (r[n++] = ((a >> 12) & 63) | 128),
                    (r[n++] = ((a >> 6) & 63) | 128),
                    (r[n++] = (63 & a) | 128))
                  : ((r[n++] = (a >> 12) | 224),
                    (r[n++] = ((a >> 6) & 63) | 128),
                    (r[n++] = (63 & a) | 128));
              }
          else for (i = 0; i < e.length; i++) r[i] = 0 | e[i];
          return r;
        }),
        (t.toHex = function (e) {
          for (var t = '', r = 0; r < e.length; r++) t += s(e[r].toString(16));
          return t;
        }),
        (t.htonl = a),
        (t.toHex32 = function (e, t) {
          for (var r = '', n = 0; n < e.length; n++) {
            var i = e[n];
            'little' === t && (i = a(i)), (r += u(i.toString(16)));
          }
          return r;
        }),
        (t.zero2 = s),
        (t.zero8 = u),
        (t.join32 = function (e, t, r, i) {
          var o = r - t;
          n(o % 4 == 0);
          for (
            var a = new Array(o / 4), s = 0, u = t;
            s < a.length;
            s++, u += 4
          ) {
            var c;
            (c =
              'big' === i
                ? (e[u] << 24) | (e[u + 1] << 16) | (e[u + 2] << 8) | e[u + 3]
                : (e[u + 3] << 24) | (e[u + 2] << 16) | (e[u + 1] << 8) | e[u]),
              (a[s] = c >>> 0);
          }
          return a;
        }),
        (t.split32 = function (e, t) {
          for (
            var r = new Array(4 * e.length), n = 0, i = 0;
            n < e.length;
            n++, i += 4
          ) {
            var o = e[n];
            'big' === t
              ? ((r[i] = o >>> 24),
                (r[i + 1] = (o >>> 16) & 255),
                (r[i + 2] = (o >>> 8) & 255),
                (r[i + 3] = 255 & o))
              : ((r[i + 3] = o >>> 24),
                (r[i + 2] = (o >>> 16) & 255),
                (r[i + 1] = (o >>> 8) & 255),
                (r[i] = 255 & o));
          }
          return r;
        }),
        (t.rotr32 = function (e, t) {
          return (e >>> t) | (e << (32 - t));
        }),
        (t.rotl32 = function (e, t) {
          return (e << t) | (e >>> (32 - t));
        }),
        (t.sum32 = function (e, t) {
          return (e + t) >>> 0;
        }),
        (t.sum32_3 = function (e, t, r) {
          return (e + t + r) >>> 0;
        }),
        (t.sum32_4 = function (e, t, r, n) {
          return (e + t + r + n) >>> 0;
        }),
        (t.sum32_5 = function (e, t, r, n, i) {
          return (e + t + r + n + i) >>> 0;
        }),
        (t.sum64 = function (e, t, r, n) {
          var i = e[t],
            o = (n + e[t + 1]) >>> 0,
            a = (o < n ? 1 : 0) + r + i;
          (e[t] = a >>> 0), (e[t + 1] = o);
        }),
        (t.sum64_hi = function (e, t, r, n) {
          return (((t + n) >>> 0 < t ? 1 : 0) + e + r) >>> 0;
        }),
        (t.sum64_lo = function (e, t, r, n) {
          return (t + n) >>> 0;
        }),
        (t.sum64_4_hi = function (e, t, r, n, i, o, a, s) {
          var u = 0,
            c = t;
          return (
            (u += (c = (c + n) >>> 0) < t ? 1 : 0),
            (u += (c = (c + o) >>> 0) < o ? 1 : 0),
            (e + r + i + a + (u += (c = (c + s) >>> 0) < s ? 1 : 0)) >>> 0
          );
        }),
        (t.sum64_4_lo = function (e, t, r, n, i, o, a, s) {
          return (t + n + o + s) >>> 0;
        }),
        (t.sum64_5_hi = function (e, t, r, n, i, o, a, s, u, c) {
          var f = 0,
            l = t;
          return (
            (f += (l = (l + n) >>> 0) < t ? 1 : 0),
            (f += (l = (l + o) >>> 0) < o ? 1 : 0),
            (f += (l = (l + s) >>> 0) < s ? 1 : 0),
            (e + r + i + a + u + (f += (l = (l + c) >>> 0) < c ? 1 : 0)) >>> 0
          );
        }),
        (t.sum64_5_lo = function (e, t, r, n, i, o, a, s, u, c) {
          return (t + n + o + s + c) >>> 0;
        }),
        (t.rotr64_hi = function (e, t, r) {
          return ((t << (32 - r)) | (e >>> r)) >>> 0;
        }),
        (t.rotr64_lo = function (e, t, r) {
          return ((e << (32 - r)) | (t >>> r)) >>> 0;
        }),
        (t.shr64_hi = function (e, t, r) {
          return e >>> r;
        }),
        (t.shr64_lo = function (e, t, r) {
          return ((e << (32 - r)) | (t >>> r)) >>> 0;
        });
    },
    function (e, t, r) {
      const n = r(3),
        i = Math.pow(2, 31) - 1;
      function o(e) {
        return n.String(e) && e.match(/^(m\/)?(\d+'?\/)*\d+'?$/);
      }
      o.toJSON = function () {
        return 'BIP32 derivation path';
      };
      const a = n.quacksLike('Point'),
        s = n.compile({
          messagePrefix: n.oneOf(n.Buffer, n.String),
          bip32: { public: n.UInt32, private: n.UInt32 },
          pubKeyHash: n.UInt8,
          scriptHash: n.UInt8,
          wif: n.UInt8,
        }),
        u = {
          BIP32Path: o,
          Buffer256bit: n.BufferN(32),
          ECPoint: a,
          Hash160bit: n.BufferN(20),
          Hash256bit: n.BufferN(32),
          Network: s,
          Satoshi: function (e) {
            return n.UInt53(e) && e <= 21e14;
          },
          UInt31: function (e) {
            return n.UInt32(e) && e <= i;
          },
        };
      for (var c in n) u[c] = n[c];
      e.exports = u;
    },
    function (e, t) {
      e.exports = require('url');
    },
    function (e, t) {
      e.exports = require('zlib');
    },
    ,
    ,
    function (e, t, r) {
      const n = r(26);
      function i(e) {
        try {
          return n('rmd160').update(e).digest();
        } catch (t) {
          return n('ripemd160').update(e).digest();
        }
      }
      function o(e) {
        return n('sha256').update(e).digest();
      }
      e.exports = {
        hash160: function (e) {
          return i(o(e));
        },
        hash256: function (e) {
          return o(o(e));
        },
        ripemd160: i,
        sha1: function (e) {
          return n('sha1').update(e).digest();
        },
        sha256: o,
      };
    },
    ,
    ,
    function (e, t, r) {
      'use strict';
      try {
        e.exports = r(134);
      } catch (t) {
        e.exports = r(136);
      }
    },
    function (e, t) {
      function r(e, t) {
        if (!e) throw new Error(t || 'Assertion failed');
      }
      (e.exports = r),
        (r.equal = function (e, t, r) {
          if (e != t)
            throw new Error(r || 'Assertion failed: ' + e + ' != ' + t);
        });
    },
    function (e, t) {
      e.exports = {
        prop: function (e, t, r) {
          Object.defineProperty(e, t, {
            configurable: !0,
            enumerable: !0,
            get: function () {
              let e = r.call(this);
              return (this[t] = e), e;
            },
            set: function (e) {
              Object.defineProperty(this, t, {
                configurable: !0,
                enumerable: !0,
                value: e,
                writable: !0,
              });
            },
          });
        },
        value: function (e) {
          let t;
          return function () {
            return void 0 !== t || (t = e()), t;
          };
        },
      };
    },
    function (e, t) {
      e.exports = require('http');
    },
    function (e, t, r) {
      try {
        var n = r(6);
        if ('function' != typeof n.inherits) throw '';
        e.exports = n.inherits;
      } catch (t) {
        e.exports = r(139);
      }
    },
    function (e, t, r) {
      e.exports = r(4).createHash;
    },
    ,
    ,
    function (e, t, r) {
      'use strict';
      var n = r(26),
        i = r(130);
      e.exports = i(function (e) {
        var t = n('sha256').update(e).digest();
        return n('sha256').update(t).digest();
      });
    },
    function (e, t, r) {
      'use strict';
      var n = r(12),
        i = r(22);
      function o() {
        (this.pending = null),
          (this.pendingTotal = 0),
          (this.blockSize = this.constructor.blockSize),
          (this.outSize = this.constructor.outSize),
          (this.hmacStrength = this.constructor.hmacStrength),
          (this.padLength = this.constructor.padLength / 8),
          (this.endian = 'big'),
          (this._delta8 = this.blockSize / 8),
          (this._delta32 = this.blockSize / 32);
      }
      (t.BlockHash = o),
        (o.prototype.update = function (e, t) {
          if (
            ((e = n.toArray(e, t)),
            this.pending
              ? (this.pending = this.pending.concat(e))
              : (this.pending = e),
            (this.pendingTotal += e.length),
            this.pending.length >= this._delta8)
          ) {
            var r = (e = this.pending).length % this._delta8;
            (this.pending = e.slice(e.length - r, e.length)),
              0 === this.pending.length && (this.pending = null),
              (e = n.join32(e, 0, e.length - r, this.endian));
            for (var i = 0; i < e.length; i += this._delta32)
              this._update(e, i, i + this._delta32);
          }
          return this;
        }),
        (o.prototype.digest = function (e) {
          return (
            this.update(this._pad()), i(null === this.pending), this._digest(e)
          );
        }),
        (o.prototype._pad = function () {
          var e = this.pendingTotal,
            t = this._delta8,
            r = t - ((e + this.padLength) % t),
            n = new Array(r + this.padLength);
          n[0] = 128;
          for (var i = 1; i < r; i++) n[i] = 0;
          if (((e <<= 3), 'big' === this.endian)) {
            for (var o = 8; o < this.padLength; o++) n[i++] = 0;
            (n[i++] = 0),
              (n[i++] = 0),
              (n[i++] = 0),
              (n[i++] = 0),
              (n[i++] = (e >>> 24) & 255),
              (n[i++] = (e >>> 16) & 255),
              (n[i++] = (e >>> 8) & 255),
              (n[i++] = 255 & e);
          } else
            for (
              n[i++] = 255 & e,
                n[i++] = (e >>> 8) & 255,
                n[i++] = (e >>> 16) & 255,
                n[i++] = (e >>> 24) & 255,
                n[i++] = 0,
                n[i++] = 0,
                n[i++] = 0,
                n[i++] = 0,
                o = 8;
              o < this.padLength;
              o++
            )
              n[i++] = 0;
          return n;
        });
    },
    function (e, t) {
      e.exports = require('https');
    },
    ,
    function (e, t) {
      e.exports = require('path');
    },
    ,
    function (e, t, r) {
      'use strict';
      var n = r(10),
        i = r(8),
        o = i.getNAF,
        a = i.getJSF,
        s = i.assert;
      function u(e, t) {
        (this.type = e),
          (this.p = new n(t.p, 16)),
          (this.red = t.prime ? n.red(t.prime) : n.mont(this.p)),
          (this.zero = new n(0).toRed(this.red)),
          (this.one = new n(1).toRed(this.red)),
          (this.two = new n(2).toRed(this.red)),
          (this.n = t.n && new n(t.n, 16)),
          (this.g = t.g && this.pointFromJSON(t.g, t.gRed)),
          (this._wnafT1 = new Array(4)),
          (this._wnafT2 = new Array(4)),
          (this._wnafT3 = new Array(4)),
          (this._wnafT4 = new Array(4)),
          (this._bitLength = this.n ? this.n.bitLength() : 0);
        var r = this.n && this.p.div(this.n);
        !r || r.cmpn(100) > 0
          ? (this.redN = null)
          : ((this._maxwellTrick = !0), (this.redN = this.n.toRed(this.red)));
      }
      function c(e, t) {
        (this.curve = e), (this.type = t), (this.precomputed = null);
      }
      (e.exports = u),
        (u.prototype.point = function () {
          throw new Error('Not implemented');
        }),
        (u.prototype.validate = function () {
          throw new Error('Not implemented');
        }),
        (u.prototype._fixedNafMul = function (e, t) {
          s(e.precomputed);
          var r = e._getDoubles(),
            n = o(t, 1, this._bitLength),
            i = (1 << (r.step + 1)) - (r.step % 2 == 0 ? 2 : 1);
          i /= 3;
          for (var a = [], u = 0; u < n.length; u += r.step) {
            var c = 0;
            for (t = u + r.step - 1; t >= u; t--) c = (c << 1) + n[t];
            a.push(c);
          }
          for (
            var f = this.jpoint(null, null, null),
              l = this.jpoint(null, null, null),
              d = i;
            d > 0;
            d--
          ) {
            for (u = 0; u < a.length; u++) {
              (c = a[u]) === d
                ? (l = l.mixedAdd(r.points[u]))
                : c === -d && (l = l.mixedAdd(r.points[u].neg()));
            }
            f = f.add(l);
          }
          return f.toP();
        }),
        (u.prototype._wnafMul = function (e, t) {
          var r = 4,
            n = e._getNAFPoints(r);
          r = n.wnd;
          for (
            var i = n.points,
              a = o(t, r, this._bitLength),
              u = this.jpoint(null, null, null),
              c = a.length - 1;
            c >= 0;
            c--
          ) {
            for (t = 0; c >= 0 && 0 === a[c]; c--) t++;
            if ((c >= 0 && t++, (u = u.dblp(t)), c < 0)) break;
            var f = a[c];
            s(0 !== f),
              (u =
                'affine' === e.type
                  ? f > 0
                    ? u.mixedAdd(i[(f - 1) >> 1])
                    : u.mixedAdd(i[(-f - 1) >> 1].neg())
                  : f > 0
                  ? u.add(i[(f - 1) >> 1])
                  : u.add(i[(-f - 1) >> 1].neg()));
          }
          return 'affine' === e.type ? u.toP() : u;
        }),
        (u.prototype._wnafMulAdd = function (e, t, r, n, i) {
          for (
            var s = this._wnafT1,
              u = this._wnafT2,
              c = this._wnafT3,
              f = 0,
              l = 0;
            l < n;
            l++
          ) {
            var d = (I = t[l])._getNAFPoints(e);
            (s[l] = d.wnd), (u[l] = d.points);
          }
          for (l = n - 1; l >= 1; l -= 2) {
            var p = l - 1,
              h = l;
            if (1 === s[p] && 1 === s[h]) {
              var m = [t[p], null, null, t[h]];
              0 === t[p].y.cmp(t[h].y)
                ? ((m[1] = t[p].add(t[h])),
                  (m[2] = t[p].toJ().mixedAdd(t[h].neg())))
                : 0 === t[p].y.cmp(t[h].y.redNeg())
                ? ((m[1] = t[p].toJ().mixedAdd(t[h])),
                  (m[2] = t[p].add(t[h].neg())))
                : ((m[1] = t[p].toJ().mixedAdd(t[h])),
                  (m[2] = t[p].toJ().mixedAdd(t[h].neg())));
              var b = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                g = a(r[p], r[h]);
              (f = Math.max(g[0].length, f)),
                (c[p] = new Array(f)),
                (c[h] = new Array(f));
              for (var v = 0; v < f; v++) {
                var y = 0 | g[0][v],
                  w = 0 | g[1][v];
                (c[p][v] = b[3 * (y + 1) + (w + 1)]), (c[h][v] = 0), (u[p] = m);
              }
            } else
              (c[p] = o(r[p], s[p], this._bitLength)),
                (c[h] = o(r[h], s[h], this._bitLength)),
                (f = Math.max(c[p].length, f)),
                (f = Math.max(c[h].length, f));
          }
          var _ = this.jpoint(null, null, null),
            E = this._wnafT4;
          for (l = f; l >= 0; l--) {
            for (var S = 0; l >= 0; ) {
              var x = !0;
              for (v = 0; v < n; v++)
                (E[v] = 0 | c[v][l]), 0 !== E[v] && (x = !1);
              if (!x) break;
              S++, l--;
            }
            if ((l >= 0 && S++, (_ = _.dblp(S)), l < 0)) break;
            for (v = 0; v < n; v++) {
              var I,
                A = E[v];
              0 !== A &&
                (A > 0
                  ? (I = u[v][(A - 1) >> 1])
                  : A < 0 && (I = u[v][(-A - 1) >> 1].neg()),
                (_ = 'affine' === I.type ? _.mixedAdd(I) : _.add(I)));
            }
          }
          for (l = 0; l < n; l++) u[l] = null;
          return i ? _ : _.toP();
        }),
        (u.BasePoint = c),
        (c.prototype.eq = function () {
          throw new Error('Not implemented');
        }),
        (c.prototype.validate = function () {
          return this.curve.validate(this);
        }),
        (u.prototype.decodePoint = function (e, t) {
          e = i.toArray(e, t);
          var r = this.p.byteLength();
          if ((4 === e[0] || 6 === e[0] || 7 === e[0]) && e.length - 1 == 2 * r)
            return (
              6 === e[0]
                ? s(e[e.length - 1] % 2 == 0)
                : 7 === e[0] && s(e[e.length - 1] % 2 == 1),
              this.point(e.slice(1, 1 + r), e.slice(1 + r, 1 + 2 * r))
            );
          if ((2 === e[0] || 3 === e[0]) && e.length - 1 === r)
            return this.pointFromX(e.slice(1, 1 + r), 3 === e[0]);
          throw new Error('Unknown point format');
        }),
        (c.prototype.encodeCompressed = function (e) {
          return this.encode(e, !0);
        }),
        (c.prototype._encode = function (e) {
          var t = this.curve.p.byteLength(),
            r = this.getX().toArray('be', t);
          return e
            ? [this.getY().isEven() ? 2 : 3].concat(r)
            : [4].concat(r, this.getY().toArray('be', t));
        }),
        (c.prototype.encode = function (e, t) {
          return i.encode(this._encode(t), e);
        }),
        (c.prototype.precompute = function (e) {
          if (this.precomputed) return this;
          var t = { doubles: null, naf: null, beta: null };
          return (
            (t.naf = this._getNAFPoints(8)),
            (t.doubles = this._getDoubles(4, e)),
            (t.beta = this._getBeta()),
            (this.precomputed = t),
            this
          );
        }),
        (c.prototype._hasDoubles = function (e) {
          if (!this.precomputed) return !1;
          var t = this.precomputed.doubles;
          return (
            !!t && t.points.length >= Math.ceil((e.bitLength() + 1) / t.step)
          );
        }),
        (c.prototype._getDoubles = function (e, t) {
          if (this.precomputed && this.precomputed.doubles)
            return this.precomputed.doubles;
          for (var r = [this], n = this, i = 0; i < t; i += e) {
            for (var o = 0; o < e; o++) n = n.dbl();
            r.push(n);
          }
          return { step: e, points: r };
        }),
        (c.prototype._getNAFPoints = function (e) {
          if (this.precomputed && this.precomputed.naf)
            return this.precomputed.naf;
          for (
            var t = [this],
              r = (1 << e) - 1,
              n = 1 === r ? null : this.dbl(),
              i = 1;
            i < r;
            i++
          )
            t[i] = t[i - 1].add(n);
          return { wnd: e, points: t };
        }),
        (c.prototype._getBeta = function () {
          return null;
        }),
        (c.prototype.dblp = function (e) {
          for (var t = this, r = 0; r < e; r++) t = t.dbl();
          return t;
        });
    },
    function (e, t, r) {
      'use strict';
      for (
        var n = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l', i = {}, o = 0;
        o < n.length;
        o++
      ) {
        var a = n.charAt(o);
        if (void 0 !== i[a]) throw new TypeError(a + ' is ambiguous');
        i[a] = o;
      }
      function s(e) {
        var t = e >> 25;
        return (
          ((33554431 & e) << 5) ^
          (996825010 & -((t >> 0) & 1)) ^
          (642813549 & -((t >> 1) & 1)) ^
          (513874426 & -((t >> 2) & 1)) ^
          (1027748829 & -((t >> 3) & 1)) ^
          (705979059 & -((t >> 4) & 1))
        );
      }
      function u(e) {
        for (var t = 1, r = 0; r < e.length; ++r) {
          var n = e.charCodeAt(r);
          if (n < 33 || n > 126) return 'Invalid prefix (' + e + ')';
          t = s(t) ^ (n >> 5);
        }
        for (t = s(t), r = 0; r < e.length; ++r) {
          var i = e.charCodeAt(r);
          t = s(t) ^ (31 & i);
        }
        return t;
      }
      function c(e, t) {
        if (((t = t || 90), e.length < 8)) return e + ' too short';
        if (e.length > t) return 'Exceeds length limit';
        var r = e.toLowerCase(),
          n = e.toUpperCase();
        if (e !== r && e !== n) return 'Mixed-case string ' + e;
        var o = (e = r).lastIndexOf('1');
        if (-1 === o) return 'No separator character for ' + e;
        if (0 === o) return 'Missing prefix for ' + e;
        var a = e.slice(0, o),
          c = e.slice(o + 1);
        if (c.length < 6) return 'Data too short';
        var f = u(a);
        if ('string' == typeof f) return f;
        for (var l = [], d = 0; d < c.length; ++d) {
          var p = c.charAt(d),
            h = i[p];
          if (void 0 === h) return 'Unknown character ' + p;
          (f = s(f) ^ h), d + 6 >= c.length || l.push(h);
        }
        return 1 !== f ? 'Invalid checksum for ' + e : { prefix: a, words: l };
      }
      function f(e, t, r, n) {
        for (
          var i = 0, o = 0, a = (1 << r) - 1, s = [], u = 0;
          u < e.length;
          ++u
        )
          for (i = (i << t) | e[u], o += t; o >= r; )
            (o -= r), s.push((i >> o) & a);
        if (n) o > 0 && s.push((i << (r - o)) & a);
        else {
          if (o >= t) return 'Excess padding';
          if ((i << (r - o)) & a) return 'Non-zero padding';
        }
        return s;
      }
      e.exports = {
        decodeUnsafe: function () {
          var e = c.apply(null, arguments);
          if ('object' == typeof e) return e;
        },
        decode: function (e) {
          var t = c.apply(null, arguments);
          if ('object' == typeof t) return t;
          throw new Error(t);
        },
        encode: function (e, t, r) {
          if (((r = r || 90), e.length + 7 + t.length > r))
            throw new TypeError('Exceeds length limit');
          var i = u((e = e.toLowerCase()));
          if ('string' == typeof i) throw new Error(i);
          for (var o = e + '1', a = 0; a < t.length; ++a) {
            var c = t[a];
            if (c >> 5 != 0) throw new Error('Non 5-bit word');
            (i = s(i) ^ c), (o += n.charAt(c));
          }
          for (a = 0; a < 6; ++a) i = s(i);
          for (i ^= 1, a = 0; a < 6; ++a) {
            o += n.charAt((i >> (5 * (5 - a))) & 31);
          }
          return o;
        },
        toWordsUnsafe: function (e) {
          var t = f(e, 8, 5, !0);
          if (Array.isArray(t)) return t;
        },
        toWords: function (e) {
          var t = f(e, 8, 5, !0);
          if (Array.isArray(t)) return t;
          throw new Error(t);
        },
        fromWordsUnsafe: function (e) {
          var t = f(e, 5, 8, !1);
          if (Array.isArray(t)) return t;
        },
        fromWords: function (e) {
          var t = f(e, 5, 8, !1);
          if (Array.isArray(t)) return t;
          throw new Error(t);
        },
      };
    },
    ,
    ,
    function (e, t) {
      e.exports = require('buffer');
    },
    function (e, t) {
      e.exports = require('fs');
    },
    ,
    ,
    ,
    function (e, t, r) {
      'use strict';
      var n,
        i =
          (this && this.__classPrivateFieldGet) ||
          function (e, t) {
            if (!t.has(e))
              throw new TypeError(
                'attempted to get private field on non-instance'
              );
            return t.get(e);
          };
      Object.defineProperty(t, '__esModule', { value: !0 }),
        (t.API = t.mnemonicToAddress = void 0);
      const o = r(61);
      global.fetch || (global.fetch = r(62));
      const a = r(107),
        s = r(64),
        u = r(108),
        c = r(63),
        f = r(109),
        l = r(119);
      t.mnemonicToAddress = (e) => {
        const t = l.network('http://fake.com', 'fake_chain_id');
        return (
          t.setPath("m/44'/118'/0'/0/0"),
          (t.bech32MainPrefix = 'bluzelle'),
          t.getAddress(e)
        );
      };
      (t.API = class {
        constructor(e) {
          (this.chainId = ''),
            (this.getCosmos = s.memoize(() =>
              fetch(this.url + '/node_info')
                .then((e) => e.json())
                .then((e) => e.node_info.network)
                .then((e) => l.network(this.url, e))
                .then(o.passThrough((e) => e.setPath("m/44'/118'/0'/0/0")))
                .then(o.passThrough((e) => (e.bech32MainPrefix = 'bluzelle')))
            )),
            (this.generateBIP39Account = (e = '') => (
              u.assert(
                0 === e.length || 64 === e.length,
                'Entropy must be 64 char hex'
              ),
              e ? f.entropyToMnemonic(e) : f.generateMnemonic(256)
            )),
            n.set(this, (e) =>
              fetch(`${this.url}/${e}`).then((e) => {
                if (200 !== e.status)
                  throw { status: e.status, error: e.statusText };
                return e.json().then((e) => {
                  var t;
                  return null !== (t = e.result) && void 0 !== t ? t : e;
                });
              })
            ),
            (this.config = e),
            (this.mnemonic = e.mnemonic),
            (this.address = this.mnemonic
              ? t.mnemonicToAddress(this.mnemonic)
              : ''),
            (this.uuid = e.uuid),
            (this.url = e.endpoint),
            (this.communicationService = a.CommunicationService.create(this));
        }
        withTransaction(e, t) {
          return this.communicationService.withTransaction(e, t);
        }
        setMaxMessagesPerTransaction(e) {
          this.communicationService.setMaxMessagesPerTransaction(e);
        }
        account() {
          return this.getCosmos()
            .then((e) => e.getAccounts(this.address))
            .then((e) => e.result.value);
        }
        isExistingAccount() {
          return this.account().then((e) => !!e.coins.length);
        }
        count() {
          return i(this, n)
            .call(this, 'crud/count/' + this.uuid)
            .then((e) => parseInt(e.count || '0'));
        }
        async create(e, t, r, n = {}) {
          const i = h(n);
          return (
            u.assert(!!e, 'Key cannot be empty'),
            u.assert('string' == typeof e, 'Key must be a string'),
            u.assert('string' == typeof t, 'Value must be a string'),
            u.assert(i >= 0, 'Invalid lease time'),
            u.assert(!e.includes('/'), 'Key cannot contain a slash'),
            this.communicationService
              .sendMessage(
                {
                  type: 'crud/create',
                  value: {
                    Key: p(e),
                    Value: p(t),
                    UUID: this.uuid,
                    Owner: this.address,
                    Lease: i.toString(),
                  },
                },
                r
              )
              .then(b)
          );
        }
        delete(e, t) {
          return this.communicationService
            .sendMessage(
              {
                type: 'crud/delete',
                value: { Key: e, UUID: this.uuid, Owner: this.address },
              },
              t
            )
            .then(b);
        }
        deleteAll(e) {
          return this.communicationService
            .sendMessage(
              {
                type: 'crud/deleteall',
                value: { UUID: this.uuid, Owner: this.address },
              },
              e
            )
            .then(b);
        }
        getAddress() {
          return t.mnemonicToAddress(this.mnemonic);
        }
        getLease(e) {
          return i(this, n)
            .call(this, `crud/getlease/${this.uuid}/${p(e)}`)
            .then((e) => Math.round(5.5 * e.lease))
            .catch((t) => {
              throw 'Not Found' === t.error ? `key "${e}" not found` : t.error;
            });
        }
        async getNShortestLeases(e) {
          return (
            u.assert(e >= 0, 'Invalid value specified'),
            i(this, n)
              .call(this, `crud/getnshortestleases/${this.uuid}/${e}`)
              .then((e) =>
                e.keyleases.map(({ key: e, lease: t }) => ({
                  key: e,
                  lease: Math.round(5.5 * parseInt(t)),
                }))
              )
          );
        }
        getTx(e) {
          return i(this, n).call(this, 'txs/' + e);
        }
        getBNT({ ubnt: e } = { ubnt: !1 }) {
          return this.account()
            .then((e) => {
              var t;
              return (
                (null === (t = e.coins[0]) || void 0 === t
                  ? void 0
                  : t.amount) || '0'
              );
            })
            .then((t) => (e ? t : t.slice(0, -6) || '0'))
            .then(parseInt);
        }
        has(e) {
          return i(this, n)
            .call(this, `crud/has/${this.uuid}/${e}`)
            .then((e) => e.has);
        }
        keys() {
          return i(this, n)
            .call(this, 'crud/keys/' + this.uuid)
            .then((e) => e.keys)
            .then((e) => e.map(d));
        }
        keyValues() {
          return i(this, n)
            .call(this, 'crud/keyvalues/' + this.uuid)
            .then((e) => e.keyvalues)
            .then((e) =>
              e.map(({ key: e, value: t }) => ({ key: e, value: d(t) }))
            );
        }
        async multiUpdate(e, t) {
          return (
            u.assert(Array.isArray(e), 'keyValues must be an array'),
            e.forEach(({ key: e, value: t }, r, n) => {
              u.assert('string' == typeof e, 'All keys must be strings'),
                u.assert('string' == typeof t, 'All values must be strings');
            }),
            this.communicationService
              .sendMessage(
                {
                  type: 'crud/multiupdate',
                  value: { KeyValues: e, UUID: this.uuid, Owner: this.address },
                },
                t
              )
              .then(b)
          );
        }
        owner(e) {
          return i(this, n)
            .call(this, `crud/owner/${this.uuid}/${p(e)}`)
            .then((e) => e.owner)
            .catch((t) => {
              if (t instanceof Error) throw t;
              throw new Error(
                'Not Found' === t.error ? `key "${e}" not found` : t.error
              );
            });
        }
        read(e, t = !1) {
          return i(this, n)
            .call(this, `crud/${t ? 'pread' : 'read'}/${this.uuid}/${p(e)}`)
            .then((e) => e.value)
            .then(d)
            .catch((t) => {
              if (t instanceof Error) throw t;
              throw new Error(
                'Not Found' === t.error ? `key "${e}" not found` : t.error
              );
            });
        }
        async rename(e, t, r) {
          return (
            u.assert('string' == typeof e, 'Key must be a string'),
            u.assert('string' == typeof t, 'New key must be a string'),
            this.communicationService
              .sendMessage(
                {
                  type: 'crud/rename',
                  value: {
                    Key: e,
                    NewKey: t,
                    UUID: this.uuid,
                    Owner: this.address,
                  },
                },
                r
              )
              .then(b)
          );
        }
        async renewLease(e, t, r) {
          u.assert('string' == typeof e, 'Key must be a string');
          const n = h(r);
          return (
            u.assert(n >= 0, 'Invalid lease time'),
            this.communicationService
              .sendMessage(
                {
                  type: 'crud/renewlease',
                  value: {
                    Key: e,
                    Lease: n.toString(),
                    UUID: this.uuid,
                    Owner: this.address,
                  },
                },
                t
              )
              .then(b)
          );
        }
        async renewLeaseAll(e, t = {}) {
          const r = h(t);
          return (
            u.assert(r >= 0, 'Invalid lease time'),
            this.communicationService
              .sendMessage(
                {
                  type: 'crud/renewleaseall',
                  value: {
                    Lease: r.toString(),
                    UUID: this.uuid,
                    Owner: this.address,
                  },
                },
                e
              )
              .then(b)
          );
        }
        search(
          e,
          t = { page: 1, limit: Number.MAX_SAFE_INTEGER, reverse: !1 }
        ) {
          return i(this, n)
            .call(
              this,
              `crud/search/${this.uuid}/${e}/${t.page || 1}/${
                t.limit || Number.MAX_SAFE_INTEGER
              }/${t.reverse ? 'desc' : 'asc'}`
            )
            .then((e) => e.keyvalues)
            .then((e) =>
              e.map(({ key: e, value: t }) => ({ key: e, value: d(t) }))
            );
        }
        sendMessage(e, t) {
          return this.communicationService.sendMessage(e, t);
        }
        async txCount(e) {
          return this.communicationService
            .sendMessage(
              {
                type: 'crud/count',
                value: { UUID: this.uuid, Owner: this.address },
              },
              e
            )
            .then((e) => m(e, (e) => void 0 !== e.count))
            .then(({ res: e, data: t }) => ({
              ...b(e),
              count: parseInt((null == t ? void 0 : t.count) || '0'),
            }));
        }
        async txGetLease(e, t) {
          return this.communicationService
            .sendMessage(
              {
                type: 'crud/getlease',
                value: { Key: e, UUID: this.uuid, Owner: this.address },
              },
              t
            )
            .then((t) => m(t, (t) => t.key === e && void 0 !== t.lease))
            .then(({ res: e, data: t }) => ({
              ...b(e),
              lease: Math.round(
                5.5 * parseInt((null == t ? void 0 : t.lease) || '0')
              ),
            }));
        }
        async txGetNShortestLeases(e, t) {
          return {
            txhash: 'xxx',
            height: 1,
            gasWanted: 0,
            gasUsed: 0,
            leases: [],
          };
        }
        async txHas(e, t) {
          return (
            u.assert('string' == typeof e, 'Key must be a string'),
            this.communicationService
              .sendMessage(
                {
                  type: 'crud/has',
                  value: { Key: e, UUID: this.uuid, Owner: this.address },
                },
                t
              )
              .then((t) => m(t, (t) => t.key === e && void 0 !== t.has))
              .then(({ res: e, data: t }) => ({
                ...b(e),
                key: (null == t ? void 0 : t.key) || '',
                has: (null == t ? void 0 : t.has) || !1,
              }))
          );
        }
        async txKeys(e) {
          return this.communicationService
            .sendMessage(
              {
                type: 'crud/keys',
                value: { UUID: this.uuid, Owner: this.address },
              },
              e
            )
            .then((e) => m(e, (e) => void 0 !== e.keys))
            .then(({ res: e, data: t }) => ({
              ...b(e),
              keys: (null == t ? void 0 : t.keys) || [],
            }));
        }
        async txKeyValues(e) {
          return this.communicationService
            .sendMessage(
              {
                type: 'crud/keyvalues',
                value: { Owner: this.address, UUID: this.uuid },
              },
              e
            )
            .then((e) =>
              m(
                e,
                (e) =>
                  Array.isArray(e.keyvalues) &&
                  !!(
                    0 === e.keyvalues.length ||
                    (e.keyvalues[0].key && e.keyvalues[0].value)
                  )
              )
            )
            .then(({ res: e, data: t }) => ({
              height: e.height,
              txhash: e.txhash,
              keyvalues: null == t ? void 0 : t.keyvalues,
            }))
            .then(({ height: e, txhash: t, keyvalues: r }) => ({
              height: e,
              txhash: t,
              keyvalues:
                null == r
                  ? void 0
                  : r.map(({ key: e, value: t }) => ({ key: e, value: d(t) })),
            }));
        }
        txRead(e, t) {
          return this.communicationService
            .sendMessage(
              {
                type: 'crud/read',
                value: { Key: e, UUID: this.uuid, Owner: this.address },
              },
              t
            )
            .then((t) => m(t, (t) => void 0 !== t.value && t.key === e))
            .then(({ res: e, data: t }) => ({
              ...b(e),
              value: null == t ? void 0 : t.value,
            }));
        }
        async update(e, t, r, n = {}) {
          const i = h(n);
          return (
            u.assert(!!e, 'Key cannot be empty'),
            u.assert('string' == typeof e, 'Key must be a string'),
            u.assert('string' == typeof t, 'Value must be a string'),
            u.assert(i >= 0, 'Invalid lease time'),
            u.assert(!e.includes('/'), 'Key cannot contain a slash'),
            this.communicationService
              .sendMessage(
                {
                  type: 'crud/update',
                  value: {
                    Key: p(e),
                    Value: p(t),
                    UUID: this.uuid,
                    Owner: this.address,
                    Lease: i.toString(),
                  },
                },
                r
              )
              .then(b)
          );
        }
        async upsert(e, t, r, n = {}) {
          const i = h(n);
          return (
            u.assert(!!e, 'Key cannot be empty'),
            u.assert('string' == typeof e, 'Key must be a string'),
            u.assert('string' == typeof t, 'Value must be a string'),
            u.assert(i >= 0, 'Invalid lease time'),
            u.assert(!e.includes('/'), 'Key cannot contain a slash'),
            this.communicationService
              .sendMessage(
                {
                  type: 'crud/upsert',
                  value: {
                    Key: p(e),
                    Value: p(t),
                    UUID: this.uuid,
                    Owner: this.address,
                    Lease: i.toString(),
                  },
                },
                r
              )
              .then(b)
          );
        }
        version() {
          return i(this, n)
            .call(this, 'node_info')
            .then((e) => e.application_version.version);
        }
        transferTokensTo(
          e,
          t,
          r,
          { ubnt: n, memo: i } = { ubnt: !1, memo: 'transfer' }
        ) {
          return this.communicationService
            .sendMessage(
              {
                type: 'cosmos-sdk/MsgSend',
                value: {
                  amount: [
                    {
                      amount: String(n ? t.toString() : t + '000000'),
                      denom: 'ubnt',
                    },
                  ],
                  from_address: this.address,
                  to_address: e,
                },
              },
              r
            )
            .then(b);
        }
      }),
        (n = new WeakMap());
      const d = (e) =>
          decodeURI(e).replace(/%../g, (e) =>
            c
              .Some(e)
              .map((e) => e.replace('%', ''))
              .map((e) => parseInt(e, 16))
              .map(String.fromCharCode)
              .join()
          ),
        p = (e) =>
          c
            .Some(e)
            .map((e) =>
              e.replace(/([%])/g, (e) => '%' + e.charCodeAt(0).toString(16))
            )
            .map(encodeURI)
            .map((e) =>
              e.replace(
                /([\#\?\&])/g,
                (e) => '%' + e.charCodeAt(0).toString(16)
              )
            )
            .join(),
        h = ({ seconds: e = 0, minutes: t = 0, hours: r = 0, days: n = 0 }) =>
          Math.round((e + 60 * t + 3600 * r + 86400 * n) / 5.5),
        m = (e, t) => {
          for (let r = 0; r < e.data.length; r++)
            if (t(e.data[r])) {
              const t = e.data[r];
              return s.pullAt(e.data, r), { res: e, data: t };
            }
          return { res: e, data: void 0 };
        },
        b = (e) => ({
          txhash: e.txhash,
          height: e.height,
          gasWanted: parseInt(e.gas_wanted),
          gasUsed: parseInt(e.gas_used),
        });
    },
    function (e, t) {
      var r = Math.pow(2, 30) - 1;
      function n(e, t) {
        if ('string' != typeof e && !Buffer.isBuffer(e))
          throw new TypeError(t + ' must be a buffer or string');
      }
      e.exports = function (e, t, i, o) {
        if ((n(e, 'Password'), n(t, 'Salt'), 'number' != typeof i))
          throw new TypeError('Iterations not a number');
        if (i < 0) throw new TypeError('Bad iterations');
        if ('number' != typeof o)
          throw new TypeError('Key length not a number');
        if (o < 0 || o > r || o != o) throw new TypeError('Bad key length');
      };
    },
    function (e, t, r) {
      e.exports = r(4).createHmac;
    },
    function (e, t, r) {
      e.exports = r(4).randomBytes;
    },
    function (e, t, r) {
      'use strict';
      var n,
        i = t,
        o = r(49),
        a = r(74),
        s = r(8).assert;
      function u(e) {
        'short' === e.type
          ? (this.curve = new a.short(e))
          : 'edwards' === e.type
          ? (this.curve = new a.edwards(e))
          : (this.curve = new a.mont(e)),
          (this.g = this.curve.g),
          (this.n = this.curve.n),
          (this.hash = e.hash),
          s(this.g.validate(), 'Invalid curve'),
          s(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
      }
      function c(e, t) {
        Object.defineProperty(i, e, {
          configurable: !0,
          enumerable: !0,
          get: function () {
            var r = new u(t);
            return (
              Object.defineProperty(i, e, {
                configurable: !0,
                enumerable: !0,
                value: r,
              }),
              r
            );
          },
        });
      }
      (i.PresetCurve = u),
        c('p192', {
          type: 'short',
          prime: 'p192',
          p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
          a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
          b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
          n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
          hash: o.sha256,
          gRed: !1,
          g: [
            '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
            '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',
          ],
        }),
        c('p224', {
          type: 'short',
          prime: 'p224',
          p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
          a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
          b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
          n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
          hash: o.sha256,
          gRed: !1,
          g: [
            'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
            'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',
          ],
        }),
        c('p256', {
          type: 'short',
          prime: null,
          p:
            'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
          a:
            'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
          b:
            '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
          n:
            'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
          hash: o.sha256,
          gRed: !1,
          g: [
            '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
            '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',
          ],
        }),
        c('p384', {
          type: 'short',
          prime: null,
          p:
            'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff',
          a:
            'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc',
          b:
            'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
          n:
            'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
          hash: o.sha384,
          gRed: !1,
          g: [
            'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7',
            '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',
          ],
        }),
        c('p521', {
          type: 'short',
          prime: null,
          p:
            '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff',
          a:
            '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc',
          b:
            '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
          n:
            '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
          hash: o.sha512,
          gRed: !1,
          g: [
            '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
            '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650',
          ],
        }),
        c('curve25519', {
          type: 'mont',
          prime: 'p25519',
          p:
            '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
          a: '76d06',
          b: '1',
          n:
            '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
          hash: o.sha256,
          gRed: !1,
          g: ['9'],
        }),
        c('ed25519', {
          type: 'edwards',
          prime: 'p25519',
          p:
            '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
          a: '-1',
          c: '1',
          d:
            '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
          n:
            '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
          hash: o.sha256,
          gRed: !1,
          g: [
            '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',
            '6666666666666666666666666666666666666666666666666666666666666658',
          ],
        });
      try {
        n = r(148);
      } catch (e) {
        n = void 0;
      }
      c('secp256k1', {
        type: 'short',
        prime: 'k256',
        p:
          'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
        a: '0',
        b: '7',
        n:
          'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
        h: '1',
        hash: o.sha256,
        beta:
          '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
        lambda:
          '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
        basis: [
          {
            a: '3086d221a7d46bcde86c90e49284eb15',
            b: '-e4437ed6010e88286f547fa90abfe4c3',
          },
          {
            a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
            b: '3086d221a7d46bcde86c90e49284eb15',
          },
        ],
        gRed: !1,
        g: [
          '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
          '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
          n,
        ],
      });
    },
    function (e, t, r) {
      var n = t;
      (n.utils = r(12)),
        (n.common = r(30)),
        (n.sha = r(142)),
        (n.ripemd = r(146)),
        (n.hmac = r(147)),
        (n.sha1 = n.sha.sha1),
        (n.sha256 = n.sha.sha256),
        (n.sha224 = n.sha.sha224),
        (n.sha384 = n.sha.sha384),
        (n.sha512 = n.sha.sha512),
        (n.ripemd160 = n.ripemd.ripemd160);
    },
    function (e, t) {
      var r = {
        Array: function (e) {
          return null != e && e.constructor === Array;
        },
        Boolean: function (e) {
          return 'boolean' == typeof e;
        },
        Function: function (e) {
          return 'function' == typeof e;
        },
        Nil: function (e) {
          return null == e;
        },
        Number: function (e) {
          return 'number' == typeof e;
        },
        Object: function (e) {
          return 'object' == typeof e;
        },
        String: function (e) {
          return 'string' == typeof e;
        },
        '': function () {
          return !0;
        },
      };
      for (var n in ((r.Null = r.Nil), r))
        r[n].toJSON = function (e) {
          return e;
        }.bind(null, n);
      e.exports = r;
    },
    function (e, t, r) {
      var n = r(2).Buffer;
      e.exports = {
        check: function (e) {
          if (e.length < 8) return !1;
          if (e.length > 72) return !1;
          if (48 !== e[0]) return !1;
          if (e[1] !== e.length - 2) return !1;
          if (2 !== e[2]) return !1;
          var t = e[3];
          if (0 === t) return !1;
          if (5 + t >= e.length) return !1;
          if (2 !== e[4 + t]) return !1;
          var r = e[5 + t];
          return (
            0 !== r &&
            6 + t + r === e.length &&
            !(128 & e[4]) &&
            !(t > 1 && 0 === e[4] && !(128 & e[5])) &&
            !(128 & e[t + 6]) &&
            !(r > 1 && 0 === e[t + 6] && !(128 & e[t + 7]))
          );
        },
        decode: function (e) {
          if (e.length < 8) throw new Error('DER sequence length is too short');
          if (e.length > 72) throw new Error('DER sequence length is too long');
          if (48 !== e[0]) throw new Error('Expected DER sequence');
          if (e[1] !== e.length - 2)
            throw new Error('DER sequence length is invalid');
          if (2 !== e[2]) throw new Error('Expected DER integer');
          var t = e[3];
          if (0 === t) throw new Error('R length is zero');
          if (5 + t >= e.length) throw new Error('R length is too long');
          if (2 !== e[4 + t]) throw new Error('Expected DER integer (2)');
          var r = e[5 + t];
          if (0 === r) throw new Error('S length is zero');
          if (6 + t + r !== e.length) throw new Error('S length is invalid');
          if (128 & e[4]) throw new Error('R value is negative');
          if (t > 1 && 0 === e[4] && !(128 & e[5]))
            throw new Error('R value excessively padded');
          if (128 & e[t + 6]) throw new Error('S value is negative');
          if (r > 1 && 0 === e[t + 6] && !(128 & e[t + 7]))
            throw new Error('S value excessively padded');
          return { r: e.slice(4, 4 + t), s: e.slice(6 + t) };
        },
        encode: function (e, t) {
          var r = e.length,
            i = t.length;
          if (0 === r) throw new Error('R length is zero');
          if (0 === i) throw new Error('S length is zero');
          if (r > 33) throw new Error('R length is too long');
          if (i > 33) throw new Error('S length is too long');
          if (128 & e[0]) throw new Error('R value is negative');
          if (128 & t[0]) throw new Error('S value is negative');
          if (r > 1 && 0 === e[0] && !(128 & e[1]))
            throw new Error('R value excessively padded');
          if (i > 1 && 0 === t[0] && !(128 & t[1]))
            throw new Error('S value excessively padded');
          var o = n.allocUnsafe(6 + r + i);
          return (
            (o[0] = 48),
            (o[1] = o.length - 2),
            (o[2] = 2),
            (o[3] = e.length),
            e.copy(o, 4),
            (o[4 + r] = 2),
            (o[5 + r] = t.length),
            t.copy(o, 6 + r),
            o
          );
        },
      };
    },
    function (e, t, r) {
      const n = r(2).Buffer,
        i = r(18),
        o = r(0),
        a = r(171),
        s = r(1),
        u = r(3),
        c = r(13),
        f = r(82);
      function l(e) {
        const t = e.length;
        return f.encodingLength(t) + t;
      }
      function d() {
        (this.version = 1),
          (this.locktime = 0),
          (this.ins = []),
          (this.outs = []);
      }
      (d.DEFAULT_SEQUENCE = 4294967295),
        (d.SIGHASH_ALL = 1),
        (d.SIGHASH_NONE = 2),
        (d.SIGHASH_SINGLE = 3),
        (d.SIGHASH_ANYONECANPAY = 128),
        (d.ADVANCED_TRANSACTION_MARKER = 0),
        (d.ADVANCED_TRANSACTION_FLAG = 1);
      const p = n.allocUnsafe(0),
        h = [],
        m = n.from(
          '0000000000000000000000000000000000000000000000000000000000000000',
          'hex'
        ),
        b = n.from(
          '0000000000000000000000000000000000000000000000000000000000000001',
          'hex'
        ),
        g = n.from('ffffffffffffffff', 'hex'),
        v = { script: p, valueBuffer: g };
      (d.fromBuffer = function (e, t) {
        let r = 0;
        function n(t) {
          return (r += t), e.slice(r - t, r);
        }
        function i() {
          const t = e.readUInt32LE(r);
          return (r += 4), t;
        }
        function o() {
          const t = a.readUInt64LE(e, r);
          return (r += 8), t;
        }
        function s() {
          const t = f.decode(e, r);
          return (r += f.decode.bytes), t;
        }
        function u() {
          return n(s());
        }
        function c() {
          const e = s(),
            t = [];
          for (var r = 0; r < e; r++) t.push(u());
          return t;
        }
        const l = new d();
        l.version = (function () {
          const t = e.readInt32LE(r);
          return (r += 4), t;
        })();
        const p = e.readUInt8(r),
          m = e.readUInt8(r + 1);
        let b = !1;
        p === d.ADVANCED_TRANSACTION_MARKER &&
          m === d.ADVANCED_TRANSACTION_FLAG &&
          ((r += 2), (b = !0));
        const g = s();
        for (var v = 0; v < g; ++v)
          l.ins.push({
            hash: n(32),
            index: i(),
            script: u(),
            sequence: i(),
            witness: h,
          });
        const y = s();
        for (v = 0; v < y; ++v) l.outs.push({ value: o(), script: u() });
        if (b) {
          for (v = 0; v < g; ++v) l.ins[v].witness = c();
          if (!l.hasWitnesses())
            throw new Error('Transaction has superfluous witness data');
        }
        if (((l.locktime = i()), t)) return l;
        if (r !== e.length) throw new Error('Transaction has unexpected data');
        return l;
      }),
        (d.fromHex = function (e) {
          return d.fromBuffer(n.from(e, 'hex'));
        }),
        (d.isCoinbaseHash = function (e) {
          u(c.Hash256bit, e);
          for (var t = 0; t < 32; ++t) if (0 !== e[t]) return !1;
          return !0;
        }),
        (d.prototype.isCoinbase = function () {
          return 1 === this.ins.length && d.isCoinbaseHash(this.ins[0].hash);
        }),
        (d.prototype.addInput = function (e, t, r, n) {
          return (
            u(
              c.tuple(
                c.Hash256bit,
                c.UInt32,
                c.maybe(c.UInt32),
                c.maybe(c.Buffer)
              ),
              arguments
            ),
            c.Null(r) && (r = d.DEFAULT_SEQUENCE),
            this.ins.push({
              hash: e,
              index: t,
              script: n || p,
              sequence: r,
              witness: h,
            }) - 1
          );
        }),
        (d.prototype.addOutput = function (e, t) {
          return (
            u(c.tuple(c.Buffer, c.Satoshi), arguments),
            this.outs.push({ script: e, value: t }) - 1
          );
        }),
        (d.prototype.hasWitnesses = function () {
          return this.ins.some(function (e) {
            return 0 !== e.witness.length;
          });
        }),
        (d.prototype.weight = function () {
          return 3 * this.__byteLength(!1) + this.__byteLength(!0);
        }),
        (d.prototype.virtualSize = function () {
          return Math.ceil(this.weight() / 4);
        }),
        (d.prototype.byteLength = function () {
          return this.__byteLength(!0);
        }),
        (d.prototype.__byteLength = function (e) {
          const t = e && this.hasWitnesses();
          return (
            (t ? 10 : 8) +
            f.encodingLength(this.ins.length) +
            f.encodingLength(this.outs.length) +
            this.ins.reduce(function (e, t) {
              return e + 40 + l(t.script);
            }, 0) +
            this.outs.reduce(function (e, t) {
              return e + 8 + l(t.script);
            }, 0) +
            (t
              ? this.ins.reduce(function (e, t) {
                  return (
                    e +
                    (function (e) {
                      const t = e.length;
                      return (
                        f.encodingLength(t) +
                        e.reduce(function (e, t) {
                          return e + l(t);
                        }, 0)
                      );
                    })(t.witness)
                  );
                }, 0)
              : 0)
          );
        }),
        (d.prototype.clone = function () {
          const e = new d();
          return (
            (e.version = this.version),
            (e.locktime = this.locktime),
            (e.ins = this.ins.map(function (e) {
              return {
                hash: e.hash,
                index: e.index,
                script: e.script,
                sequence: e.sequence,
                witness: e.witness,
              };
            })),
            (e.outs = this.outs.map(function (e) {
              return { script: e.script, value: e.value };
            })),
            e
          );
        }),
        (d.prototype.hashForSignature = function (e, t, r) {
          if (
            (u(c.tuple(c.UInt32, c.Buffer, c.Number), arguments),
            e >= this.ins.length)
          )
            return b;
          const a = o.compile(
              o.decompile(t).filter(function (e) {
                return e !== s.OP_CODESEPARATOR;
              })
            ),
            f = this.clone();
          if ((31 & r) === d.SIGHASH_NONE)
            (f.outs = []),
              f.ins.forEach(function (t, r) {
                r !== e && (t.sequence = 0);
              });
          else if ((31 & r) === d.SIGHASH_SINGLE) {
            if (e >= this.outs.length) return b;
            f.outs.length = e + 1;
            for (var l = 0; l < e; l++) f.outs[l] = v;
            f.ins.forEach(function (t, r) {
              r !== e && (t.sequence = 0);
            });
          }
          r & d.SIGHASH_ANYONECANPAY
            ? ((f.ins = [f.ins[e]]), (f.ins[0].script = a))
            : (f.ins.forEach(function (e) {
                e.script = p;
              }),
              (f.ins[e].script = a));
          const h = n.allocUnsafe(f.__byteLength(!1) + 4);
          return (
            h.writeInt32LE(r, h.length - 4),
            f.__toBuffer(h, 0, !1),
            i.hash256(h)
          );
        }),
        (d.prototype.hashForWitnessV0 = function (e, t, r, o) {
          let s, p;
          function h(e) {
            p += e.copy(s, p);
          }
          function b(e) {
            p = s.writeUInt32LE(e, p);
          }
          function g(e) {
            p = a.writeUInt64LE(s, e, p);
          }
          function v(e) {
            f.encode(e, s, p), (p += f.encode.bytes);
          }
          function y(e) {
            v(e.length), h(e);
          }
          u(c.tuple(c.UInt32, c.Buffer, c.Satoshi, c.UInt32), arguments);
          let w = m,
            _ = m,
            E = m;
          if (
            (o & d.SIGHASH_ANYONECANPAY ||
              ((s = n.allocUnsafe(36 * this.ins.length)),
              (p = 0),
              this.ins.forEach(function (e) {
                h(e.hash), b(e.index);
              }),
              (_ = i.hash256(s))),
            o & d.SIGHASH_ANYONECANPAY ||
              (31 & o) === d.SIGHASH_SINGLE ||
              (31 & o) === d.SIGHASH_NONE ||
              ((s = n.allocUnsafe(4 * this.ins.length)),
              (p = 0),
              this.ins.forEach(function (e) {
                b(e.sequence);
              }),
              (E = i.hash256(s))),
            (31 & o) !== d.SIGHASH_SINGLE && (31 & o) !== d.SIGHASH_NONE)
          ) {
            const e = this.outs.reduce(function (e, t) {
              return e + 8 + l(t.script);
            }, 0);
            (s = n.allocUnsafe(e)),
              (p = 0),
              this.outs.forEach(function (e) {
                g(e.value), y(e.script);
              }),
              (w = i.hash256(s));
          } else if ((31 & o) === d.SIGHASH_SINGLE && e < this.outs.length) {
            const t = this.outs[e];
            (s = n.allocUnsafe(8 + l(t.script))),
              (p = 0),
              g(t.value),
              y(t.script),
              (w = i.hash256(s));
          }
          (s = n.allocUnsafe(156 + l(t))), (p = 0);
          const S = this.ins[e];
          return (
            b(this.version),
            h(_),
            h(E),
            h(S.hash),
            b(S.index),
            y(t),
            g(r),
            b(S.sequence),
            h(w),
            b(this.locktime),
            b(o),
            i.hash256(s)
          );
        }),
        (d.prototype.getHash = function () {
          return i.hash256(this.__toBuffer(void 0, void 0, !1));
        }),
        (d.prototype.getId = function () {
          return this.getHash().reverse().toString('hex');
        }),
        (d.prototype.toBuffer = function (e, t) {
          return this.__toBuffer(e, t, !0);
        }),
        (d.prototype.__toBuffer = function (e, t, r) {
          e || (e = n.allocUnsafe(this.__byteLength(r)));
          let i = t || 0;
          function o(t) {
            i += t.copy(e, i);
          }
          function s(t) {
            i = e.writeUInt8(t, i);
          }
          function u(t) {
            i = e.writeUInt32LE(t, i);
          }
          function c(t) {
            f.encode(t, e, i), (i += f.encode.bytes);
          }
          function l(e) {
            c(e.length), o(e);
          }
          var p;
          (p = this.version), (i = e.writeInt32LE(p, i));
          const h = r && this.hasWitnesses();
          return (
            h &&
              (s(d.ADVANCED_TRANSACTION_MARKER),
              s(d.ADVANCED_TRANSACTION_FLAG)),
            c(this.ins.length),
            this.ins.forEach(function (e) {
              o(e.hash), u(e.index), l(e.script), u(e.sequence);
            }),
            c(this.outs.length),
            this.outs.forEach(function (t) {
              t.valueBuffer
                ? o(t.valueBuffer)
                : (function (t) {
                    i = a.writeUInt64LE(e, t, i);
                  })(t.value),
                l(t.script);
            }),
            h &&
              this.ins.forEach(function (e) {
                var t;
                c((t = e.witness).length), t.forEach(l);
              }),
            u(this.locktime),
            void 0 !== t ? e.slice(t, i) : e
          );
        }),
        (d.prototype.toHex = function () {
          return this.toBuffer().toString('hex');
        }),
        (d.prototype.setInputScript = function (e, t) {
          u(c.tuple(c.Number, c.Buffer), arguments), (this.ins[e].script = t);
        }),
        (d.prototype.setWitness = function (e, t) {
          u(c.tuple(c.Number, [c.Buffer]), arguments),
            (this.ins[e].witness = t);
        }),
        (e.exports = d);
    },
    function (e, t, r) {
      const n = r(173),
        i = r(174),
        o = r(175),
        a = r(176),
        s = r(177),
        u = r(178),
        c = r(179);
      e.exports = {
        embed: n,
        p2ms: i,
        p2pk: o,
        p2pkh: a,
        p2sh: s,
        p2wpkh: u,
        p2wsh: c,
      };
    },
    function (e, t, r) {
      e.exports = { input: r(181), output: r(182) };
    },
    function (e, t, r) {
      e.exports = { input: r(184), output: r(185) };
    },
    function (e, t, r) {
      e.exports = { input: r(186), output: r(187) };
    },
    function (e, t) {
      e.exports = function (e) {
        return (
          e.webpackPolyfill ||
            ((e.deprecate = function () {}),
            (e.paths = []),
            e.children || (e.children = []),
            Object.defineProperty(e, 'loaded', {
              enumerable: !0,
              get: function () {
                return e.l;
              },
            }),
            Object.defineProperty(e, 'id', {
              enumerable: !0,
              get: function () {
                return e.i;
              },
            }),
            (e.webpackPolyfill = 1)),
          e
        );
      };
    },
    ,
    ,
    ,
    function (e, t, r) {
      'use strict';
      Object.defineProperty(t, '__esModule', { value: !0 });
      var n = r(106);
      (t.passThrough = function (e) {
        return function (t) {
          try {
            return e(t), t;
          } catch (e) {
            throw e;
          }
        };
      }),
        (t.passThroughAwait = function (e) {
          return function (t) {
            return n.Promise.resolve(e.call(e, t)).then(function () {
              return t;
            });
          };
        });
    },
    function (e, t, r) {
      'use strict';
      r.r(t),
        r.d(t, 'Headers', function () {
          return M;
        }),
        r.d(t, 'Request', function () {
          return H;
        }),
        r.d(t, 'Response', function () {
          return R;
        }),
        r.d(t, 'FetchError', function () {
          return d;
        });
      var n = r(5),
        i = r(24),
        o = r(14),
        a = r(31),
        s = r(15);
      const u = n.Readable,
        c = Symbol('buffer'),
        f = Symbol('type');
      class l {
        constructor() {
          this[f] = '';
          const e = arguments[0],
            t = arguments[1],
            r = [];
          let n = 0;
          if (e) {
            const t = e,
              i = Number(t.length);
            for (let e = 0; e < i; e++) {
              const i = t[e];
              let o;
              (o =
                i instanceof Buffer
                  ? i
                  : ArrayBuffer.isView(i)
                  ? Buffer.from(i.buffer, i.byteOffset, i.byteLength)
                  : i instanceof ArrayBuffer
                  ? Buffer.from(i)
                  : i instanceof l
                  ? i[c]
                  : Buffer.from('string' == typeof i ? i : String(i))),
                (n += o.length),
                r.push(o);
            }
          }
          this[c] = Buffer.concat(r);
          let i = t && void 0 !== t.type && String(t.type).toLowerCase();
          i && !/[^\u0020-\u007E]/.test(i) && (this[f] = i);
        }
        get size() {
          return this[c].length;
        }
        get type() {
          return this[f];
        }
        text() {
          return Promise.resolve(this[c].toString());
        }
        arrayBuffer() {
          const e = this[c],
            t = e.buffer.slice(e.byteOffset, e.byteOffset + e.byteLength);
          return Promise.resolve(t);
        }
        stream() {
          const e = new u();
          return (e._read = function () {}), e.push(this[c]), e.push(null), e;
        }
        toString() {
          return '[object Blob]';
        }
        slice() {
          const e = this.size,
            t = arguments[0],
            r = arguments[1];
          let n, i;
          (n = void 0 === t ? 0 : t < 0 ? Math.max(e + t, 0) : Math.min(t, e)),
            (i =
              void 0 === r ? e : r < 0 ? Math.max(e + r, 0) : Math.min(r, e));
          const o = Math.max(i - n, 0),
            a = this[c].slice(n, n + o),
            s = new l([], { type: arguments[2] });
          return (s[c] = a), s;
        }
      }
      function d(e, t, r) {
        Error.call(this, e),
          (this.message = e),
          (this.type = t),
          r && (this.code = this.errno = r.code),
          Error.captureStackTrace(this, this.constructor);
      }
      let p;
      Object.defineProperties(l.prototype, {
        size: { enumerable: !0 },
        type: { enumerable: !0 },
        slice: { enumerable: !0 },
      }),
        Object.defineProperty(l.prototype, Symbol.toStringTag, {
          value: 'Blob',
          writable: !1,
          enumerable: !1,
          configurable: !0,
        }),
        (d.prototype = Object.create(Error.prototype)),
        (d.prototype.constructor = d),
        (d.prototype.name = 'FetchError');
      try {
        p = require('encoding').convert;
      } catch (e) {}
      const h = Symbol('Body internals'),
        m = n.PassThrough;
      function b(e) {
        var t = this,
          r =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          i = r.size;
        let o = void 0 === i ? 0 : i;
        var a = r.timeout;
        let s = void 0 === a ? 0 : a;
        null == e
          ? (e = null)
          : v(e)
          ? (e = Buffer.from(e.toString()))
          : y(e) ||
            Buffer.isBuffer(e) ||
            ('[object ArrayBuffer]' === Object.prototype.toString.call(e)
              ? (e = Buffer.from(e))
              : ArrayBuffer.isView(e)
              ? (e = Buffer.from(e.buffer, e.byteOffset, e.byteLength))
              : e instanceof n || (e = Buffer.from(String(e)))),
          (this[h] = { body: e, disturbed: !1, error: null }),
          (this.size = o),
          (this.timeout = s),
          e instanceof n &&
            e.on('error', function (e) {
              const r =
                'AbortError' === e.name
                  ? e
                  : new d(
                      `Invalid response body while trying to fetch ${t.url}: ${e.message}`,
                      'system',
                      e
                    );
              t[h].error = r;
            });
      }
      function g() {
        var e = this;
        if (this[h].disturbed)
          return b.Promise.reject(
            new TypeError('body used already for: ' + this.url)
          );
        if (((this[h].disturbed = !0), this[h].error))
          return b.Promise.reject(this[h].error);
        let t = this.body;
        if (null === t) return b.Promise.resolve(Buffer.alloc(0));
        if ((y(t) && (t = t.stream()), Buffer.isBuffer(t)))
          return b.Promise.resolve(t);
        if (!(t instanceof n)) return b.Promise.resolve(Buffer.alloc(0));
        let r = [],
          i = 0,
          o = !1;
        return new b.Promise(function (n, a) {
          let s;
          e.timeout &&
            (s = setTimeout(function () {
              (o = !0),
                a(
                  new d(
                    `Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,
                    'body-timeout'
                  )
                );
            }, e.timeout)),
            t.on('error', function (t) {
              'AbortError' === t.name
                ? ((o = !0), a(t))
                : a(
                    new d(
                      `Invalid response body while trying to fetch ${e.url}: ${t.message}`,
                      'system',
                      t
                    )
                  );
            }),
            t.on('data', function (t) {
              if (!o && null !== t) {
                if (e.size && i + t.length > e.size)
                  return (
                    (o = !0),
                    void a(
                      new d(
                        `content size at ${e.url} over limit: ${e.size}`,
                        'max-size'
                      )
                    )
                  );
                (i += t.length), r.push(t);
              }
            }),
            t.on('end', function () {
              if (!o) {
                clearTimeout(s);
                try {
                  n(Buffer.concat(r, i));
                } catch (t) {
                  a(
                    new d(
                      `Could not create Buffer from response body for ${e.url}: ${t.message}`,
                      'system',
                      t
                    )
                  );
                }
              }
            });
        });
      }
      function v(e) {
        return (
          'object' == typeof e &&
          'function' == typeof e.append &&
          'function' == typeof e.delete &&
          'function' == typeof e.get &&
          'function' == typeof e.getAll &&
          'function' == typeof e.has &&
          'function' == typeof e.set &&
          ('URLSearchParams' === e.constructor.name ||
            '[object URLSearchParams]' === Object.prototype.toString.call(e) ||
            'function' == typeof e.sort)
        );
      }
      function y(e) {
        return (
          'object' == typeof e &&
          'function' == typeof e.arrayBuffer &&
          'string' == typeof e.type &&
          'function' == typeof e.stream &&
          'function' == typeof e.constructor &&
          'string' == typeof e.constructor.name &&
          /^(Blob|File)$/.test(e.constructor.name) &&
          /^(Blob|File)$/.test(e[Symbol.toStringTag])
        );
      }
      function w(e) {
        let t,
          r,
          i = e.body;
        if (e.bodyUsed) throw new Error('cannot clone body after it is used');
        return (
          i instanceof n &&
            'function' != typeof i.getBoundary &&
            ((t = new m()),
            (r = new m()),
            i.pipe(t),
            i.pipe(r),
            (e[h].body = t),
            (i = r)),
          i
        );
      }
      function _(e) {
        return null === e
          ? null
          : 'string' == typeof e
          ? 'text/plain;charset=UTF-8'
          : v(e)
          ? 'application/x-www-form-urlencoded;charset=UTF-8'
          : y(e)
          ? e.type || null
          : Buffer.isBuffer(e) ||
            '[object ArrayBuffer]' === Object.prototype.toString.call(e) ||
            ArrayBuffer.isView(e)
          ? null
          : 'function' == typeof e.getBoundary
          ? 'multipart/form-data;boundary=' + e.getBoundary()
          : e instanceof n
          ? null
          : 'text/plain;charset=UTF-8';
      }
      function E(e) {
        const t = e.body;
        return null === t
          ? 0
          : y(t)
          ? t.size
          : Buffer.isBuffer(t)
          ? t.length
          : t &&
            'function' == typeof t.getLengthSync &&
            ((t._lengthRetrievers && 0 == t._lengthRetrievers.length) ||
              (t.hasKnownLength && t.hasKnownLength()))
          ? t.getLengthSync()
          : null;
      }
      (b.prototype = {
        get body() {
          return this[h].body;
        },
        get bodyUsed() {
          return this[h].disturbed;
        },
        arrayBuffer() {
          return g.call(this).then(function (e) {
            return e.buffer.slice(e.byteOffset, e.byteOffset + e.byteLength);
          });
        },
        blob() {
          let e = (this.headers && this.headers.get('content-type')) || '';
          return g.call(this).then(function (t) {
            return Object.assign(new l([], { type: e.toLowerCase() }), {
              [c]: t,
            });
          });
        },
        json() {
          var e = this;
          return g.call(this).then(function (t) {
            try {
              return JSON.parse(t.toString());
            } catch (t) {
              return b.Promise.reject(
                new d(
                  `invalid json response body at ${e.url} reason: ${t.message}`,
                  'invalid-json'
                )
              );
            }
          });
        },
        text() {
          return g.call(this).then(function (e) {
            return e.toString();
          });
        },
        buffer() {
          return g.call(this);
        },
        textConverted() {
          var e = this;
          return g.call(this).then(function (t) {
            return (function (e, t) {
              if ('function' != typeof p)
                throw new Error(
                  'The package `encoding` must be installed to use the textConverted() function'
                );
              const r = t.get('content-type');
              let n,
                i,
                o = 'utf-8';
              r && (n = /charset=([^;]*)/i.exec(r));
              (i = e.slice(0, 1024).toString()),
                !n && i && (n = /<meta.+?charset=(['"])(.+?)\1/i.exec(i));
              !n &&
                i &&
                ((n = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(
                  i
                )),
                n ||
                  ((n = /<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(
                    i
                  )),
                  n && n.pop()),
                n && (n = /charset=(.*)/i.exec(n.pop())));
              !n && i && (n = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(i));
              n &&
                ((o = n.pop()),
                ('gb2312' !== o && 'gbk' !== o) || (o = 'gb18030'));
              return p(e, 'UTF-8', o).toString();
            })(t, e.headers);
          });
        },
      }),
        Object.defineProperties(b.prototype, {
          body: { enumerable: !0 },
          bodyUsed: { enumerable: !0 },
          arrayBuffer: { enumerable: !0 },
          blob: { enumerable: !0 },
          json: { enumerable: !0 },
          text: { enumerable: !0 },
        }),
        (b.mixIn = function (e) {
          for (const t of Object.getOwnPropertyNames(b.prototype))
            if (!(t in e)) {
              const r = Object.getOwnPropertyDescriptor(b.prototype, t);
              Object.defineProperty(e, t, r);
            }
        }),
        (b.Promise = global.Promise);
      const S = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,
        x = /[^\t\x20-\x7e\x80-\xff]/;
      function I(e) {
        if (((e = '' + e), S.test(e) || '' === e))
          throw new TypeError(e + ' is not a legal HTTP header name');
      }
      function A(e) {
        if (((e = '' + e), x.test(e)))
          throw new TypeError(e + ' is not a legal HTTP header value');
      }
      function k(e, t) {
        t = t.toLowerCase();
        for (const r in e) if (r.toLowerCase() === t) return r;
      }
      const z = Symbol('map');
      class M {
        constructor() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : void 0;
          if (((this[z] = Object.create(null)), e instanceof M)) {
            const t = e.raw(),
              r = Object.keys(t);
            for (const e of r) for (const r of t[e]) this.append(e, r);
          } else if (null == e);
          else {
            if ('object' != typeof e)
              throw new TypeError('Provided initializer must be an object');
            {
              const t = e[Symbol.iterator];
              if (null != t) {
                if ('function' != typeof t)
                  throw new TypeError('Header pairs must be iterable');
                const r = [];
                for (const t of e) {
                  if (
                    'object' != typeof t ||
                    'function' != typeof t[Symbol.iterator]
                  )
                    throw new TypeError('Each header pair must be iterable');
                  r.push(Array.from(t));
                }
                for (const e of r) {
                  if (2 !== e.length)
                    throw new TypeError(
                      'Each header pair must be a name/value tuple'
                    );
                  this.append(e[0], e[1]);
                }
              } else
                for (const t of Object.keys(e)) {
                  const r = e[t];
                  this.append(t, r);
                }
            }
          }
        }
        get(e) {
          I((e = '' + e));
          const t = k(this[z], e);
          return void 0 === t ? null : this[z][t].join(', ');
        }
        forEach(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : void 0,
            r = T(this),
            n = 0;
          for (; n < r.length; ) {
            var i = r[n];
            const o = i[0],
              a = i[1];
            e.call(t, a, o, this), (r = T(this)), n++;
          }
        }
        set(e, t) {
          (t = '' + t), I((e = '' + e)), A(t);
          const r = k(this[z], e);
          this[z][void 0 !== r ? r : e] = [t];
        }
        append(e, t) {
          (t = '' + t), I((e = '' + e)), A(t);
          const r = k(this[z], e);
          void 0 !== r ? this[z][r].push(t) : (this[z][e] = [t]);
        }
        has(e) {
          return I((e = '' + e)), void 0 !== k(this[z], e);
        }
        delete(e) {
          I((e = '' + e));
          const t = k(this[z], e);
          void 0 !== t && delete this[z][t];
        }
        raw() {
          return this[z];
        }
        keys() {
          return O(this, 'key');
        }
        values() {
          return O(this, 'value');
        }
        [Symbol.iterator]() {
          return O(this, 'key+value');
        }
      }
      function T(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : 'key+value';
        const r = Object.keys(e[z]).sort();
        return r.map(
          'key' === t
            ? function (e) {
                return e.toLowerCase();
              }
            : 'value' === t
            ? function (t) {
                return e[z][t].join(', ');
              }
            : function (t) {
                return [t.toLowerCase(), e[z][t].join(', ')];
              }
        );
      }
      (M.prototype.entries = M.prototype[Symbol.iterator]),
        Object.defineProperty(M.prototype, Symbol.toStringTag, {
          value: 'Headers',
          writable: !1,
          enumerable: !1,
          configurable: !0,
        }),
        Object.defineProperties(M.prototype, {
          get: { enumerable: !0 },
          forEach: { enumerable: !0 },
          set: { enumerable: !0 },
          append: { enumerable: !0 },
          has: { enumerable: !0 },
          delete: { enumerable: !0 },
          keys: { enumerable: !0 },
          values: { enumerable: !0 },
          entries: { enumerable: !0 },
        });
      const P = Symbol('internal');
      function O(e, t) {
        const r = Object.create(j);
        return (r[P] = { target: e, kind: t, index: 0 }), r;
      }
      const j = Object.setPrototypeOf(
        {
          next() {
            if (!this || Object.getPrototypeOf(this) !== j)
              throw new TypeError('Value of `this` is not a HeadersIterator');
            var e = this[P];
            const t = e.target,
              r = e.kind,
              n = e.index,
              i = T(t, r);
            return n >= i.length
              ? { value: void 0, done: !0 }
              : ((this[P].index = n + 1), { value: i[n], done: !1 });
          },
        },
        Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()))
      );
      function N(e) {
        const t = Object.assign({ __proto__: null }, e[z]),
          r = k(e[z], 'Host');
        return void 0 !== r && (t[r] = t[r][0]), t;
      }
      Object.defineProperty(j, Symbol.toStringTag, {
        value: 'HeadersIterator',
        writable: !1,
        enumerable: !1,
        configurable: !0,
      });
      const L = Symbol('Response internals'),
        q = i.STATUS_CODES;
      class R {
        constructor() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : null,
            t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {};
          b.call(this, e, t);
          const r = t.status || 200,
            n = new M(t.headers);
          if (null != e && !n.has('Content-Type')) {
            const t = _(e);
            t && n.append('Content-Type', t);
          }
          this[L] = {
            url: t.url,
            status: r,
            statusText: t.statusText || q[r],
            headers: n,
            counter: t.counter,
          };
        }
        get url() {
          return this[L].url || '';
        }
        get status() {
          return this[L].status;
        }
        get ok() {
          return this[L].status >= 200 && this[L].status < 300;
        }
        get redirected() {
          return this[L].counter > 0;
        }
        get statusText() {
          return this[L].statusText;
        }
        get headers() {
          return this[L].headers;
        }
        clone() {
          return new R(w(this), {
            url: this.url,
            status: this.status,
            statusText: this.statusText,
            headers: this.headers,
            ok: this.ok,
            redirected: this.redirected,
          });
        }
      }
      b.mixIn(R.prototype),
        Object.defineProperties(R.prototype, {
          url: { enumerable: !0 },
          status: { enumerable: !0 },
          ok: { enumerable: !0 },
          redirected: { enumerable: !0 },
          statusText: { enumerable: !0 },
          headers: { enumerable: !0 },
          clone: { enumerable: !0 },
        }),
        Object.defineProperty(R.prototype, Symbol.toStringTag, {
          value: 'Response',
          writable: !1,
          enumerable: !1,
          configurable: !0,
        });
      const B = Symbol('Request internals'),
        C = o.parse,
        U = o.format,
        D = 'destroy' in n.Readable.prototype;
      function K(e) {
        return 'object' == typeof e && 'object' == typeof e[B];
      }
      class H {
        constructor(e) {
          let t,
            r =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {};
          K(e)
            ? (t = C(e.url))
            : ((t = e && e.href ? C(e.href) : C('' + e)), (e = {}));
          let n = r.method || e.method || 'GET';
          if (
            ((n = n.toUpperCase()),
            (null != r.body || (K(e) && null !== e.body)) &&
              ('GET' === n || 'HEAD' === n))
          )
            throw new TypeError(
              'Request with GET/HEAD method cannot have body'
            );
          let i =
            null != r.body ? r.body : K(e) && null !== e.body ? w(e) : null;
          b.call(this, i, {
            timeout: r.timeout || e.timeout || 0,
            size: r.size || e.size || 0,
          });
          const o = new M(r.headers || e.headers || {});
          if (null != i && !o.has('Content-Type')) {
            const e = _(i);
            e && o.append('Content-Type', e);
          }
          let a = K(e) ? e.signal : null;
          if (
            ('signal' in r && (a = r.signal),
            null != a &&
              !(function (e) {
                const t = e && 'object' == typeof e && Object.getPrototypeOf(e);
                return !(!t || 'AbortSignal' !== t.constructor.name);
              })(a))
          )
            throw new TypeError(
              'Expected signal to be an instanceof AbortSignal'
            );
          (this[B] = {
            method: n,
            redirect: r.redirect || e.redirect || 'follow',
            headers: o,
            parsedURL: t,
            signal: a,
          }),
            (this.follow =
              void 0 !== r.follow
                ? r.follow
                : void 0 !== e.follow
                ? e.follow
                : 20),
            (this.compress =
              void 0 !== r.compress
                ? r.compress
                : void 0 === e.compress || e.compress),
            (this.counter = r.counter || e.counter || 0),
            (this.agent = r.agent || e.agent);
        }
        get method() {
          return this[B].method;
        }
        get url() {
          return U(this[B].parsedURL);
        }
        get headers() {
          return this[B].headers;
        }
        get redirect() {
          return this[B].redirect;
        }
        get signal() {
          return this[B].signal;
        }
        clone() {
          return new H(this);
        }
      }
      function V(e) {
        Error.call(this, e),
          (this.type = 'aborted'),
          (this.message = e),
          Error.captureStackTrace(this, this.constructor);
      }
      b.mixIn(H.prototype),
        Object.defineProperty(H.prototype, Symbol.toStringTag, {
          value: 'Request',
          writable: !1,
          enumerable: !1,
          configurable: !0,
        }),
        Object.defineProperties(H.prototype, {
          method: { enumerable: !0 },
          url: { enumerable: !0 },
          headers: { enumerable: !0 },
          redirect: { enumerable: !0 },
          clone: { enumerable: !0 },
          signal: { enumerable: !0 },
        }),
        (V.prototype = Object.create(Error.prototype)),
        (V.prototype.constructor = V),
        (V.prototype.name = 'AbortError');
      const F = n.PassThrough,
        W = o.resolve;
      function Y(e, t) {
        if (!Y.Promise)
          throw new Error(
            'native promise missing, set fetch.Promise to your favorite alternative'
          );
        return (
          (b.Promise = Y.Promise),
          new Y.Promise(function (r, o) {
            const u = new H(e, t),
              c = (function (e) {
                const t = e[B].parsedURL,
                  r = new M(e[B].headers);
                if (
                  (r.has('Accept') || r.set('Accept', '*/*'),
                  !t.protocol || !t.hostname)
                )
                  throw new TypeError('Only absolute URLs are supported');
                if (!/^https?:$/.test(t.protocol))
                  throw new TypeError('Only HTTP(S) protocols are supported');
                if (e.signal && e.body instanceof n.Readable && !D)
                  throw new Error(
                    'Cancellation of streamed requests with AbortSignal is not supported in node < 8'
                  );
                let i = null;
                if (
                  (null == e.body &&
                    /^(POST|PUT)$/i.test(e.method) &&
                    (i = '0'),
                  null != e.body)
                ) {
                  const t = E(e);
                  'number' == typeof t && (i = String(t));
                }
                i && r.set('Content-Length', i),
                  r.has('User-Agent') ||
                    r.set(
                      'User-Agent',
                      'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)'
                    ),
                  e.compress &&
                    !r.has('Accept-Encoding') &&
                    r.set('Accept-Encoding', 'gzip,deflate');
                let o = e.agent;
                return (
                  'function' == typeof o && (o = o(t)),
                  r.has('Connection') || o || r.set('Connection', 'close'),
                  Object.assign({}, t, {
                    method: e.method,
                    headers: N(r),
                    agent: o,
                  })
                );
              })(u),
              f = ('https:' === c.protocol ? a : i).request,
              l = u.signal;
            let p = null;
            const h = function () {
              let e = new V('The user aborted a request.');
              o(e),
                u.body && u.body instanceof n.Readable && u.body.destroy(e),
                p && p.body && p.body.emit('error', e);
            };
            if (l && l.aborted) return void h();
            const m = function () {
                h(), v();
              },
              b = f(c);
            let g;
            function v() {
              b.abort(),
                l && l.removeEventListener('abort', m),
                clearTimeout(g);
            }
            l && l.addEventListener('abort', m),
              u.timeout &&
                b.once('socket', function (e) {
                  g = setTimeout(function () {
                    o(new d('network timeout at: ' + u.url, 'request-timeout')),
                      v();
                  }, u.timeout);
                }),
              b.on('error', function (e) {
                o(
                  new d(
                    `request to ${u.url} failed, reason: ${e.message}`,
                    'system',
                    e
                  )
                ),
                  v();
              }),
              b.on('response', function (e) {
                clearTimeout(g);
                const t = (function (e) {
                  const t = new M();
                  for (const r of Object.keys(e))
                    if (!S.test(r))
                      if (Array.isArray(e[r]))
                        for (const n of e[r])
                          x.test(n) ||
                            (void 0 === t[z][r]
                              ? (t[z][r] = [n])
                              : t[z][r].push(n));
                      else x.test(e[r]) || (t[z][r] = [e[r]]);
                  return t;
                })(e.headers);
                if (Y.isRedirect(e.statusCode)) {
                  const n = t.get('Location'),
                    i = null === n ? null : W(u.url, n);
                  switch (u.redirect) {
                    case 'error':
                      return (
                        o(
                          new d(
                            'uri requested responds with a redirect, redirect mode is set to error: ' +
                              u.url,
                            'no-redirect'
                          )
                        ),
                        void v()
                      );
                    case 'manual':
                      if (null !== i)
                        try {
                          t.set('Location', i);
                        } catch (e) {
                          o(e);
                        }
                      break;
                    case 'follow':
                      if (null === i) break;
                      if (u.counter >= u.follow)
                        return (
                          o(
                            new d(
                              'maximum redirect reached at: ' + u.url,
                              'max-redirect'
                            )
                          ),
                          void v()
                        );
                      const n = {
                        headers: new M(u.headers),
                        follow: u.follow,
                        counter: u.counter + 1,
                        agent: u.agent,
                        compress: u.compress,
                        method: u.method,
                        body: u.body,
                        signal: u.signal,
                        timeout: u.timeout,
                        size: u.size,
                      };
                      return 303 !== e.statusCode && u.body && null === E(u)
                        ? (o(
                            new d(
                              'Cannot follow redirect with body being a readable stream',
                              'unsupported-redirect'
                            )
                          ),
                          void v())
                        : ((303 !== e.statusCode &&
                            ((301 !== e.statusCode && 302 !== e.statusCode) ||
                              'POST' !== u.method)) ||
                            ((n.method = 'GET'),
                            (n.body = void 0),
                            n.headers.delete('content-length')),
                          r(Y(new H(i, n))),
                          void v());
                  }
                }
                e.once('end', function () {
                  l && l.removeEventListener('abort', m);
                });
                let n = e.pipe(new F());
                const i = {
                    url: u.url,
                    status: e.statusCode,
                    statusText: e.statusMessage,
                    headers: t,
                    size: u.size,
                    timeout: u.timeout,
                    counter: u.counter,
                  },
                  a = t.get('Content-Encoding');
                if (
                  !u.compress ||
                  'HEAD' === u.method ||
                  null === a ||
                  204 === e.statusCode ||
                  304 === e.statusCode
                )
                  return (p = new R(n, i)), void r(p);
                const c = {
                  flush: s.Z_SYNC_FLUSH,
                  finishFlush: s.Z_SYNC_FLUSH,
                };
                if ('gzip' == a || 'x-gzip' == a)
                  return (
                    (n = n.pipe(s.createGunzip(c))),
                    (p = new R(n, i)),
                    void r(p)
                  );
                if ('deflate' != a && 'x-deflate' != a) {
                  if (
                    'br' == a &&
                    'function' == typeof s.createBrotliDecompress
                  )
                    return (
                      (n = n.pipe(s.createBrotliDecompress())),
                      (p = new R(n, i)),
                      void r(p)
                    );
                  (p = new R(n, i)), r(p);
                } else {
                  e.pipe(new F()).once('data', function (e) {
                    (n =
                      8 == (15 & e[0])
                        ? n.pipe(s.createInflate())
                        : n.pipe(s.createInflateRaw())),
                      (p = new R(n, i)),
                      r(p);
                  });
                }
              }),
              (function (e, t) {
                const r = t.body;
                null === r
                  ? e.end()
                  : y(r)
                  ? r.stream().pipe(e)
                  : Buffer.isBuffer(r)
                  ? (e.write(r), e.end())
                  : r.pipe(e);
              })(b, u);
          })
        );
      }
      (Y.isRedirect = function (e) {
        return 301 === e || 302 === e || 303 === e || 307 === e || 308 === e;
      }),
        (Y.Promise = global.Promise),
        (t.default = Y);
    },
    function (e, t, r) {
      var n, i;
      /**
       * Monet.js 0.9.0-rc.1
       *
       * (c) 2012-2018 Chris Myers
       * @license Monet.js may be freely distributed under the MIT license.
       * For all details and documentation:
       * https://monet.github.io/monet.js/
       */ 'undefined' != typeof self && self,
        void 0 ===
          (i =
            'function' ==
            typeof (n = function () {
              'use strict';
              var e = {
                  apply2: I,
                  assign: y(Object.assign)
                    ? Object.assign
                    : function (e, t) {
                        for (var r in t)
                          t.hasOwnProperty(r) &&
                            void 0 !== t[r] &&
                            (e[r] = t[r]);
                        return e;
                      },
                  compose: v,
                  curry: g(x(g), [])([]),
                  idFunction: w,
                  isFunction: y,
                  noop: m,
                  swap: x,
                },
                t = 'Identity',
                r = 'Maybe',
                n = 'Either',
                i = 'Validation',
                o = 'List',
                a = 'NEL',
                s = 'IO',
                u = 'MonadT',
                c = 'Reader',
                f = 'Free';
              function l(e, t) {
                e['@@type'] = 'monet.js/' + t;
              }
              function d(e) {
                return function (t) {
                  return (
                    (t['@@type'] || t.constructor['@@type']) === 'monet.js/' + e
                  );
                };
              }
              function p(e) {
                return function (t) {
                  var r =
                    t['@@type'] || (t.constructor && t.constructor['@@type']);
                  return (
                    Boolean(r) &&
                    r.length >= e.length &&
                    r.indexOf(e) === r.length - e.length
                  );
                };
              }
              function h(e) {
                return null == e;
              }
              function m() {}
              function b(e) {
                return Array.prototype.slice.call(e);
              }
              function g(e, t) {
                return function () {
                  var r = t.concat(b(arguments));
                  return r.length >= e.length
                    ? e.apply(null, r.slice(0, r.length))
                    : g(e, r);
                };
              }
              function v(e, t) {
                return function (r) {
                  return e(t(r));
                };
              }
              function y(e) {
                return Boolean(e && e.constructor && e.call && e.apply);
              }
              function w(e) {
                return e;
              }
              function _(e, t) {
                return (
                  e === t ||
                  (e != e && t != t) ||
                  (!(!e || !t) &&
                    !(!y(e.equals) || !y(t.equals)) &&
                    e.equals(t))
                );
              }
              function E(e) {
                return function (t) {
                  return _(e, t);
                };
              }
              function S() {
                return !1;
              }
              function x(e) {
                return function (t, r) {
                  return e(r, t);
                };
              }
              function I(e, t, r) {
                return t.ap(e.map(g(r, [])));
              }
              function A(e, t) {
                for (var r = e, n = t; !r.isNil && !n.isNil; ) {
                  if (!E(r.head())(n.head())) return !1;
                  (r = r.tail()), (n = n.tail());
                }
                return r.isNil && n.isNil;
              }
              function k(e, t) {
                return (function e(t, r) {
                  return r.isNil
                    ? ne(r)
                    : re(function () {
                        return e(t, r.tail());
                      }).map(g(P, [])(t(r.head())));
                })(e, t).run();
              }
              function z(e, t) {
                return e.foldRight(j)(function (e, r) {
                  return t(e) ? P(e, r) : r;
                });
              }
              function M(e, t) {
                return (function e(t, r) {
                  if (t.isNil) return ne(V());
                  var n = t.head();
                  return r(n)
                    ? ne(H(n))
                    : re(function () {
                        return e(t.tail(), r);
                      });
                })(e, t).run();
              }
              function T(e, t) {
                return (function e(t, r) {
                  return t.isNil
                    ? ne(!1)
                    : _(t.head(), r)
                    ? ne(!0)
                    : re(function () {
                        return e(t.tail(), r);
                      });
                })(e, t).run();
              }
              function P(e, t) {
                return t.cons(e);
              }
              function O() {
                switch (arguments.length) {
                  case 0:
                    return new O.fn.init();
                  case 1:
                    return new O.fn.init(arguments[0]);
                  default:
                    return new O.fn.init(arguments[0], arguments[1]);
                }
              }
              e.List = O;
              var j,
                N = function (e, t) {
                  t.isNil || (e(t.head()), N(e, t.tail()));
                },
                L = function (e, t, r) {
                  return (function t(r, n) {
                    return n.isNil
                      ? ne(r)
                      : re(function () {
                          return t(e(r, n.head()), n.tail());
                        });
                  })(t, r).run();
                },
                q = function (e, t, r) {
                  return (function t(r, n) {
                    return r.isNil
                      ? ne(n)
                      : re(function () {
                          return t(r.tail(), n);
                        }).map(function (t) {
                          return e(r.head(), t);
                        });
                  })(t, r).run();
                },
                R = function (e, t) {
                  return (function e(t, r) {
                    return t.isNil
                      ? ne(r)
                      : re(function () {
                          return e(t.tail(), r).map(function (e) {
                            return e.cons(t.head());
                          });
                        });
                  })(e, t).run();
                },
                B = function (e, t) {
                  return e.foldRight(t.of(j))(t.map2(P));
                },
                C = function (e) {
                  return e.foldLeft(j)(x(P));
                };
              function U(e) {
                return new Error(
                  'Cannot create an empty Non-Empty List. Passed head is ' +
                    e +
                    '.'
                );
              }
              function D(e, t) {
                if (h(e)) throw U(e);
                return new D.fn.init(e, t);
              }
              (O.fn = O.prototype = {
                init: function () {
                  var e = arguments[0],
                    t = arguments[1];
                  0 === arguments.length
                    ? ((this.isNil = !0), (this.size_ = 0))
                    : ((this.isNil = !1),
                      (this.head_ = e),
                      (this.tail_ = t || j),
                      (this.size_ = this.tail_.size() + 1)),
                    l(this, o);
                },
                of: function (e) {
                  return new O(e);
                },
                size: function () {
                  return this.size_;
                },
                equals: function (e) {
                  return (O.isOfType(e) || D.isOfType(e)) && A(this, e);
                },
                cons: function (e) {
                  return O(e, this);
                },
                snoc: function (e) {
                  return this.concat(O(e));
                },
                map: function (e) {
                  return k(e, this);
                },
                toArray: function () {
                  return L(
                    function (e, t) {
                      return e.push(t), e;
                    },
                    [],
                    this
                  );
                },
                toSet: function () {
                  return new Set(this);
                },
                foldLeft: function (e) {
                  var t = this;
                  return function (r) {
                    return L(r, e, t);
                  };
                },
                foldRight: function (e) {
                  var t = this;
                  return function (r) {
                    return q(r, t, e);
                  };
                },
                append: function (e) {
                  return R(this, e);
                },
                filter: function (e) {
                  return z(this, e);
                },
                find: function (e) {
                  return M(this, e);
                },
                flatten: function () {
                  return q(R, this, j);
                },
                flattenMaybe: function () {
                  return this.flatMap(K.toList);
                },
                reverse: function () {
                  return C(this);
                },
                bind: function (e) {
                  return this.map(e).flatten();
                },
                forEach: function (e) {
                  N(e, this);
                },
                contains: function (e) {
                  return T(this, e);
                },
                sequenceMaybe: function () {
                  return B(this, K);
                },
                sequenceValidation: function () {
                  return this.foldLeft(W(j))(function (e, t) {
                    return e.ap(
                      t.map(function (e) {
                        return function (t) {
                          return P(e, t);
                        };
                      })
                    );
                  }).map(C);
                },
                sequenceEither: function () {
                  return B(this, Z);
                },
                sequenceIO: function () {
                  return B(this, $);
                },
                sequenceReader: function () {
                  return B(this, ee);
                },
                sequence: function (e) {
                  return B(this, e);
                },
                head: function () {
                  return this.head_;
                },
                headMaybe: function () {
                  return this.isNil ? V() : H(this.head_);
                },
                tail: function () {
                  return this.isNil ? j : this.tail_;
                },
                tails: function () {
                  return this.isNil ? O(j, j) : this.tail().tails().cons(this);
                },
                ap: function (e) {
                  return (
                    (t = e),
                    this.bind(function (e) {
                      return t.map(function (t) {
                        return t(e);
                      });
                    })
                  );
                  var t;
                },
                isNEL: S,
                toString: function () {
                  return this.isNil
                    ? 'Nil'
                    : 'List(' + this.toArray().join(', ') + ')';
                },
                inspect: function () {
                  return this.toString();
                },
              }),
                (O.fn.init.prototype = O.fn),
                l(O, o),
                l(O.fn.init, o),
                (O.isInstance = d(o)),
                (O.isOfType = p(o)),
                (O.prototype.empty = function () {
                  return j;
                }),
                (O.fromArray = function (e) {
                  return e.reduceRight(function (e, t) {
                    return e.cons(t);
                  }, j);
                }),
                (O.from = function (e) {
                  return O.fromArray(Array.from(e));
                }),
                (O.of = function (e) {
                  return new O(e, j);
                }),
                (O.prototype.each = O.prototype.forEach),
                (j = e.Nil = new O.fn.init()),
                (e.NEL = e.NonEmptyList = D),
                (D.of = function (e) {
                  return D(e, j);
                }),
                (D.fn = D.prototype = {
                  init: function (e, t) {
                    if (h(e)) throw U(e);
                    (this.isNil = !1),
                      (this.head_ = e),
                      (this.tail_ = h(t) ? j : t),
                      (this.size_ = this.tail_.size() + 1),
                      l(this, a);
                  },
                  equals: function (e) {
                    return O.isOfType(e) || (D.isOfType(e) && A(this, e));
                  },
                  cons: function (e) {
                    return D(e, this.toList());
                  },
                  snoc: function (e) {
                    return this.concat(D(e));
                  },
                  map: function (e) {
                    return D(e(this.head_), k(e, this.tail_));
                  },
                  bind: function (e) {
                    var t = e(this.head_);
                    if (!t.isNEL())
                      throw new Error(
                        'NEL.fn.bind: Passed function must return a NonEmptyList.'
                      );
                    var r = this.tail().foldLeft(
                      j.snoc(t.head()).append(t.tail())
                    )(function (t, r) {
                      var n = e(r).toList();
                      return t.snoc(n.head()).append(n.tail());
                    });
                    return new D(r.head(), r.tail());
                  },
                  head: function () {
                    return this.head_;
                  },
                  tail: function () {
                    return this.tail_;
                  },
                  tails: function () {
                    var e = this.toList()
                      .tails()
                      .map(D.fromList)
                      .flattenMaybe();
                    return D(e.head(), e.tail());
                  },
                  toList: function () {
                    return O(this.head_, this.tail_);
                  },
                  reverse: function () {
                    if (this.tail().isNil) return this;
                    var e = this.tail().reverse();
                    return D(e.head(), e.tail().append(O(this.head())));
                  },
                  foldLeft: function (e) {
                    return this.toList().foldLeft(e);
                  },
                  foldRight: function (e) {
                    return this.toList().foldRight(e);
                  },
                  reduceLeft: function (e) {
                    return this.tail().foldLeft(this.head())(e);
                  },
                  filter: function (e) {
                    return z(this.toList(), e);
                  },
                  find: function (e) {
                    return M(this.toList(), e);
                  },
                  flatten: function () {
                    return q(
                      R,
                      this.toList().map(function (e) {
                        return e.isNEL() ? e.toList() : e;
                      }),
                      j
                    );
                  },
                  flattenMaybe: function () {
                    return this.toList().flatMap(K.toList);
                  },
                  contains: function (e) {
                    return T(this.toList(), e);
                  },
                  append: function (e) {
                    return D.fromList(this.toList().append(e.toList())).some();
                  },
                  cobind: function (e) {
                    return this.cojoin().map(e);
                  },
                  size: function () {
                    return this.size_;
                  },
                  forEach: function (e) {
                    return this.toList().forEach(e);
                  },
                  isNEL: function () {
                    return !0;
                  },
                  toString: function () {
                    return 'NEL(' + this.toArray().join(', ') + ')';
                  },
                  inspect: function () {
                    return this.toString();
                  },
                }),
                (D.fromList = function (e) {
                  return e.isNil ? V() : H(D(e.head(), e.tail()));
                }),
                (D.fromArray = function (e) {
                  return D.fromList(O.fromArray(e));
                }),
                (D.from = function (e) {
                  return D.fromList(O.from(e));
                }),
                (D.fn.init.prototype = D.fn),
                l(D, a),
                l(D.fn.init, a),
                (D.isInstance = d(a)),
                (D.isOfType = p(a)),
                (D.prototype.toArray = O.prototype.toArray),
                (D.prototype.toSet = O.prototype.toSet),
                (D.prototype.extract = D.prototype.copure = D.prototype.head),
                (D.prototype.cojoin = D.prototype.tails),
                (D.prototype.coflatMap = D.prototype.mapTails =
                  D.prototype.cobind),
                (D.prototype.ap = O.prototype.ap);
              var K = (e.Maybe = {});
              (K.fromFalsy = function (e) {
                return e ? K.Some(e) : K.None();
              }),
                (K.fromNull = function (e) {
                  return h(e) ? K.None() : K.Some(e);
                }),
                (K.fromUndefined = function (e) {
                  return void 0 === e ? K.None() : K.Some(e);
                }),
                (K.fromEmpty = function (e) {
                  return h((t = e)) ||
                    '' === t ||
                    (Array.isArray(t) && 0 === t.length) ||
                    ('object' == typeof t && 0 === Object.keys(t).length)
                    ? K.None()
                    : K.Some(e);
                  var t;
                }),
                (K.of = function (e) {
                  return H(e);
                });
              var H = (K.Just = K.Some = K.some = e.Some = e.Just = function (
                  e
                ) {
                  return new K.fn.init(!0, e);
                }),
                V = (K.Nothing = K.None = K.none = e.None = e.Nothing = function () {
                  return new K.fn.init(!1, null);
                });
              (K.toList = function (e) {
                return e.toList();
              }),
                (K.fn = K.prototype = {
                  init: function (e, t) {
                    if (((this.isValue = e), e && h(t)))
                      throw new Error(
                        'Can not create Some with illegal value: ' + t + '.'
                      );
                    (this.val = t), l(this, r);
                  },
                  isSome: function () {
                    return this.isValue;
                  },
                  isNone: function () {
                    return !this.isSome();
                  },
                  bind: function (e) {
                    return this.isValue ? e(this.val) : this;
                  },
                  some: function () {
                    if (this.isValue) return this.val;
                    throw new Error('Cannot call .some() on a None.');
                  },
                  orSome: function (e) {
                    return this.isValue ? this.val : e;
                  },
                  orLazy: function (e) {
                    return this.cata(e, w);
                  },
                  orNull: function () {
                    return this.orSome(null);
                  },
                  orUndefined: function () {
                    return this.orSome(void 0);
                  },
                  orElse: function (e) {
                    return this.catchMap(function () {
                      return e;
                    });
                  },
                  ap: function (e) {
                    var t = this.val;
                    return this.isValue
                      ? e.map(function (e) {
                          return e(t);
                        })
                      : this;
                  },
                  equals: function (e) {
                    return (
                      K.isOfType(e) &&
                      this.cata(
                        function () {
                          return e.isNone();
                        },
                        function (t) {
                          return e.fold(!1)(E(t));
                        }
                      )
                    );
                  },
                  toArray: function () {
                    return this.map(function (e) {
                      return [e];
                    }).orLazy(function () {
                      return [];
                    });
                  },
                  toSet: function () {
                    return new Set(this);
                  },
                  toList: function () {
                    return this.map(O).orLazy(function () {
                      return j;
                    });
                  },
                  toEither: function (e) {
                    return this.isSome() ? Q(this.val) : X(e);
                  },
                  toValidation: function (e) {
                    return this.isSome() ? W(this.val) : Y(e);
                  },
                  fold: function (e) {
                    var t = this;
                    return function (r) {
                      return t.isSome() ? r(t.val) : e;
                    };
                  },
                  foldLeft: function (e) {
                    return this.toList().foldLeft(e);
                  },
                  foldRight: function (e) {
                    return this.toList().foldRight(e);
                  },
                  cata: function (e, t) {
                    return this.isSome() ? t(this.val) : e();
                  },
                  catchMap: function (e) {
                    return this.isSome() ? this : e();
                  },
                  filter: function (e) {
                    var t = this;
                    return t.flatMap(function (r) {
                      return e(r) ? t : V();
                    });
                  },
                  orNoneIf: function (e) {
                    return e ? V() : this;
                  },
                  contains: function (e) {
                    return !!this.isSome() && _(this.val, e);
                  },
                  forEach: function (e) {
                    this.cata(m, e);
                  },
                  orElseRun: function (e) {
                    this.cata(e, m);
                  },
                  toString: function () {
                    return this.isSome() ? 'Just(' + this.val + ')' : 'Nothing';
                  },
                  inspect: function () {
                    return this.toString();
                  },
                }),
                (K.prototype.orJust = K.prototype.getOrElse =
                  K.prototype.orSome),
                (K.prototype.just = K.prototype.some),
                (K.prototype.isJust = K.prototype.isSome),
                (K.prototype.isNothing = K.prototype.isNone),
                (K.prototype.orNothingIf = K.prototype.orNoneIf),
                (K.fn.init.prototype = K.fn),
                l(K, r),
                l(K.fn.init, r),
                (K.isInstance = d(r)),
                (K.isOfType = p(r));
              var F = (e.Validation = {}),
                W = (F.Success = F.success = e.Success = function (e) {
                  return new F.fn.init(e, !0);
                }),
                Y = (F.Fail = F.fail = e.Fail = function (e) {
                  return new F.fn.init(e, !1);
                });
              (F.of = function (e) {
                return W(e);
              }),
                (F.fn = F.prototype = {
                  init: function (e, t) {
                    (this.val = e), (this.isSuccessValue = t), l(this, i);
                  },
                  success: function () {
                    if (this.isSuccess()) return this.val;
                    throw new Error('Cannot call success() on a Fail.');
                  },
                  isSuccess: function () {
                    return this.isSuccessValue;
                  },
                  isFail: function () {
                    return !this.isSuccessValue;
                  },
                  fail: function () {
                    if (this.isSuccess())
                      throw new Error('Cannot call fail() on a Success.');
                    return this.val;
                  },
                  bind: function (e) {
                    return this.isSuccess() ? e(this.val) : this;
                  },
                  ap: function (e) {
                    var t = this.val;
                    return this.isSuccess()
                      ? e.map(function (e) {
                          return e(t);
                        })
                      : e.isFail()
                      ? F.Fail(G.append(t, e.fail()))
                      : this;
                  },
                  acc: function () {
                    var e = function () {
                      return e;
                    };
                    return this.isSuccessValue ? F.success(e) : this;
                  },
                  foldLeft: function (e) {
                    return this.toMaybe().toList().foldLeft(e);
                  },
                  foldRight: function (e) {
                    return this.toMaybe().toList().foldRight(e);
                  },
                  cata: function (e, t) {
                    return this.isSuccessValue ? t(this.val) : e(this.val);
                  },
                  catchMap: function (e) {
                    return this.isSuccess() ? this : e(this.val);
                  },
                  swap: function () {
                    return this.isSuccess() ? Y(this.val) : W(this.val);
                  },
                  failMap: function (e) {
                    return this.isFail() ? Y(e(this.val)) : this;
                  },
                  bimap: function (e, t) {
                    return this.isSuccessValue ? this.map(t) : this.failMap(e);
                  },
                  forEach: function (e) {
                    this.cata(m, e);
                  },
                  forEachFail: function (e) {
                    this.cata(e, m);
                  },
                  equals: function (e) {
                    return (
                      F.isOfType(e) &&
                      this.cata(
                        function (t) {
                          return e.cata(E(t), S);
                        },
                        function (t) {
                          return e.cata(S, E(t));
                        }
                      )
                    );
                  },
                  toMaybe: function () {
                    return this.isSuccess() ? H(this.val) : V();
                  },
                  toEither: function () {
                    return (this.isSuccess() ? Q : X)(this.val);
                  },
                  toString: function () {
                    return (
                      (this.isSuccess() ? 'Success(' : 'Fail(') + this.val + ')'
                    );
                  },
                  inspect: function () {
                    return this.toString();
                  },
                }),
                (F.prototype.fold = F.prototype.cata),
                (F.fn.init.prototype = F.fn),
                l(F, i),
                l(F.fn.init, i),
                (F.isInstance = d(i)),
                (F.isOfType = p(i));
              var G = (e.Semigroup = {
                  append: function (e, t) {
                    if (y(e.concat)) return e.concat(t);
                    throw new Error(
                      "Couldn't find a semigroup appender in the environment, please specify your own append function"
                    );
                  },
                }),
                J = (e.monadTransformer = e.MonadT = e.monadT = function (e) {
                  return new J.fn.init(e);
                });
              (J.of = function (e) {
                return J(e);
              }),
                (J.fn = J.prototype = {
                  init: function (e) {
                    (this.monad = e), l(F, u);
                  },
                  map: function (e) {
                    return J(
                      this.monad.map(function (t) {
                        return t.map(e);
                      })
                    );
                  },
                  bind: function (e) {
                    return J(
                      this.monad.map(function (t) {
                        return t.flatMap(e);
                      })
                    );
                  },
                  ap: function (e) {
                    return J(
                      this.monad.flatMap(function (t) {
                        return e.perform().map(function (e) {
                          return t.ap(e);
                        });
                      })
                    );
                  },
                  perform: function () {
                    return this.monad;
                  },
                }),
                (J.fn.init.prototype = J.fn);
              var $ = (e.IO = e.io = function (e) {
                return new $.fn.init(e);
              });
              ($.of = function (e) {
                return $(function () {
                  return e;
                });
              }),
                ($.fn = $.prototype = {
                  init: function (e) {
                    if (!y(e)) throw new Error('IO requires a function.');
                    (this.effectFn = e), l(this, s);
                  },
                  map: function (e) {
                    var t = this;
                    return $(function () {
                      return e(t.effectFn());
                    });
                  },
                  bind: function (e) {
                    var t = this;
                    return $(function () {
                      return e(t.effectFn()).run();
                    });
                  },
                  ap: function (e) {
                    var t = this;
                    return e.map(function (e) {
                      return e(t.effectFn());
                    });
                  },
                  run: function () {
                    return this.effectFn();
                  },
                }),
                ($.fn.init.prototype = $.fn),
                l($, s),
                l($.fn.init, s),
                ($.isInstance = d(s)),
                ($.isOfType = p(s)),
                ($.prototype.perform = $.prototype.performUnsafeIO =
                  $.prototype.run);
              var Z = (e.Either = {});
              (Z.of = function (e) {
                return Q(e);
              }),
                (Z.fromTry = function (e) {
                  try {
                    return Z.right(e());
                  } catch (e) {
                    return Z.left(e);
                  }
                }),
                (Z.fromPromise = function (e) {
                  return e.then(Z.Right, Z.Left);
                });
              var Q = (Z.Right = Z.right = e.Right = function (e) {
                  return new Z.fn.init(e, !0);
                }),
                X = (Z.Left = Z.left = e.Left = function (e) {
                  return new Z.fn.init(e, !1);
                });
              (Z.fn = Z.prototype = {
                init: function (e, t) {
                  (this.isRightValue = t), (this.value = e), l(this, n);
                },
                bind: function (e) {
                  return this.isRightValue ? e(this.value) : this;
                },
                ap: function (e) {
                  var t = this;
                  return this.isRightValue
                    ? e.map(function (e) {
                        return e(t.value);
                      })
                    : this;
                },
                leftMap: function (e) {
                  return this.isLeft() ? X(e(this.value)) : this;
                },
                isRight: function () {
                  return this.isRightValue;
                },
                isLeft: function () {
                  return !this.isRight();
                },
                right: function () {
                  if (this.isRightValue) return this.value;
                  throw new Error('Cannot call right() on a Left.');
                },
                left: function () {
                  if (this.isRightValue)
                    throw new Error('Cannot call left() on a Right.');
                  return this.value;
                },
                foldLeft: function (e) {
                  return this.toMaybe().toList().foldLeft(e);
                },
                foldRight: function (e) {
                  return this.toMaybe().toList().foldRight(e);
                },
                cata: function (e, t) {
                  return this.isRightValue ? t(this.value) : e(this.value);
                },
                catchMap: function (e) {
                  return this.isRight() ? this : e(this.value);
                },
                swap: function () {
                  return this.isRight() ? X(this.value) : Q(this.value);
                },
                forEach: function (e) {
                  this.cata(m, e);
                },
                forEachLeft: function (e) {
                  this.cata(e, m);
                },
                equals: function (e) {
                  return (
                    Z.isOfType(e) &&
                    this.cata(
                      function (t) {
                        return e.cata(E(t), S);
                      },
                      function (t) {
                        return e.cata(S, E(t));
                      }
                    )
                  );
                },
                bimap: function (e, t) {
                  return this.isRightValue ? this.map(t) : this.leftMap(e);
                },
                toMaybe: function () {
                  return this.isRight() ? H(this.value) : V();
                },
                toValidation: function () {
                  return this.isRight() ? W(this.value) : Y(this.value);
                },
                toString: function () {
                  return this.cata(
                    function (e) {
                      return 'Left(' + e + ')';
                    },
                    function (e) {
                      return 'Right(' + e + ')';
                    }
                  );
                },
                toPromise: function () {
                  return this.cata(
                    function (e) {
                      return Promise.reject(e);
                    },
                    function (e) {
                      return Promise.resolve(e);
                    }
                  );
                },
                inspect: function () {
                  return this.toString();
                },
              }),
                (Z.prototype.fold = Z.prototype.cata),
                (Z.fn.init.prototype = Z.fn),
                l(Z, n),
                l(Z.fn.init, n),
                (Z.isInstance = d(n)),
                (Z.isOfType = p(n));
              var ee = (e.Reader = function (e) {
                return new ee.fn.init(e);
              });
              (ee.of = function (e) {
                return ee(function (t) {
                  return e;
                });
              }),
                (ee.ask = function () {
                  return ee(w);
                }),
                (ee.fn = ee.prototype = {
                  init: function (e) {
                    (this.f = e), l(this, c);
                  },
                  run: function (e) {
                    return this.f(e);
                  },
                  bind: function (e) {
                    var t = this;
                    return ee(function (r) {
                      return e(t.run(r)).run(r);
                    });
                  },
                  ap: function (e) {
                    var t = this;
                    return e.bind(function (e) {
                      return ee(function (r) {
                        return e(t.run(r));
                      });
                    });
                  },
                  map: function (e) {
                    var t = this;
                    return ee(function (r) {
                      return e(t.run(r));
                    });
                  },
                  local: function (e) {
                    var t = this;
                    return ee(function (r) {
                      return t.run(e(r));
                    });
                  },
                }),
                (ee.fn.init.prototype = ee.fn),
                l(ee, c),
                l(ee.fn.init, c),
                (ee.isInstance = d(c)),
                (ee.isOfType = p(c));
              var te = (e.Free = {}),
                re = (te.Suspend = e.Suspend = function (e) {
                  return new te.fn.init(e, !0);
                }),
                ne = (te.Return = e.Return = function (e) {
                  return new te.fn.init(e, !1);
                });
              function ie(e) {
                return new ie.fn.init(e);
              }
              function oe(e) {
                !(function (e) {
                  (e.prototype.flatMap = e.prototype.chain = e.prototype.bind),
                    (e.pure = e.unit = e.of),
                    (e.prototype.of = e.of),
                    y(e.prototype.append) &&
                      (e.prototype.concat = e.prototype.append),
                    (e.prototype.point = e.prototype.pure = e.prototype.unit =
                      e.prototype.of);
                })(e),
                  (function (e) {
                    y(e.prototype.filter) &&
                      (e.prototype.filterNot = function (e) {
                        return this.filter(function (t) {
                          return !e(t);
                        });
                      });
                  })(e),
                  (function (e) {
                    (e.prototype.join = function () {
                      return this.flatMap(w);
                    }),
                      (e.map2 = function (e) {
                        return function (t, r) {
                          return t.flatMap(function (t) {
                            return r.map(function (r) {
                              return e(t, r);
                            });
                          });
                        };
                      });
                  })(e),
                  (function (e) {
                    y(e.prototype.map) ||
                      (e.prototype.map = function (e) {
                        return this.bind(v(this.of, e));
                      });
                  })(e),
                  (function (e) {
                    (e.prototype.takeLeft = function (e) {
                      return I(this, e, function (e, t) {
                        return e;
                      });
                    }),
                      (e.prototype.takeRight = function (e) {
                        return I(this, e, function (e, t) {
                          return t;
                        });
                      });
                  })(e),
                  (function (e) {
                    y(e.prototype.toArray) &&
                      ((e.prototype.every = e.prototype.forall = function (e) {
                        return this.toArray().every(e);
                      }),
                      (e.prototype.exists = function (e) {
                        return this.toArray().some(e);
                      }));
                  })(e),
                  (function (e) {
                    ['equals', 'map', 'ap', 'chain']
                      .filter(function (t) {
                        return y(e.prototype[t]);
                      })
                      .forEach(function (t) {
                        e.prototype['fantasy-land/' + t] = e.prototype[t];
                      });
                  })(e),
                  (function (e) {
                    y(e.prototype.toArray) &&
                      (e.prototype[Symbol.iterator] = function () {
                        return this.toArray()[Symbol.iterator]();
                      });
                  })(e),
                  (function (e) {
                    y(e.prototype.toArray) &&
                      (e.prototype.to = function (e) {
                        return e(this);
                      });
                  })(e);
              }
              return (
                (te.of = function (e) {
                  return ne(e);
                }),
                (te.liftF = function (e) {
                  return y(e) ? re(v(ne, e)) : re(e.map(ne));
                }),
                (te.fn = te.prototype = {
                  init: function (e, t) {
                    (this.isSuspend = t),
                      t ? (this.functor = e) : (this.val = e),
                      l(this, f);
                  },
                  run: function () {
                    return this.go(function (e) {
                      return e();
                    });
                  },
                  bind: function (e) {
                    return this.isSuspend
                      ? y(this.functor)
                        ? re(
                            v(function (t) {
                              return t.bind(e);
                            }, this.functor)
                          )
                        : re(
                            this.functor.map(function (t) {
                              return t.bind(e);
                            })
                          )
                      : e(this.val);
                  },
                  ap: function (e) {
                    return this.bind(function (t) {
                      return e.map(function (e) {
                        return e(t);
                      });
                    });
                  },
                  resume: function () {
                    return this.isSuspend ? X(this.functor) : Q(this.val);
                  },
                  go1: function (e) {
                    return (function t(r) {
                      return r.resume().cata(function (r) {
                        return t(e(r));
                      }, w);
                    })(this);
                  },
                  go: function (e) {
                    for (var t = this.resume(); t.isLeft(); ) {
                      var r = e(t.left());
                      t = r.resume();
                    }
                    return t.right();
                  },
                }),
                (te.fn.init.prototype = te.fn),
                l(te, f),
                l(te.fn.init, f),
                (te.isInstance = d(f)),
                (te.isOfType = p(f)),
                (e.Identity = ie),
                (ie.of = function (e) {
                  return new ie(e);
                }),
                (ie.fn = ie.prototype = {
                  init: function (e) {
                    (this.val = e), l(this, t);
                  },
                  bind: function (e) {
                    return e(this.val);
                  },
                  get: function () {
                    return this.val;
                  },
                  forEach: function (e) {
                    e(this.val);
                  },
                  equals: function (e) {
                    return ie.isOfType(e) && E(this.get())(e.get());
                  },
                  contains: function (e) {
                    return _(this.val, e);
                  },
                  toString: function () {
                    return 'Identity(' + this.val + ')';
                  },
                  inspect: function () {
                    return this.toString();
                  },
                  ap: function (e) {
                    var t = this.val;
                    return e.map(function (e) {
                      return e(t);
                    });
                  },
                  toArray: function () {
                    return [this.get()];
                  },
                  toList: function () {
                    return O(this.get(), j);
                  },
                  toSet: function () {
                    return new Set(this);
                  },
                }),
                (ie.fn.init.prototype = ie.fn),
                l(ie, t),
                l(ie.fn.init, t),
                (ie.isInstance = d(t)),
                (ie.isOfType = p(t)),
                oe(J),
                oe(Z),
                oe(K),
                oe($),
                oe(D),
                oe(O),
                oe(F),
                oe(ee),
                oe(te),
                oe(ie),
                e
              );
            })
              ? n.call(t, r, t, e)
              : n) || (e.exports = i);
    },
    function (e, t, r) {
      (function (e) {
        var n;
        /**
         * @license
         * Lodash <https://lodash.com/>
         * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
         * Released under MIT license <https://lodash.com/license>
         * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
         * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
         */ (function () {
          var i = 'Expected a function',
            o = '__lodash_placeholder__',
            a = [
              ['ary', 128],
              ['bind', 1],
              ['bindKey', 2],
              ['curry', 8],
              ['curryRight', 16],
              ['flip', 512],
              ['partial', 32],
              ['partialRight', 64],
              ['rearg', 256],
            ],
            s = '[object Arguments]',
            u = '[object Array]',
            c = '[object Boolean]',
            f = '[object Date]',
            l = '[object Error]',
            d = '[object Function]',
            p = '[object GeneratorFunction]',
            h = '[object Map]',
            m = '[object Number]',
            b = '[object Object]',
            g = '[object RegExp]',
            v = '[object Set]',
            y = '[object String]',
            w = '[object Symbol]',
            _ = '[object WeakMap]',
            E = '[object ArrayBuffer]',
            S = '[object DataView]',
            x = '[object Float32Array]',
            I = '[object Float64Array]',
            A = '[object Int8Array]',
            k = '[object Int16Array]',
            z = '[object Int32Array]',
            M = '[object Uint8Array]',
            T = '[object Uint16Array]',
            P = '[object Uint32Array]',
            O = /\b__p \+= '';/g,
            j = /\b(__p \+=) '' \+/g,
            N = /(__e\(.*?\)|\b__t\)) \+\n'';/g,
            L = /&(?:amp|lt|gt|quot|#39);/g,
            q = /[&<>"']/g,
            R = RegExp(L.source),
            B = RegExp(q.source),
            C = /<%-([\s\S]+?)%>/g,
            U = /<%([\s\S]+?)%>/g,
            D = /<%=([\s\S]+?)%>/g,
            K = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
            H = /^\w*$/,
            V = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
            F = /[\\^$.*+?()[\]{}|]/g,
            W = RegExp(F.source),
            Y = /^\s+|\s+$/g,
            G = /^\s+/,
            J = /\s+$/,
            $ = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
            Z = /\{\n\/\* \[wrapped with (.+)\] \*/,
            Q = /,? & /,
            X = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,
            ee = /\\(\\)?/g,
            te = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
            re = /\w*$/,
            ne = /^[-+]0x[0-9a-f]+$/i,
            ie = /^0b[01]+$/i,
            oe = /^\[object .+?Constructor\]$/,
            ae = /^0o[0-7]+$/i,
            se = /^(?:0|[1-9]\d*)$/,
            ue = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
            ce = /($^)/,
            fe = /['\n\r\u2028\u2029\\]/g,
            le = '\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff',
            de =
              '\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
            pe = '[\\ud800-\\udfff]',
            he = '[' + de + ']',
            me = '[' + le + ']',
            be = '\\d+',
            ge = '[\\u2700-\\u27bf]',
            ve = '[a-z\\xdf-\\xf6\\xf8-\\xff]',
            ye =
              '[^\\ud800-\\udfff' +
              de +
              be +
              '\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]',
            we = '\\ud83c[\\udffb-\\udfff]',
            _e = '[^\\ud800-\\udfff]',
            Ee = '(?:\\ud83c[\\udde6-\\uddff]){2}',
            Se = '[\\ud800-\\udbff][\\udc00-\\udfff]',
            xe = '[A-Z\\xc0-\\xd6\\xd8-\\xde]',
            Ie = '(?:' + ve + '|' + ye + ')',
            Ae = '(?:' + xe + '|' + ye + ')',
            ke = '(?:' + me + '|' + we + ')' + '?',
            ze =
              '[\\ufe0e\\ufe0f]?' +
              ke +
              ('(?:\\u200d(?:' +
                [_e, Ee, Se].join('|') +
                ')[\\ufe0e\\ufe0f]?' +
                ke +
                ')*'),
            Me = '(?:' + [ge, Ee, Se].join('|') + ')' + ze,
            Te = '(?:' + [_e + me + '?', me, Ee, Se, pe].join('|') + ')',
            Pe = RegExp("['’]", 'g'),
            Oe = RegExp(me, 'g'),
            je = RegExp(we + '(?=' + we + ')|' + Te + ze, 'g'),
            Ne = RegExp(
              [
                xe +
                  '?' +
                  ve +
                  "+(?:['’](?:d|ll|m|re|s|t|ve))?(?=" +
                  [he, xe, '$'].join('|') +
                  ')',
                Ae +
                  "+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=" +
                  [he, xe + Ie, '$'].join('|') +
                  ')',
                xe + '?' + Ie + "+(?:['’](?:d|ll|m|re|s|t|ve))?",
                xe + "+(?:['’](?:D|LL|M|RE|S|T|VE))?",
                '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
                '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
                be,
                Me,
              ].join('|'),
              'g'
            ),
            Le = RegExp('[\\u200d\\ud800-\\udfff' + le + '\\ufe0e\\ufe0f]'),
            qe = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
            Re = [
              'Array',
              'Buffer',
              'DataView',
              'Date',
              'Error',
              'Float32Array',
              'Float64Array',
              'Function',
              'Int8Array',
              'Int16Array',
              'Int32Array',
              'Map',
              'Math',
              'Object',
              'Promise',
              'RegExp',
              'Set',
              'String',
              'Symbol',
              'TypeError',
              'Uint8Array',
              'Uint8ClampedArray',
              'Uint16Array',
              'Uint32Array',
              'WeakMap',
              '_',
              'clearTimeout',
              'isFinite',
              'parseInt',
              'setTimeout',
            ],
            Be = -1,
            Ce = {};
          (Ce[x] = Ce[I] = Ce[A] = Ce[k] = Ce[z] = Ce[M] = Ce[
            '[object Uint8ClampedArray]'
          ] = Ce[T] = Ce[P] = !0),
            (Ce[s] = Ce[u] = Ce[E] = Ce[c] = Ce[S] = Ce[f] = Ce[l] = Ce[d] = Ce[
              h
            ] = Ce[m] = Ce[b] = Ce[g] = Ce[v] = Ce[y] = Ce[_] = !1);
          var Ue = {};
          (Ue[s] = Ue[u] = Ue[E] = Ue[S] = Ue[c] = Ue[f] = Ue[x] = Ue[I] = Ue[
            A
          ] = Ue[k] = Ue[z] = Ue[h] = Ue[m] = Ue[b] = Ue[g] = Ue[v] = Ue[
            y
          ] = Ue[w] = Ue[M] = Ue['[object Uint8ClampedArray]'] = Ue[T] = Ue[
            P
          ] = !0),
            (Ue[l] = Ue[d] = Ue[_] = !1);
          var De = {
              '\\': '\\',
              "'": "'",
              '\n': 'n',
              '\r': 'r',
              '\u2028': 'u2028',
              '\u2029': 'u2029',
            },
            Ke = parseFloat,
            He = parseInt,
            Ve =
              'object' == typeof global &&
              global &&
              global.Object === Object &&
              global,
            Fe =
              'object' == typeof self && self && self.Object === Object && self,
            We = Ve || Fe || Function('return this')(),
            Ye = t && !t.nodeType && t,
            Ge = Ye && 'object' == typeof e && e && !e.nodeType && e,
            Je = Ge && Ge.exports === Ye,
            $e = Je && Ve.process,
            Ze = (function () {
              try {
                var e = Ge && Ge.require && Ge.require('util').types;
                return e || ($e && $e.binding && $e.binding('util'));
              } catch (e) {}
            })(),
            Qe = Ze && Ze.isArrayBuffer,
            Xe = Ze && Ze.isDate,
            et = Ze && Ze.isMap,
            tt = Ze && Ze.isRegExp,
            rt = Ze && Ze.isSet,
            nt = Ze && Ze.isTypedArray;
          function it(e, t, r) {
            switch (r.length) {
              case 0:
                return e.call(t);
              case 1:
                return e.call(t, r[0]);
              case 2:
                return e.call(t, r[0], r[1]);
              case 3:
                return e.call(t, r[0], r[1], r[2]);
            }
            return e.apply(t, r);
          }
          function ot(e, t, r, n) {
            for (var i = -1, o = null == e ? 0 : e.length; ++i < o; ) {
              var a = e[i];
              t(n, a, r(a), e);
            }
            return n;
          }
          function at(e, t) {
            for (
              var r = -1, n = null == e ? 0 : e.length;
              ++r < n && !1 !== t(e[r], r, e);

            );
            return e;
          }
          function st(e, t) {
            for (
              var r = null == e ? 0 : e.length;
              r-- && !1 !== t(e[r], r, e);

            );
            return e;
          }
          function ut(e, t) {
            for (var r = -1, n = null == e ? 0 : e.length; ++r < n; )
              if (!t(e[r], r, e)) return !1;
            return !0;
          }
          function ct(e, t) {
            for (
              var r = -1, n = null == e ? 0 : e.length, i = 0, o = [];
              ++r < n;

            ) {
              var a = e[r];
              t(a, r, e) && (o[i++] = a);
            }
            return o;
          }
          function ft(e, t) {
            return !!(null == e ? 0 : e.length) && wt(e, t, 0) > -1;
          }
          function lt(e, t, r) {
            for (var n = -1, i = null == e ? 0 : e.length; ++n < i; )
              if (r(t, e[n])) return !0;
            return !1;
          }
          function dt(e, t) {
            for (
              var r = -1, n = null == e ? 0 : e.length, i = Array(n);
              ++r < n;

            )
              i[r] = t(e[r], r, e);
            return i;
          }
          function pt(e, t) {
            for (var r = -1, n = t.length, i = e.length; ++r < n; )
              e[i + r] = t[r];
            return e;
          }
          function ht(e, t, r, n) {
            var i = -1,
              o = null == e ? 0 : e.length;
            for (n && o && (r = e[++i]); ++i < o; ) r = t(r, e[i], i, e);
            return r;
          }
          function mt(e, t, r, n) {
            var i = null == e ? 0 : e.length;
            for (n && i && (r = e[--i]); i--; ) r = t(r, e[i], i, e);
            return r;
          }
          function bt(e, t) {
            for (var r = -1, n = null == e ? 0 : e.length; ++r < n; )
              if (t(e[r], r, e)) return !0;
            return !1;
          }
          var gt = xt('length');
          function vt(e, t, r) {
            var n;
            return (
              r(e, function (e, r, i) {
                if (t(e, r, i)) return (n = r), !1;
              }),
              n
            );
          }
          function yt(e, t, r, n) {
            for (var i = e.length, o = r + (n ? 1 : -1); n ? o-- : ++o < i; )
              if (t(e[o], o, e)) return o;
            return -1;
          }
          function wt(e, t, r) {
            return t == t
              ? (function (e, t, r) {
                  var n = r - 1,
                    i = e.length;
                  for (; ++n < i; ) if (e[n] === t) return n;
                  return -1;
                })(e, t, r)
              : yt(e, Et, r);
          }
          function _t(e, t, r, n) {
            for (var i = r - 1, o = e.length; ++i < o; )
              if (n(e[i], t)) return i;
            return -1;
          }
          function Et(e) {
            return e != e;
          }
          function St(e, t) {
            var r = null == e ? 0 : e.length;
            return r ? kt(e, t) / r : NaN;
          }
          function xt(e) {
            return function (t) {
              return null == t ? void 0 : t[e];
            };
          }
          function It(e) {
            return function (t) {
              return null == e ? void 0 : e[t];
            };
          }
          function At(e, t, r, n, i) {
            return (
              i(e, function (e, i, o) {
                r = n ? ((n = !1), e) : t(r, e, i, o);
              }),
              r
            );
          }
          function kt(e, t) {
            for (var r, n = -1, i = e.length; ++n < i; ) {
              var o = t(e[n]);
              void 0 !== o && (r = void 0 === r ? o : r + o);
            }
            return r;
          }
          function zt(e, t) {
            for (var r = -1, n = Array(e); ++r < e; ) n[r] = t(r);
            return n;
          }
          function Mt(e) {
            return function (t) {
              return e(t);
            };
          }
          function Tt(e, t) {
            return dt(t, function (t) {
              return e[t];
            });
          }
          function Pt(e, t) {
            return e.has(t);
          }
          function Ot(e, t) {
            for (var r = -1, n = e.length; ++r < n && wt(t, e[r], 0) > -1; );
            return r;
          }
          function jt(e, t) {
            for (var r = e.length; r-- && wt(t, e[r], 0) > -1; );
            return r;
          }
          function Nt(e, t) {
            for (var r = e.length, n = 0; r--; ) e[r] === t && ++n;
            return n;
          }
          var Lt = It({
              À: 'A',
              Á: 'A',
              Â: 'A',
              Ã: 'A',
              Ä: 'A',
              Å: 'A',
              à: 'a',
              á: 'a',
              â: 'a',
              ã: 'a',
              ä: 'a',
              å: 'a',
              Ç: 'C',
              ç: 'c',
              Ð: 'D',
              ð: 'd',
              È: 'E',
              É: 'E',
              Ê: 'E',
              Ë: 'E',
              è: 'e',
              é: 'e',
              ê: 'e',
              ë: 'e',
              Ì: 'I',
              Í: 'I',
              Î: 'I',
              Ï: 'I',
              ì: 'i',
              í: 'i',
              î: 'i',
              ï: 'i',
              Ñ: 'N',
              ñ: 'n',
              Ò: 'O',
              Ó: 'O',
              Ô: 'O',
              Õ: 'O',
              Ö: 'O',
              Ø: 'O',
              ò: 'o',
              ó: 'o',
              ô: 'o',
              õ: 'o',
              ö: 'o',
              ø: 'o',
              Ù: 'U',
              Ú: 'U',
              Û: 'U',
              Ü: 'U',
              ù: 'u',
              ú: 'u',
              û: 'u',
              ü: 'u',
              Ý: 'Y',
              ý: 'y',
              ÿ: 'y',
              Æ: 'Ae',
              æ: 'ae',
              Þ: 'Th',
              þ: 'th',
              ß: 'ss',
              Ā: 'A',
              Ă: 'A',
              Ą: 'A',
              ā: 'a',
              ă: 'a',
              ą: 'a',
              Ć: 'C',
              Ĉ: 'C',
              Ċ: 'C',
              Č: 'C',
              ć: 'c',
              ĉ: 'c',
              ċ: 'c',
              č: 'c',
              Ď: 'D',
              Đ: 'D',
              ď: 'd',
              đ: 'd',
              Ē: 'E',
              Ĕ: 'E',
              Ė: 'E',
              Ę: 'E',
              Ě: 'E',
              ē: 'e',
              ĕ: 'e',
              ė: 'e',
              ę: 'e',
              ě: 'e',
              Ĝ: 'G',
              Ğ: 'G',
              Ġ: 'G',
              Ģ: 'G',
              ĝ: 'g',
              ğ: 'g',
              ġ: 'g',
              ģ: 'g',
              Ĥ: 'H',
              Ħ: 'H',
              ĥ: 'h',
              ħ: 'h',
              Ĩ: 'I',
              Ī: 'I',
              Ĭ: 'I',
              Į: 'I',
              İ: 'I',
              ĩ: 'i',
              ī: 'i',
              ĭ: 'i',
              į: 'i',
              ı: 'i',
              Ĵ: 'J',
              ĵ: 'j',
              Ķ: 'K',
              ķ: 'k',
              ĸ: 'k',
              Ĺ: 'L',
              Ļ: 'L',
              Ľ: 'L',
              Ŀ: 'L',
              Ł: 'L',
              ĺ: 'l',
              ļ: 'l',
              ľ: 'l',
              ŀ: 'l',
              ł: 'l',
              Ń: 'N',
              Ņ: 'N',
              Ň: 'N',
              Ŋ: 'N',
              ń: 'n',
              ņ: 'n',
              ň: 'n',
              ŋ: 'n',
              Ō: 'O',
              Ŏ: 'O',
              Ő: 'O',
              ō: 'o',
              ŏ: 'o',
              ő: 'o',
              Ŕ: 'R',
              Ŗ: 'R',
              Ř: 'R',
              ŕ: 'r',
              ŗ: 'r',
              ř: 'r',
              Ś: 'S',
              Ŝ: 'S',
              Ş: 'S',
              Š: 'S',
              ś: 's',
              ŝ: 's',
              ş: 's',
              š: 's',
              Ţ: 'T',
              Ť: 'T',
              Ŧ: 'T',
              ţ: 't',
              ť: 't',
              ŧ: 't',
              Ũ: 'U',
              Ū: 'U',
              Ŭ: 'U',
              Ů: 'U',
              Ű: 'U',
              Ų: 'U',
              ũ: 'u',
              ū: 'u',
              ŭ: 'u',
              ů: 'u',
              ű: 'u',
              ų: 'u',
              Ŵ: 'W',
              ŵ: 'w',
              Ŷ: 'Y',
              ŷ: 'y',
              Ÿ: 'Y',
              Ź: 'Z',
              Ż: 'Z',
              Ž: 'Z',
              ź: 'z',
              ż: 'z',
              ž: 'z',
              Ĳ: 'IJ',
              ĳ: 'ij',
              Œ: 'Oe',
              œ: 'oe',
              ŉ: "'n",
              ſ: 's',
            }),
            qt = It({
              '&': '&amp;',
              '<': '&lt;',
              '>': '&gt;',
              '"': '&quot;',
              "'": '&#39;',
            });
          function Rt(e) {
            return '\\' + De[e];
          }
          function Bt(e) {
            return Le.test(e);
          }
          function Ct(e) {
            var t = -1,
              r = Array(e.size);
            return (
              e.forEach(function (e, n) {
                r[++t] = [n, e];
              }),
              r
            );
          }
          function Ut(e, t) {
            return function (r) {
              return e(t(r));
            };
          }
          function Dt(e, t) {
            for (var r = -1, n = e.length, i = 0, a = []; ++r < n; ) {
              var s = e[r];
              (s !== t && s !== o) || ((e[r] = o), (a[i++] = r));
            }
            return a;
          }
          function Kt(e) {
            var t = -1,
              r = Array(e.size);
            return (
              e.forEach(function (e) {
                r[++t] = e;
              }),
              r
            );
          }
          function Ht(e) {
            var t = -1,
              r = Array(e.size);
            return (
              e.forEach(function (e) {
                r[++t] = [e, e];
              }),
              r
            );
          }
          function Vt(e) {
            return Bt(e)
              ? (function (e) {
                  var t = (je.lastIndex = 0);
                  for (; je.test(e); ) ++t;
                  return t;
                })(e)
              : gt(e);
          }
          function Ft(e) {
            return Bt(e)
              ? (function (e) {
                  return e.match(je) || [];
                })(e)
              : (function (e) {
                  return e.split('');
                })(e);
          }
          var Wt = It({
            '&amp;': '&',
            '&lt;': '<',
            '&gt;': '>',
            '&quot;': '"',
            '&#39;': "'",
          });
          var Yt = (function e(t) {
            var r,
              n = (t =
                null == t ? We : Yt.defaults(We.Object(), t, Yt.pick(We, Re)))
                .Array,
              le = t.Date,
              de = t.Error,
              pe = t.Function,
              he = t.Math,
              me = t.Object,
              be = t.RegExp,
              ge = t.String,
              ve = t.TypeError,
              ye = n.prototype,
              we = pe.prototype,
              _e = me.prototype,
              Ee = t['__core-js_shared__'],
              Se = we.toString,
              xe = _e.hasOwnProperty,
              Ie = 0,
              Ae = (r = /[^.]+$/.exec(
                (Ee && Ee.keys && Ee.keys.IE_PROTO) || ''
              ))
                ? 'Symbol(src)_1.' + r
                : '',
              ke = _e.toString,
              ze = Se.call(me),
              Me = We._,
              Te = be(
                '^' +
                  Se.call(xe)
                    .replace(F, '\\$&')
                    .replace(
                      /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                      '$1.*?'
                    ) +
                  '$'
              ),
              je = Je ? t.Buffer : void 0,
              Le = t.Symbol,
              De = t.Uint8Array,
              Ve = je ? je.allocUnsafe : void 0,
              Fe = Ut(me.getPrototypeOf, me),
              Ye = me.create,
              Ge = _e.propertyIsEnumerable,
              $e = ye.splice,
              Ze = Le ? Le.isConcatSpreadable : void 0,
              gt = Le ? Le.iterator : void 0,
              It = Le ? Le.toStringTag : void 0,
              Gt = (function () {
                try {
                  var e = Xi(me, 'defineProperty');
                  return e({}, '', {}), e;
                } catch (e) {}
              })(),
              Jt = t.clearTimeout !== We.clearTimeout && t.clearTimeout,
              $t = le && le.now !== We.Date.now && le.now,
              Zt = t.setTimeout !== We.setTimeout && t.setTimeout,
              Qt = he.ceil,
              Xt = he.floor,
              er = me.getOwnPropertySymbols,
              tr = je ? je.isBuffer : void 0,
              rr = t.isFinite,
              nr = ye.join,
              ir = Ut(me.keys, me),
              or = he.max,
              ar = he.min,
              sr = le.now,
              ur = t.parseInt,
              cr = he.random,
              fr = ye.reverse,
              lr = Xi(t, 'DataView'),
              dr = Xi(t, 'Map'),
              pr = Xi(t, 'Promise'),
              hr = Xi(t, 'Set'),
              mr = Xi(t, 'WeakMap'),
              br = Xi(me, 'create'),
              gr = mr && new mr(),
              vr = {},
              yr = ko(lr),
              wr = ko(dr),
              _r = ko(pr),
              Er = ko(hr),
              Sr = ko(mr),
              xr = Le ? Le.prototype : void 0,
              Ir = xr ? xr.valueOf : void 0,
              Ar = xr ? xr.toString : void 0;
            function kr(e) {
              if (Va(e) && !ja(e) && !(e instanceof Pr)) {
                if (e instanceof Tr) return e;
                if (xe.call(e, '__wrapped__')) return zo(e);
              }
              return new Tr(e);
            }
            var zr = (function () {
              function e() {}
              return function (t) {
                if (!Ha(t)) return {};
                if (Ye) return Ye(t);
                e.prototype = t;
                var r = new e();
                return (e.prototype = void 0), r;
              };
            })();
            function Mr() {}
            function Tr(e, t) {
              (this.__wrapped__ = e),
                (this.__actions__ = []),
                (this.__chain__ = !!t),
                (this.__index__ = 0),
                (this.__values__ = void 0);
            }
            function Pr(e) {
              (this.__wrapped__ = e),
                (this.__actions__ = []),
                (this.__dir__ = 1),
                (this.__filtered__ = !1),
                (this.__iteratees__ = []),
                (this.__takeCount__ = 4294967295),
                (this.__views__ = []);
            }
            function Or(e) {
              var t = -1,
                r = null == e ? 0 : e.length;
              for (this.clear(); ++t < r; ) {
                var n = e[t];
                this.set(n[0], n[1]);
              }
            }
            function jr(e) {
              var t = -1,
                r = null == e ? 0 : e.length;
              for (this.clear(); ++t < r; ) {
                var n = e[t];
                this.set(n[0], n[1]);
              }
            }
            function Nr(e) {
              var t = -1,
                r = null == e ? 0 : e.length;
              for (this.clear(); ++t < r; ) {
                var n = e[t];
                this.set(n[0], n[1]);
              }
            }
            function Lr(e) {
              var t = -1,
                r = null == e ? 0 : e.length;
              for (this.__data__ = new Nr(); ++t < r; ) this.add(e[t]);
            }
            function qr(e) {
              var t = (this.__data__ = new jr(e));
              this.size = t.size;
            }
            function Rr(e, t) {
              var r = ja(e),
                n = !r && Oa(e),
                i = !r && !n && Ra(e),
                o = !r && !n && !i && Qa(e),
                a = r || n || i || o,
                s = a ? zt(e.length, ge) : [],
                u = s.length;
              for (var c in e)
                (!t && !xe.call(e, c)) ||
                  (a &&
                    ('length' == c ||
                      (i && ('offset' == c || 'parent' == c)) ||
                      (o &&
                        ('buffer' == c ||
                          'byteLength' == c ||
                          'byteOffset' == c)) ||
                      ao(c, u))) ||
                  s.push(c);
              return s;
            }
            function Br(e) {
              var t = e.length;
              return t ? e[qn(0, t - 1)] : void 0;
            }
            function Cr(e, t) {
              return xo(gi(e), Gr(t, 0, e.length));
            }
            function Ur(e) {
              return xo(gi(e));
            }
            function Dr(e, t, r) {
              ((void 0 !== r && !Ma(e[t], r)) || (void 0 === r && !(t in e))) &&
                Wr(e, t, r);
            }
            function Kr(e, t, r) {
              var n = e[t];
              (xe.call(e, t) && Ma(n, r) && (void 0 !== r || t in e)) ||
                Wr(e, t, r);
            }
            function Hr(e, t) {
              for (var r = e.length; r--; ) if (Ma(e[r][0], t)) return r;
              return -1;
            }
            function Vr(e, t, r, n) {
              return (
                Xr(e, function (e, i, o) {
                  t(n, e, r(e), o);
                }),
                n
              );
            }
            function Fr(e, t) {
              return e && vi(t, ws(t), e);
            }
            function Wr(e, t, r) {
              '__proto__' == t && Gt
                ? Gt(e, t, {
                    configurable: !0,
                    enumerable: !0,
                    value: r,
                    writable: !0,
                  })
                : (e[t] = r);
            }
            function Yr(e, t) {
              for (var r = -1, i = t.length, o = n(i), a = null == e; ++r < i; )
                o[r] = a ? void 0 : ms(e, t[r]);
              return o;
            }
            function Gr(e, t, r) {
              return (
                e == e &&
                  (void 0 !== r && (e = e <= r ? e : r),
                  void 0 !== t && (e = e >= t ? e : t)),
                e
              );
            }
            function Jr(e, t, r, n, i, o) {
              var a,
                u = 1 & t,
                l = 2 & t,
                _ = 4 & t;
              if ((r && (a = i ? r(e, n, i, o) : r(e)), void 0 !== a)) return a;
              if (!Ha(e)) return e;
              var O = ja(e);
              if (O) {
                if (
                  ((a = (function (e) {
                    var t = e.length,
                      r = new e.constructor(t);
                    t &&
                      'string' == typeof e[0] &&
                      xe.call(e, 'index') &&
                      ((r.index = e.index), (r.input = e.input));
                    return r;
                  })(e)),
                  !u)
                )
                  return gi(e, a);
              } else {
                var j = ro(e),
                  N = j == d || j == p;
                if (Ra(e)) return li(e, u);
                if (j == b || j == s || (N && !i)) {
                  if (((a = l || N ? {} : io(e)), !u))
                    return l
                      ? (function (e, t) {
                          return vi(e, to(e), t);
                        })(
                          e,
                          (function (e, t) {
                            return e && vi(t, _s(t), e);
                          })(a, e)
                        )
                      : (function (e, t) {
                          return vi(e, eo(e), t);
                        })(e, Fr(a, e));
                } else {
                  if (!Ue[j]) return i ? e : {};
                  a = (function (e, t, r) {
                    var n = e.constructor;
                    switch (t) {
                      case E:
                        return di(e);
                      case c:
                      case f:
                        return new n(+e);
                      case S:
                        return (function (e, t) {
                          var r = t ? di(e.buffer) : e.buffer;
                          return new e.constructor(
                            r,
                            e.byteOffset,
                            e.byteLength
                          );
                        })(e, r);
                      case x:
                      case I:
                      case A:
                      case k:
                      case z:
                      case M:
                      case '[object Uint8ClampedArray]':
                      case T:
                      case P:
                        return pi(e, r);
                      case h:
                        return new n();
                      case m:
                      case y:
                        return new n(e);
                      case g:
                        return (function (e) {
                          var t = new e.constructor(e.source, re.exec(e));
                          return (t.lastIndex = e.lastIndex), t;
                        })(e);
                      case v:
                        return new n();
                      case w:
                        return (i = e), Ir ? me(Ir.call(i)) : {};
                    }
                    var i;
                  })(e, j, u);
                }
              }
              o || (o = new qr());
              var L = o.get(e);
              if (L) return L;
              o.set(e, a),
                Ja(e)
                  ? e.forEach(function (n) {
                      a.add(Jr(n, t, r, n, e, o));
                    })
                  : Fa(e) &&
                    e.forEach(function (n, i) {
                      a.set(i, Jr(n, t, r, i, e, o));
                    });
              var q = O ? void 0 : (_ ? (l ? Wi : Fi) : l ? _s : ws)(e);
              return (
                at(q || e, function (n, i) {
                  q && (n = e[(i = n)]), Kr(a, i, Jr(n, t, r, i, e, o));
                }),
                a
              );
            }
            function $r(e, t, r) {
              var n = r.length;
              if (null == e) return !n;
              for (e = me(e); n--; ) {
                var i = r[n],
                  o = t[i],
                  a = e[i];
                if ((void 0 === a && !(i in e)) || !o(a)) return !1;
              }
              return !0;
            }
            function Zr(e, t, r) {
              if ('function' != typeof e) throw new ve(i);
              return wo(function () {
                e.apply(void 0, r);
              }, t);
            }
            function Qr(e, t, r, n) {
              var i = -1,
                o = ft,
                a = !0,
                s = e.length,
                u = [],
                c = t.length;
              if (!s) return u;
              r && (t = dt(t, Mt(r))),
                n
                  ? ((o = lt), (a = !1))
                  : t.length >= 200 && ((o = Pt), (a = !1), (t = new Lr(t)));
              e: for (; ++i < s; ) {
                var f = e[i],
                  l = null == r ? f : r(f);
                if (((f = n || 0 !== f ? f : 0), a && l == l)) {
                  for (var d = c; d--; ) if (t[d] === l) continue e;
                  u.push(f);
                } else o(t, l, n) || u.push(f);
              }
              return u;
            }
            (kr.templateSettings = {
              escape: C,
              evaluate: U,
              interpolate: D,
              variable: '',
              imports: { _: kr },
            }),
              (kr.prototype = Mr.prototype),
              (kr.prototype.constructor = kr),
              (Tr.prototype = zr(Mr.prototype)),
              (Tr.prototype.constructor = Tr),
              (Pr.prototype = zr(Mr.prototype)),
              (Pr.prototype.constructor = Pr),
              (Or.prototype.clear = function () {
                (this.__data__ = br ? br(null) : {}), (this.size = 0);
              }),
              (Or.prototype.delete = function (e) {
                var t = this.has(e) && delete this.__data__[e];
                return (this.size -= t ? 1 : 0), t;
              }),
              (Or.prototype.get = function (e) {
                var t = this.__data__;
                if (br) {
                  var r = t[e];
                  return '__lodash_hash_undefined__' === r ? void 0 : r;
                }
                return xe.call(t, e) ? t[e] : void 0;
              }),
              (Or.prototype.has = function (e) {
                var t = this.__data__;
                return br ? void 0 !== t[e] : xe.call(t, e);
              }),
              (Or.prototype.set = function (e, t) {
                var r = this.__data__;
                return (
                  (this.size += this.has(e) ? 0 : 1),
                  (r[e] = br && void 0 === t ? '__lodash_hash_undefined__' : t),
                  this
                );
              }),
              (jr.prototype.clear = function () {
                (this.__data__ = []), (this.size = 0);
              }),
              (jr.prototype.delete = function (e) {
                var t = this.__data__,
                  r = Hr(t, e);
                return (
                  !(r < 0) &&
                  (r == t.length - 1 ? t.pop() : $e.call(t, r, 1),
                  --this.size,
                  !0)
                );
              }),
              (jr.prototype.get = function (e) {
                var t = this.__data__,
                  r = Hr(t, e);
                return r < 0 ? void 0 : t[r][1];
              }),
              (jr.prototype.has = function (e) {
                return Hr(this.__data__, e) > -1;
              }),
              (jr.prototype.set = function (e, t) {
                var r = this.__data__,
                  n = Hr(r, e);
                return (
                  n < 0 ? (++this.size, r.push([e, t])) : (r[n][1] = t), this
                );
              }),
              (Nr.prototype.clear = function () {
                (this.size = 0),
                  (this.__data__ = {
                    hash: new Or(),
                    map: new (dr || jr)(),
                    string: new Or(),
                  });
              }),
              (Nr.prototype.delete = function (e) {
                var t = Zi(this, e).delete(e);
                return (this.size -= t ? 1 : 0), t;
              }),
              (Nr.prototype.get = function (e) {
                return Zi(this, e).get(e);
              }),
              (Nr.prototype.has = function (e) {
                return Zi(this, e).has(e);
              }),
              (Nr.prototype.set = function (e, t) {
                var r = Zi(this, e),
                  n = r.size;
                return r.set(e, t), (this.size += r.size == n ? 0 : 1), this;
              }),
              (Lr.prototype.add = Lr.prototype.push = function (e) {
                return this.__data__.set(e, '__lodash_hash_undefined__'), this;
              }),
              (Lr.prototype.has = function (e) {
                return this.__data__.has(e);
              }),
              (qr.prototype.clear = function () {
                (this.__data__ = new jr()), (this.size = 0);
              }),
              (qr.prototype.delete = function (e) {
                var t = this.__data__,
                  r = t.delete(e);
                return (this.size = t.size), r;
              }),
              (qr.prototype.get = function (e) {
                return this.__data__.get(e);
              }),
              (qr.prototype.has = function (e) {
                return this.__data__.has(e);
              }),
              (qr.prototype.set = function (e, t) {
                var r = this.__data__;
                if (r instanceof jr) {
                  var n = r.__data__;
                  if (!dr || n.length < 199)
                    return n.push([e, t]), (this.size = ++r.size), this;
                  r = this.__data__ = new Nr(n);
                }
                return r.set(e, t), (this.size = r.size), this;
              });
            var Xr = _i(un),
              en = _i(cn, !0);
            function tn(e, t) {
              var r = !0;
              return (
                Xr(e, function (e, n, i) {
                  return (r = !!t(e, n, i));
                }),
                r
              );
            }
            function rn(e, t, r) {
              for (var n = -1, i = e.length; ++n < i; ) {
                var o = e[n],
                  a = t(o);
                if (null != a && (void 0 === s ? a == a && !Za(a) : r(a, s)))
                  var s = a,
                    u = o;
              }
              return u;
            }
            function nn(e, t) {
              var r = [];
              return (
                Xr(e, function (e, n, i) {
                  t(e, n, i) && r.push(e);
                }),
                r
              );
            }
            function on(e, t, r, n, i) {
              var o = -1,
                a = e.length;
              for (r || (r = oo), i || (i = []); ++o < a; ) {
                var s = e[o];
                t > 0 && r(s)
                  ? t > 1
                    ? on(s, t - 1, r, n, i)
                    : pt(i, s)
                  : n || (i[i.length] = s);
              }
              return i;
            }
            var an = Ei(),
              sn = Ei(!0);
            function un(e, t) {
              return e && an(e, t, ws);
            }
            function cn(e, t) {
              return e && sn(e, t, ws);
            }
            function fn(e, t) {
              return ct(t, function (t) {
                return Ua(e[t]);
              });
            }
            function ln(e, t) {
              for (var r = 0, n = (t = si(t, e)).length; null != e && r < n; )
                e = e[Ao(t[r++])];
              return r && r == n ? e : void 0;
            }
            function dn(e, t, r) {
              var n = t(e);
              return ja(e) ? n : pt(n, r(e));
            }
            function pn(e) {
              return null == e
                ? void 0 === e
                  ? '[object Undefined]'
                  : '[object Null]'
                : It && It in me(e)
                ? (function (e) {
                    var t = xe.call(e, It),
                      r = e[It];
                    try {
                      e[It] = void 0;
                      var n = !0;
                    } catch (e) {}
                    var i = ke.call(e);
                    n && (t ? (e[It] = r) : delete e[It]);
                    return i;
                  })(e)
                : (function (e) {
                    return ke.call(e);
                  })(e);
            }
            function hn(e, t) {
              return e > t;
            }
            function mn(e, t) {
              return null != e && xe.call(e, t);
            }
            function bn(e, t) {
              return null != e && t in me(e);
            }
            function gn(e, t, r) {
              for (
                var i = r ? lt : ft,
                  o = e[0].length,
                  a = e.length,
                  s = a,
                  u = n(a),
                  c = 1 / 0,
                  f = [];
                s--;

              ) {
                var l = e[s];
                s && t && (l = dt(l, Mt(t))),
                  (c = ar(l.length, c)),
                  (u[s] =
                    !r && (t || (o >= 120 && l.length >= 120))
                      ? new Lr(s && l)
                      : void 0);
              }
              l = e[0];
              var d = -1,
                p = u[0];
              e: for (; ++d < o && f.length < c; ) {
                var h = l[d],
                  m = t ? t(h) : h;
                if (
                  ((h = r || 0 !== h ? h : 0), !(p ? Pt(p, m) : i(f, m, r)))
                ) {
                  for (s = a; --s; ) {
                    var b = u[s];
                    if (!(b ? Pt(b, m) : i(e[s], m, r))) continue e;
                  }
                  p && p.push(m), f.push(h);
                }
              }
              return f;
            }
            function vn(e, t, r) {
              var n = null == (e = bo(e, (t = si(t, e)))) ? e : e[Ao(Co(t))];
              return null == n ? void 0 : it(n, e, r);
            }
            function yn(e) {
              return Va(e) && pn(e) == s;
            }
            function wn(e, t, r, n, i) {
              return (
                e === t ||
                (null == e || null == t || (!Va(e) && !Va(t))
                  ? e != e && t != t
                  : (function (e, t, r, n, i, o) {
                      var a = ja(e),
                        d = ja(t),
                        p = a ? u : ro(e),
                        _ = d ? u : ro(t),
                        x = (p = p == s ? b : p) == b,
                        I = (_ = _ == s ? b : _) == b,
                        A = p == _;
                      if (A && Ra(e)) {
                        if (!Ra(t)) return !1;
                        (a = !0), (x = !1);
                      }
                      if (A && !x)
                        return (
                          o || (o = new qr()),
                          a || Qa(e)
                            ? Hi(e, t, r, n, i, o)
                            : (function (e, t, r, n, i, o, a) {
                                switch (r) {
                                  case S:
                                    if (
                                      e.byteLength != t.byteLength ||
                                      e.byteOffset != t.byteOffset
                                    )
                                      return !1;
                                    (e = e.buffer), (t = t.buffer);
                                  case E:
                                    return !(
                                      e.byteLength != t.byteLength ||
                                      !o(new De(e), new De(t))
                                    );
                                  case c:
                                  case f:
                                  case m:
                                    return Ma(+e, +t);
                                  case l:
                                    return (
                                      e.name == t.name && e.message == t.message
                                    );
                                  case g:
                                  case y:
                                    return e == t + '';
                                  case h:
                                    var s = Ct;
                                  case v:
                                    var u = 1 & n;
                                    if ((s || (s = Kt), e.size != t.size && !u))
                                      return !1;
                                    var d = a.get(e);
                                    if (d) return d == t;
                                    (n |= 2), a.set(e, t);
                                    var p = Hi(s(e), s(t), n, i, o, a);
                                    return a.delete(e), p;
                                  case w:
                                    if (Ir) return Ir.call(e) == Ir.call(t);
                                }
                                return !1;
                              })(e, t, p, r, n, i, o)
                        );
                      if (!(1 & r)) {
                        var k = x && xe.call(e, '__wrapped__'),
                          z = I && xe.call(t, '__wrapped__');
                        if (k || z) {
                          var M = k ? e.value() : e,
                            T = z ? t.value() : t;
                          return o || (o = new qr()), i(M, T, r, n, o);
                        }
                      }
                      if (!A) return !1;
                      return (
                        o || (o = new qr()),
                        (function (e, t, r, n, i, o) {
                          var a = 1 & r,
                            s = Fi(e),
                            u = s.length,
                            c = Fi(t).length;
                          if (u != c && !a) return !1;
                          var f = u;
                          for (; f--; ) {
                            var l = s[f];
                            if (!(a ? l in t : xe.call(t, l))) return !1;
                          }
                          var d = o.get(e),
                            p = o.get(t);
                          if (d && p) return d == t && p == e;
                          var h = !0;
                          o.set(e, t), o.set(t, e);
                          var m = a;
                          for (; ++f < u; ) {
                            l = s[f];
                            var b = e[l],
                              g = t[l];
                            if (n)
                              var v = a
                                ? n(g, b, l, t, e, o)
                                : n(b, g, l, e, t, o);
                            if (
                              !(void 0 === v ? b === g || i(b, g, r, n, o) : v)
                            ) {
                              h = !1;
                              break;
                            }
                            m || (m = 'constructor' == l);
                          }
                          if (h && !m) {
                            var y = e.constructor,
                              w = t.constructor;
                            y == w ||
                              !('constructor' in e) ||
                              !('constructor' in t) ||
                              ('function' == typeof y &&
                                y instanceof y &&
                                'function' == typeof w &&
                                w instanceof w) ||
                              (h = !1);
                          }
                          return o.delete(e), o.delete(t), h;
                        })(e, t, r, n, i, o)
                      );
                    })(e, t, r, n, wn, i))
              );
            }
            function _n(e, t, r, n) {
              var i = r.length,
                o = i,
                a = !n;
              if (null == e) return !o;
              for (e = me(e); i--; ) {
                var s = r[i];
                if (a && s[2] ? s[1] !== e[s[0]] : !(s[0] in e)) return !1;
              }
              for (; ++i < o; ) {
                var u = (s = r[i])[0],
                  c = e[u],
                  f = s[1];
                if (a && s[2]) {
                  if (void 0 === c && !(u in e)) return !1;
                } else {
                  var l = new qr();
                  if (n) var d = n(c, f, u, e, t, l);
                  if (!(void 0 === d ? wn(f, c, 3, n, l) : d)) return !1;
                }
              }
              return !0;
            }
            function En(e) {
              return (
                !(!Ha(e) || ((t = e), Ae && Ae in t)) &&
                (Ua(e) ? Te : oe).test(ko(e))
              );
              var t;
            }
            function Sn(e) {
              return 'function' == typeof e
                ? e
                : null == e
                ? Ws
                : 'object' == typeof e
                ? ja(e)
                  ? Mn(e[0], e[1])
                  : zn(e)
                : tu(e);
            }
            function xn(e) {
              if (!lo(e)) return ir(e);
              var t = [];
              for (var r in me(e))
                xe.call(e, r) && 'constructor' != r && t.push(r);
              return t;
            }
            function In(e) {
              if (!Ha(e))
                return (function (e) {
                  var t = [];
                  if (null != e) for (var r in me(e)) t.push(r);
                  return t;
                })(e);
              var t = lo(e),
                r = [];
              for (var n in e)
                ('constructor' != n || (!t && xe.call(e, n))) && r.push(n);
              return r;
            }
            function An(e, t) {
              return e < t;
            }
            function kn(e, t) {
              var r = -1,
                i = La(e) ? n(e.length) : [];
              return (
                Xr(e, function (e, n, o) {
                  i[++r] = t(e, n, o);
                }),
                i
              );
            }
            function zn(e) {
              var t = Qi(e);
              return 1 == t.length && t[0][2]
                ? ho(t[0][0], t[0][1])
                : function (r) {
                    return r === e || _n(r, e, t);
                  };
            }
            function Mn(e, t) {
              return uo(e) && po(t)
                ? ho(Ao(e), t)
                : function (r) {
                    var n = ms(r, e);
                    return void 0 === n && n === t ? bs(r, e) : wn(t, n, 3);
                  };
            }
            function Tn(e, t, r, n, i) {
              e !== t &&
                an(
                  t,
                  function (o, a) {
                    if ((i || (i = new qr()), Ha(o)))
                      !(function (e, t, r, n, i, o, a) {
                        var s = vo(e, r),
                          u = vo(t, r),
                          c = a.get(u);
                        if (c) return void Dr(e, r, c);
                        var f = o ? o(s, u, r + '', e, t, a) : void 0,
                          l = void 0 === f;
                        if (l) {
                          var d = ja(u),
                            p = !d && Ra(u),
                            h = !d && !p && Qa(u);
                          (f = u),
                            d || p || h
                              ? ja(s)
                                ? (f = s)
                                : qa(s)
                                ? (f = gi(s))
                                : p
                                ? ((l = !1), (f = li(u, !0)))
                                : h
                                ? ((l = !1), (f = pi(u, !0)))
                                : (f = [])
                              : Ya(u) || Oa(u)
                              ? ((f = s),
                                Oa(s)
                                  ? (f = as(s))
                                  : (Ha(s) && !Ua(s)) || (f = io(u)))
                              : (l = !1);
                        }
                        l && (a.set(u, f), i(f, u, n, o, a), a.delete(u));
                        Dr(e, r, f);
                      })(e, t, a, r, Tn, n, i);
                    else {
                      var s = n ? n(vo(e, a), o, a + '', e, t, i) : void 0;
                      void 0 === s && (s = o), Dr(e, a, s);
                    }
                  },
                  _s
                );
            }
            function Pn(e, t) {
              var r = e.length;
              if (r) return ao((t += t < 0 ? r : 0), r) ? e[t] : void 0;
            }
            function On(e, t, r) {
              t = t.length
                ? dt(t, function (e) {
                    return ja(e)
                      ? function (t) {
                          return ln(t, 1 === e.length ? e[0] : e);
                        }
                      : e;
                  })
                : [Ws];
              var n = -1;
              return (
                (t = dt(t, Mt($i()))),
                (function (e, t) {
                  var r = e.length;
                  for (e.sort(t); r--; ) e[r] = e[r].value;
                  return e;
                })(
                  kn(e, function (e, r, i) {
                    return {
                      criteria: dt(t, function (t) {
                        return t(e);
                      }),
                      index: ++n,
                      value: e,
                    };
                  }),
                  function (e, t) {
                    return (function (e, t, r) {
                      var n = -1,
                        i = e.criteria,
                        o = t.criteria,
                        a = i.length,
                        s = r.length;
                      for (; ++n < a; ) {
                        var u = hi(i[n], o[n]);
                        if (u) {
                          if (n >= s) return u;
                          var c = r[n];
                          return u * ('desc' == c ? -1 : 1);
                        }
                      }
                      return e.index - t.index;
                    })(e, t, r);
                  }
                )
              );
            }
            function jn(e, t, r) {
              for (var n = -1, i = t.length, o = {}; ++n < i; ) {
                var a = t[n],
                  s = ln(e, a);
                r(s, a) && Dn(o, si(a, e), s);
              }
              return o;
            }
            function Nn(e, t, r, n) {
              var i = n ? _t : wt,
                o = -1,
                a = t.length,
                s = e;
              for (e === t && (t = gi(t)), r && (s = dt(e, Mt(r))); ++o < a; )
                for (
                  var u = 0, c = t[o], f = r ? r(c) : c;
                  (u = i(s, f, u, n)) > -1;

                )
                  s !== e && $e.call(s, u, 1), $e.call(e, u, 1);
              return e;
            }
            function Ln(e, t) {
              for (var r = e ? t.length : 0, n = r - 1; r--; ) {
                var i = t[r];
                if (r == n || i !== o) {
                  var o = i;
                  ao(i) ? $e.call(e, i, 1) : Xn(e, i);
                }
              }
              return e;
            }
            function qn(e, t) {
              return e + Xt(cr() * (t - e + 1));
            }
            function Rn(e, t) {
              var r = '';
              if (!e || t < 1 || t > 9007199254740991) return r;
              do {
                t % 2 && (r += e), (t = Xt(t / 2)) && (e += e);
              } while (t);
              return r;
            }
            function Bn(e, t) {
              return _o(mo(e, t, Ws), e + '');
            }
            function Cn(e) {
              return Br(Ms(e));
            }
            function Un(e, t) {
              var r = Ms(e);
              return xo(r, Gr(t, 0, r.length));
            }
            function Dn(e, t, r, n) {
              if (!Ha(e)) return e;
              for (
                var i = -1, o = (t = si(t, e)).length, a = o - 1, s = e;
                null != s && ++i < o;

              ) {
                var u = Ao(t[i]),
                  c = r;
                if (
                  '__proto__' === u ||
                  'constructor' === u ||
                  'prototype' === u
                )
                  return e;
                if (i != a) {
                  var f = s[u];
                  void 0 === (c = n ? n(f, u, s) : void 0) &&
                    (c = Ha(f) ? f : ao(t[i + 1]) ? [] : {});
                }
                Kr(s, u, c), (s = s[u]);
              }
              return e;
            }
            var Kn = gr
                ? function (e, t) {
                    return gr.set(e, t), e;
                  }
                : Ws,
              Hn = Gt
                ? function (e, t) {
                    return Gt(e, 'toString', {
                      configurable: !0,
                      enumerable: !1,
                      value: Hs(t),
                      writable: !0,
                    });
                  }
                : Ws;
            function Vn(e) {
              return xo(Ms(e));
            }
            function Fn(e, t, r) {
              var i = -1,
                o = e.length;
              t < 0 && (t = -t > o ? 0 : o + t),
                (r = r > o ? o : r) < 0 && (r += o),
                (o = t > r ? 0 : (r - t) >>> 0),
                (t >>>= 0);
              for (var a = n(o); ++i < o; ) a[i] = e[i + t];
              return a;
            }
            function Wn(e, t) {
              var r;
              return (
                Xr(e, function (e, n, i) {
                  return !(r = t(e, n, i));
                }),
                !!r
              );
            }
            function Yn(e, t, r) {
              var n = 0,
                i = null == e ? n : e.length;
              if ('number' == typeof t && t == t && i <= 2147483647) {
                for (; n < i; ) {
                  var o = (n + i) >>> 1,
                    a = e[o];
                  null !== a && !Za(a) && (r ? a <= t : a < t)
                    ? (n = o + 1)
                    : (i = o);
                }
                return i;
              }
              return Gn(e, t, Ws, r);
            }
            function Gn(e, t, r, n) {
              var i = 0,
                o = null == e ? 0 : e.length;
              if (0 === o) return 0;
              for (
                var a = (t = r(t)) != t,
                  s = null === t,
                  u = Za(t),
                  c = void 0 === t;
                i < o;

              ) {
                var f = Xt((i + o) / 2),
                  l = r(e[f]),
                  d = void 0 !== l,
                  p = null === l,
                  h = l == l,
                  m = Za(l);
                if (a) var b = n || h;
                else
                  b = c
                    ? h && (n || d)
                    : s
                    ? h && d && (n || !p)
                    : u
                    ? h && d && !p && (n || !m)
                    : !p && !m && (n ? l <= t : l < t);
                b ? (i = f + 1) : (o = f);
              }
              return ar(o, 4294967294);
            }
            function Jn(e, t) {
              for (var r = -1, n = e.length, i = 0, o = []; ++r < n; ) {
                var a = e[r],
                  s = t ? t(a) : a;
                if (!r || !Ma(s, u)) {
                  var u = s;
                  o[i++] = 0 === a ? 0 : a;
                }
              }
              return o;
            }
            function $n(e) {
              return 'number' == typeof e ? e : Za(e) ? NaN : +e;
            }
            function Zn(e) {
              if ('string' == typeof e) return e;
              if (ja(e)) return dt(e, Zn) + '';
              if (Za(e)) return Ar ? Ar.call(e) : '';
              var t = e + '';
              return '0' == t && 1 / e == -1 / 0 ? '-0' : t;
            }
            function Qn(e, t, r) {
              var n = -1,
                i = ft,
                o = e.length,
                a = !0,
                s = [],
                u = s;
              if (r) (a = !1), (i = lt);
              else if (o >= 200) {
                var c = t ? null : Ri(e);
                if (c) return Kt(c);
                (a = !1), (i = Pt), (u = new Lr());
              } else u = t ? [] : s;
              e: for (; ++n < o; ) {
                var f = e[n],
                  l = t ? t(f) : f;
                if (((f = r || 0 !== f ? f : 0), a && l == l)) {
                  for (var d = u.length; d--; ) if (u[d] === l) continue e;
                  t && u.push(l), s.push(f);
                } else i(u, l, r) || (u !== s && u.push(l), s.push(f));
              }
              return s;
            }
            function Xn(e, t) {
              return null == (e = bo(e, (t = si(t, e)))) || delete e[Ao(Co(t))];
            }
            function ei(e, t, r, n) {
              return Dn(e, t, r(ln(e, t)), n);
            }
            function ti(e, t, r, n) {
              for (
                var i = e.length, o = n ? i : -1;
                (n ? o-- : ++o < i) && t(e[o], o, e);

              );
              return r
                ? Fn(e, n ? 0 : o, n ? o + 1 : i)
                : Fn(e, n ? o + 1 : 0, n ? i : o);
            }
            function ri(e, t) {
              var r = e;
              return (
                r instanceof Pr && (r = r.value()),
                ht(
                  t,
                  function (e, t) {
                    return t.func.apply(t.thisArg, pt([e], t.args));
                  },
                  r
                )
              );
            }
            function ni(e, t, r) {
              var i = e.length;
              if (i < 2) return i ? Qn(e[0]) : [];
              for (var o = -1, a = n(i); ++o < i; )
                for (var s = e[o], u = -1; ++u < i; )
                  u != o && (a[o] = Qr(a[o] || s, e[u], t, r));
              return Qn(on(a, 1), t, r);
            }
            function ii(e, t, r) {
              for (var n = -1, i = e.length, o = t.length, a = {}; ++n < i; ) {
                var s = n < o ? t[n] : void 0;
                r(a, e[n], s);
              }
              return a;
            }
            function oi(e) {
              return qa(e) ? e : [];
            }
            function ai(e) {
              return 'function' == typeof e ? e : Ws;
            }
            function si(e, t) {
              return ja(e) ? e : uo(e, t) ? [e] : Io(ss(e));
            }
            var ui = Bn;
            function ci(e, t, r) {
              var n = e.length;
              return (r = void 0 === r ? n : r), !t && r >= n ? e : Fn(e, t, r);
            }
            var fi =
              Jt ||
              function (e) {
                return We.clearTimeout(e);
              };
            function li(e, t) {
              if (t) return e.slice();
              var r = e.length,
                n = Ve ? Ve(r) : new e.constructor(r);
              return e.copy(n), n;
            }
            function di(e) {
              var t = new e.constructor(e.byteLength);
              return new De(t).set(new De(e)), t;
            }
            function pi(e, t) {
              var r = t ? di(e.buffer) : e.buffer;
              return new e.constructor(r, e.byteOffset, e.length);
            }
            function hi(e, t) {
              if (e !== t) {
                var r = void 0 !== e,
                  n = null === e,
                  i = e == e,
                  o = Za(e),
                  a = void 0 !== t,
                  s = null === t,
                  u = t == t,
                  c = Za(t);
                if (
                  (!s && !c && !o && e > t) ||
                  (o && a && u && !s && !c) ||
                  (n && a && u) ||
                  (!r && u) ||
                  !i
                )
                  return 1;
                if (
                  (!n && !o && !c && e < t) ||
                  (c && r && i && !n && !o) ||
                  (s && r && i) ||
                  (!a && i) ||
                  !u
                )
                  return -1;
              }
              return 0;
            }
            function mi(e, t, r, i) {
              for (
                var o = -1,
                  a = e.length,
                  s = r.length,
                  u = -1,
                  c = t.length,
                  f = or(a - s, 0),
                  l = n(c + f),
                  d = !i;
                ++u < c;

              )
                l[u] = t[u];
              for (; ++o < s; ) (d || o < a) && (l[r[o]] = e[o]);
              for (; f--; ) l[u++] = e[o++];
              return l;
            }
            function bi(e, t, r, i) {
              for (
                var o = -1,
                  a = e.length,
                  s = -1,
                  u = r.length,
                  c = -1,
                  f = t.length,
                  l = or(a - u, 0),
                  d = n(l + f),
                  p = !i;
                ++o < l;

              )
                d[o] = e[o];
              for (var h = o; ++c < f; ) d[h + c] = t[c];
              for (; ++s < u; ) (p || o < a) && (d[h + r[s]] = e[o++]);
              return d;
            }
            function gi(e, t) {
              var r = -1,
                i = e.length;
              for (t || (t = n(i)); ++r < i; ) t[r] = e[r];
              return t;
            }
            function vi(e, t, r, n) {
              var i = !r;
              r || (r = {});
              for (var o = -1, a = t.length; ++o < a; ) {
                var s = t[o],
                  u = n ? n(r[s], e[s], s, r, e) : void 0;
                void 0 === u && (u = e[s]), i ? Wr(r, s, u) : Kr(r, s, u);
              }
              return r;
            }
            function yi(e, t) {
              return function (r, n) {
                var i = ja(r) ? ot : Vr,
                  o = t ? t() : {};
                return i(r, e, $i(n, 2), o);
              };
            }
            function wi(e) {
              return Bn(function (t, r) {
                var n = -1,
                  i = r.length,
                  o = i > 1 ? r[i - 1] : void 0,
                  a = i > 2 ? r[2] : void 0;
                for (
                  o =
                    e.length > 3 && 'function' == typeof o ? (i--, o) : void 0,
                    a &&
                      so(r[0], r[1], a) &&
                      ((o = i < 3 ? void 0 : o), (i = 1)),
                    t = me(t);
                  ++n < i;

                ) {
                  var s = r[n];
                  s && e(t, s, n, o);
                }
                return t;
              });
            }
            function _i(e, t) {
              return function (r, n) {
                if (null == r) return r;
                if (!La(r)) return e(r, n);
                for (
                  var i = r.length, o = t ? i : -1, a = me(r);
                  (t ? o-- : ++o < i) && !1 !== n(a[o], o, a);

                );
                return r;
              };
            }
            function Ei(e) {
              return function (t, r, n) {
                for (var i = -1, o = me(t), a = n(t), s = a.length; s--; ) {
                  var u = a[e ? s : ++i];
                  if (!1 === r(o[u], u, o)) break;
                }
                return t;
              };
            }
            function Si(e) {
              return function (t) {
                var r = Bt((t = ss(t))) ? Ft(t) : void 0,
                  n = r ? r[0] : t.charAt(0),
                  i = r ? ci(r, 1).join('') : t.slice(1);
                return n[e]() + i;
              };
            }
            function xi(e) {
              return function (t) {
                return ht(Us(Os(t).replace(Pe, '')), e, '');
              };
            }
            function Ii(e) {
              return function () {
                var t = arguments;
                switch (t.length) {
                  case 0:
                    return new e();
                  case 1:
                    return new e(t[0]);
                  case 2:
                    return new e(t[0], t[1]);
                  case 3:
                    return new e(t[0], t[1], t[2]);
                  case 4:
                    return new e(t[0], t[1], t[2], t[3]);
                  case 5:
                    return new e(t[0], t[1], t[2], t[3], t[4]);
                  case 6:
                    return new e(t[0], t[1], t[2], t[3], t[4], t[5]);
                  case 7:
                    return new e(t[0], t[1], t[2], t[3], t[4], t[5], t[6]);
                }
                var r = zr(e.prototype),
                  n = e.apply(r, t);
                return Ha(n) ? n : r;
              };
            }
            function Ai(e) {
              return function (t, r, n) {
                var i = me(t);
                if (!La(t)) {
                  var o = $i(r, 3);
                  (t = ws(t)),
                    (r = function (e) {
                      return o(i[e], e, i);
                    });
                }
                var a = e(t, r, n);
                return a > -1 ? i[o ? t[a] : a] : void 0;
              };
            }
            function ki(e) {
              return Vi(function (t) {
                var r = t.length,
                  n = r,
                  o = Tr.prototype.thru;
                for (e && t.reverse(); n--; ) {
                  var a = t[n];
                  if ('function' != typeof a) throw new ve(i);
                  if (o && !s && 'wrapper' == Gi(a)) var s = new Tr([], !0);
                }
                for (n = s ? n : r; ++n < r; ) {
                  var u = Gi((a = t[n])),
                    c = 'wrapper' == u ? Yi(a) : void 0;
                  s =
                    c && co(c[0]) && 424 == c[1] && !c[4].length && 1 == c[9]
                      ? s[Gi(c[0])].apply(s, c[3])
                      : 1 == a.length && co(a)
                      ? s[u]()
                      : s.thru(a);
                }
                return function () {
                  var e = arguments,
                    n = e[0];
                  if (s && 1 == e.length && ja(n)) return s.plant(n).value();
                  for (var i = 0, o = r ? t[i].apply(this, e) : n; ++i < r; )
                    o = t[i].call(this, o);
                  return o;
                };
              });
            }
            function zi(e, t, r, i, o, a, s, u, c, f) {
              var l = 128 & t,
                d = 1 & t,
                p = 2 & t,
                h = 24 & t,
                m = 512 & t,
                b = p ? void 0 : Ii(e);
              return function g() {
                for (var v = arguments.length, y = n(v), w = v; w--; )
                  y[w] = arguments[w];
                if (h)
                  var _ = Ji(g),
                    E = Nt(y, _);
                if (
                  (i && (y = mi(y, i, o, h)),
                  a && (y = bi(y, a, s, h)),
                  (v -= E),
                  h && v < f)
                ) {
                  var S = Dt(y, _);
                  return Li(e, t, zi, g.placeholder, r, y, S, u, c, f - v);
                }
                var x = d ? r : this,
                  I = p ? x[e] : e;
                return (
                  (v = y.length),
                  u ? (y = go(y, u)) : m && v > 1 && y.reverse(),
                  l && c < v && (y.length = c),
                  this && this !== We && this instanceof g && (I = b || Ii(I)),
                  I.apply(x, y)
                );
              };
            }
            function Mi(e, t) {
              return function (r, n) {
                return (function (e, t, r, n) {
                  return (
                    un(e, function (e, i, o) {
                      t(n, r(e), i, o);
                    }),
                    n
                  );
                })(r, e, t(n), {});
              };
            }
            function Ti(e, t) {
              return function (r, n) {
                var i;
                if (void 0 === r && void 0 === n) return t;
                if ((void 0 !== r && (i = r), void 0 !== n)) {
                  if (void 0 === i) return n;
                  'string' == typeof r || 'string' == typeof n
                    ? ((r = Zn(r)), (n = Zn(n)))
                    : ((r = $n(r)), (n = $n(n))),
                    (i = e(r, n));
                }
                return i;
              };
            }
            function Pi(e) {
              return Vi(function (t) {
                return (
                  (t = dt(t, Mt($i()))),
                  Bn(function (r) {
                    var n = this;
                    return e(t, function (e) {
                      return it(e, n, r);
                    });
                  })
                );
              });
            }
            function Oi(e, t) {
              var r = (t = void 0 === t ? ' ' : Zn(t)).length;
              if (r < 2) return r ? Rn(t, e) : t;
              var n = Rn(t, Qt(e / Vt(t)));
              return Bt(t) ? ci(Ft(n), 0, e).join('') : n.slice(0, e);
            }
            function ji(e) {
              return function (t, r, i) {
                return (
                  i && 'number' != typeof i && so(t, r, i) && (r = i = void 0),
                  (t = rs(t)),
                  void 0 === r ? ((r = t), (t = 0)) : (r = rs(r)),
                  (function (e, t, r, i) {
                    for (
                      var o = -1, a = or(Qt((t - e) / (r || 1)), 0), s = n(a);
                      a--;

                    )
                      (s[i ? a : ++o] = e), (e += r);
                    return s;
                  })(t, r, (i = void 0 === i ? (t < r ? 1 : -1) : rs(i)), e)
                );
              };
            }
            function Ni(e) {
              return function (t, r) {
                return (
                  ('string' == typeof t && 'string' == typeof r) ||
                    ((t = os(t)), (r = os(r))),
                  e(t, r)
                );
              };
            }
            function Li(e, t, r, n, i, o, a, s, u, c) {
              var f = 8 & t;
              (t |= f ? 32 : 64), 4 & (t &= ~(f ? 64 : 32)) || (t &= -4);
              var l = [
                  e,
                  t,
                  i,
                  f ? o : void 0,
                  f ? a : void 0,
                  f ? void 0 : o,
                  f ? void 0 : a,
                  s,
                  u,
                  c,
                ],
                d = r.apply(void 0, l);
              return co(e) && yo(d, l), (d.placeholder = n), Eo(d, e, t);
            }
            function qi(e) {
              var t = he[e];
              return function (e, r) {
                if (
                  ((e = os(e)), (r = null == r ? 0 : ar(ns(r), 292)) && rr(e))
                ) {
                  var n = (ss(e) + 'e').split('e');
                  return +(
                    (n = (ss(t(n[0] + 'e' + (+n[1] + r))) + 'e').split(
                      'e'
                    ))[0] +
                    'e' +
                    (+n[1] - r)
                  );
                }
                return t(e);
              };
            }
            var Ri =
              hr && 1 / Kt(new hr([, -0]))[1] == 1 / 0
                ? function (e) {
                    return new hr(e);
                  }
                : Zs;
            function Bi(e) {
              return function (t) {
                var r = ro(t);
                return r == h
                  ? Ct(t)
                  : r == v
                  ? Ht(t)
                  : (function (e, t) {
                      return dt(t, function (t) {
                        return [t, e[t]];
                      });
                    })(t, e(t));
              };
            }
            function Ci(e, t, r, a, s, u, c, f) {
              var l = 2 & t;
              if (!l && 'function' != typeof e) throw new ve(i);
              var d = a ? a.length : 0;
              if (
                (d || ((t &= -97), (a = s = void 0)),
                (c = void 0 === c ? c : or(ns(c), 0)),
                (f = void 0 === f ? f : ns(f)),
                (d -= s ? s.length : 0),
                64 & t)
              ) {
                var p = a,
                  h = s;
                a = s = void 0;
              }
              var m = l ? void 0 : Yi(e),
                b = [e, t, r, a, s, p, h, u, c, f];
              if (
                (m &&
                  (function (e, t) {
                    var r = e[1],
                      n = t[1],
                      i = r | n,
                      a = i < 131,
                      s =
                        (128 == n && 8 == r) ||
                        (128 == n && 256 == r && e[7].length <= t[8]) ||
                        (384 == n && t[7].length <= t[8] && 8 == r);
                    if (!a && !s) return e;
                    1 & n && ((e[2] = t[2]), (i |= 1 & r ? 0 : 4));
                    var u = t[3];
                    if (u) {
                      var c = e[3];
                      (e[3] = c ? mi(c, u, t[4]) : u),
                        (e[4] = c ? Dt(e[3], o) : t[4]);
                    }
                    (u = t[5]) &&
                      ((c = e[5]),
                      (e[5] = c ? bi(c, u, t[6]) : u),
                      (e[6] = c ? Dt(e[5], o) : t[6]));
                    (u = t[7]) && (e[7] = u);
                    128 & n && (e[8] = null == e[8] ? t[8] : ar(e[8], t[8]));
                    null == e[9] && (e[9] = t[9]);
                    (e[0] = t[0]), (e[1] = i);
                  })(b, m),
                (e = b[0]),
                (t = b[1]),
                (r = b[2]),
                (a = b[3]),
                (s = b[4]),
                !(f = b[9] =
                  void 0 === b[9] ? (l ? 0 : e.length) : or(b[9] - d, 0)) &&
                  24 & t &&
                  (t &= -25),
                t && 1 != t)
              )
                g =
                  8 == t || 16 == t
                    ? (function (e, t, r) {
                        var i = Ii(e);
                        return function o() {
                          for (
                            var a = arguments.length,
                              s = n(a),
                              u = a,
                              c = Ji(o);
                            u--;

                          )
                            s[u] = arguments[u];
                          var f =
                            a < 3 && s[0] !== c && s[a - 1] !== c
                              ? []
                              : Dt(s, c);
                          if ((a -= f.length) < r)
                            return Li(
                              e,
                              t,
                              zi,
                              o.placeholder,
                              void 0,
                              s,
                              f,
                              void 0,
                              void 0,
                              r - a
                            );
                          var l =
                            this && this !== We && this instanceof o ? i : e;
                          return it(l, this, s);
                        };
                      })(e, t, f)
                    : (32 != t && 33 != t) || s.length
                    ? zi.apply(void 0, b)
                    : (function (e, t, r, i) {
                        var o = 1 & t,
                          a = Ii(e);
                        return function t() {
                          for (
                            var s = -1,
                              u = arguments.length,
                              c = -1,
                              f = i.length,
                              l = n(f + u),
                              d =
                                this && this !== We && this instanceof t
                                  ? a
                                  : e;
                            ++c < f;

                          )
                            l[c] = i[c];
                          for (; u--; ) l[c++] = arguments[++s];
                          return it(d, o ? r : this, l);
                        };
                      })(e, t, r, a);
              else
                var g = (function (e, t, r) {
                  var n = 1 & t,
                    i = Ii(e);
                  return function t() {
                    var o = this && this !== We && this instanceof t ? i : e;
                    return o.apply(n ? r : this, arguments);
                  };
                })(e, t, r);
              return Eo((m ? Kn : yo)(g, b), e, t);
            }
            function Ui(e, t, r, n) {
              return void 0 === e || (Ma(e, _e[r]) && !xe.call(n, r)) ? t : e;
            }
            function Di(e, t, r, n, i, o) {
              return (
                Ha(e) &&
                  Ha(t) &&
                  (o.set(t, e), Tn(e, t, void 0, Di, o), o.delete(t)),
                e
              );
            }
            function Ki(e) {
              return Ya(e) ? void 0 : e;
            }
            function Hi(e, t, r, n, i, o) {
              var a = 1 & r,
                s = e.length,
                u = t.length;
              if (s != u && !(a && u > s)) return !1;
              var c = o.get(e),
                f = o.get(t);
              if (c && f) return c == t && f == e;
              var l = -1,
                d = !0,
                p = 2 & r ? new Lr() : void 0;
              for (o.set(e, t), o.set(t, e); ++l < s; ) {
                var h = e[l],
                  m = t[l];
                if (n) var b = a ? n(m, h, l, t, e, o) : n(h, m, l, e, t, o);
                if (void 0 !== b) {
                  if (b) continue;
                  d = !1;
                  break;
                }
                if (p) {
                  if (
                    !bt(t, function (e, t) {
                      if (!Pt(p, t) && (h === e || i(h, e, r, n, o)))
                        return p.push(t);
                    })
                  ) {
                    d = !1;
                    break;
                  }
                } else if (h !== m && !i(h, m, r, n, o)) {
                  d = !1;
                  break;
                }
              }
              return o.delete(e), o.delete(t), d;
            }
            function Vi(e) {
              return _o(mo(e, void 0, No), e + '');
            }
            function Fi(e) {
              return dn(e, ws, eo);
            }
            function Wi(e) {
              return dn(e, _s, to);
            }
            var Yi = gr
              ? function (e) {
                  return gr.get(e);
                }
              : Zs;
            function Gi(e) {
              for (
                var t = e.name + '',
                  r = vr[t],
                  n = xe.call(vr, t) ? r.length : 0;
                n--;

              ) {
                var i = r[n],
                  o = i.func;
                if (null == o || o == e) return i.name;
              }
              return t;
            }
            function Ji(e) {
              return (xe.call(kr, 'placeholder') ? kr : e).placeholder;
            }
            function $i() {
              var e = kr.iteratee || Ys;
              return (
                (e = e === Ys ? Sn : e),
                arguments.length ? e(arguments[0], arguments[1]) : e
              );
            }
            function Zi(e, t) {
              var r,
                n,
                i = e.__data__;
              return (
                'string' == (n = typeof (r = t)) ||
                'number' == n ||
                'symbol' == n ||
                'boolean' == n
                  ? '__proto__' !== r
                  : null === r
              )
                ? i['string' == typeof t ? 'string' : 'hash']
                : i.map;
            }
            function Qi(e) {
              for (var t = ws(e), r = t.length; r--; ) {
                var n = t[r],
                  i = e[n];
                t[r] = [n, i, po(i)];
              }
              return t;
            }
            function Xi(e, t) {
              var r = (function (e, t) {
                return null == e ? void 0 : e[t];
              })(e, t);
              return En(r) ? r : void 0;
            }
            var eo = er
                ? function (e) {
                    return null == e
                      ? []
                      : ((e = me(e)),
                        ct(er(e), function (t) {
                          return Ge.call(e, t);
                        }));
                  }
                : iu,
              to = er
                ? function (e) {
                    for (var t = []; e; ) pt(t, eo(e)), (e = Fe(e));
                    return t;
                  }
                : iu,
              ro = pn;
            function no(e, t, r) {
              for (var n = -1, i = (t = si(t, e)).length, o = !1; ++n < i; ) {
                var a = Ao(t[n]);
                if (!(o = null != e && r(e, a))) break;
                e = e[a];
              }
              return o || ++n != i
                ? o
                : !!(i = null == e ? 0 : e.length) &&
                    Ka(i) &&
                    ao(a, i) &&
                    (ja(e) || Oa(e));
            }
            function io(e) {
              return 'function' != typeof e.constructor || lo(e)
                ? {}
                : zr(Fe(e));
            }
            function oo(e) {
              return ja(e) || Oa(e) || !!(Ze && e && e[Ze]);
            }
            function ao(e, t) {
              var r = typeof e;
              return (
                !!(t = null == t ? 9007199254740991 : t) &&
                ('number' == r || ('symbol' != r && se.test(e))) &&
                e > -1 &&
                e % 1 == 0 &&
                e < t
              );
            }
            function so(e, t, r) {
              if (!Ha(r)) return !1;
              var n = typeof t;
              return (
                !!('number' == n
                  ? La(r) && ao(t, r.length)
                  : 'string' == n && t in r) && Ma(r[t], e)
              );
            }
            function uo(e, t) {
              if (ja(e)) return !1;
              var r = typeof e;
              return (
                !(
                  'number' != r &&
                  'symbol' != r &&
                  'boolean' != r &&
                  null != e &&
                  !Za(e)
                ) ||
                H.test(e) ||
                !K.test(e) ||
                (null != t && e in me(t))
              );
            }
            function co(e) {
              var t = Gi(e),
                r = kr[t];
              if ('function' != typeof r || !(t in Pr.prototype)) return !1;
              if (e === r) return !0;
              var n = Yi(r);
              return !!n && e === n[0];
            }
            ((lr && ro(new lr(new ArrayBuffer(1))) != S) ||
              (dr && ro(new dr()) != h) ||
              (pr && '[object Promise]' != ro(pr.resolve())) ||
              (hr && ro(new hr()) != v) ||
              (mr && ro(new mr()) != _)) &&
              (ro = function (e) {
                var t = pn(e),
                  r = t == b ? e.constructor : void 0,
                  n = r ? ko(r) : '';
                if (n)
                  switch (n) {
                    case yr:
                      return S;
                    case wr:
                      return h;
                    case _r:
                      return '[object Promise]';
                    case Er:
                      return v;
                    case Sr:
                      return _;
                  }
                return t;
              });
            var fo = Ee ? Ua : ou;
            function lo(e) {
              var t = e && e.constructor;
              return e === (('function' == typeof t && t.prototype) || _e);
            }
            function po(e) {
              return e == e && !Ha(e);
            }
            function ho(e, t) {
              return function (r) {
                return null != r && r[e] === t && (void 0 !== t || e in me(r));
              };
            }
            function mo(e, t, r) {
              return (
                (t = or(void 0 === t ? e.length - 1 : t, 0)),
                function () {
                  for (
                    var i = arguments,
                      o = -1,
                      a = or(i.length - t, 0),
                      s = n(a);
                    ++o < a;

                  )
                    s[o] = i[t + o];
                  o = -1;
                  for (var u = n(t + 1); ++o < t; ) u[o] = i[o];
                  return (u[t] = r(s)), it(e, this, u);
                }
              );
            }
            function bo(e, t) {
              return t.length < 2 ? e : ln(e, Fn(t, 0, -1));
            }
            function go(e, t) {
              for (var r = e.length, n = ar(t.length, r), i = gi(e); n--; ) {
                var o = t[n];
                e[n] = ao(o, r) ? i[o] : void 0;
              }
              return e;
            }
            function vo(e, t) {
              if (
                ('constructor' !== t || 'function' != typeof e[t]) &&
                '__proto__' != t
              )
                return e[t];
            }
            var yo = So(Kn),
              wo =
                Zt ||
                function (e, t) {
                  return We.setTimeout(e, t);
                },
              _o = So(Hn);
            function Eo(e, t, r) {
              var n = t + '';
              return _o(
                e,
                (function (e, t) {
                  var r = t.length;
                  if (!r) return e;
                  var n = r - 1;
                  return (
                    (t[n] = (r > 1 ? '& ' : '') + t[n]),
                    (t = t.join(r > 2 ? ', ' : ' ')),
                    e.replace($, '{\n/* [wrapped with ' + t + '] */\n')
                  );
                })(
                  n,
                  (function (e, t) {
                    return (
                      at(a, function (r) {
                        var n = '_.' + r[0];
                        t & r[1] && !ft(e, n) && e.push(n);
                      }),
                      e.sort()
                    );
                  })(
                    (function (e) {
                      var t = e.match(Z);
                      return t ? t[1].split(Q) : [];
                    })(n),
                    r
                  )
                )
              );
            }
            function So(e) {
              var t = 0,
                r = 0;
              return function () {
                var n = sr(),
                  i = 16 - (n - r);
                if (((r = n), i > 0)) {
                  if (++t >= 800) return arguments[0];
                } else t = 0;
                return e.apply(void 0, arguments);
              };
            }
            function xo(e, t) {
              var r = -1,
                n = e.length,
                i = n - 1;
              for (t = void 0 === t ? n : t; ++r < t; ) {
                var o = qn(r, i),
                  a = e[o];
                (e[o] = e[r]), (e[r] = a);
              }
              return (e.length = t), e;
            }
            var Io = (function (e) {
              var t = Sa(e, function (e) {
                  return 500 === r.size && r.clear(), e;
                }),
                r = t.cache;
              return t;
            })(function (e) {
              var t = [];
              return (
                46 === e.charCodeAt(0) && t.push(''),
                e.replace(V, function (e, r, n, i) {
                  t.push(n ? i.replace(ee, '$1') : r || e);
                }),
                t
              );
            });
            function Ao(e) {
              if ('string' == typeof e || Za(e)) return e;
              var t = e + '';
              return '0' == t && 1 / e == -1 / 0 ? '-0' : t;
            }
            function ko(e) {
              if (null != e) {
                try {
                  return Se.call(e);
                } catch (e) {}
                try {
                  return e + '';
                } catch (e) {}
              }
              return '';
            }
            function zo(e) {
              if (e instanceof Pr) return e.clone();
              var t = new Tr(e.__wrapped__, e.__chain__);
              return (
                (t.__actions__ = gi(e.__actions__)),
                (t.__index__ = e.__index__),
                (t.__values__ = e.__values__),
                t
              );
            }
            var Mo = Bn(function (e, t) {
                return qa(e) ? Qr(e, on(t, 1, qa, !0)) : [];
              }),
              To = Bn(function (e, t) {
                var r = Co(t);
                return (
                  qa(r) && (r = void 0),
                  qa(e) ? Qr(e, on(t, 1, qa, !0), $i(r, 2)) : []
                );
              }),
              Po = Bn(function (e, t) {
                var r = Co(t);
                return (
                  qa(r) && (r = void 0),
                  qa(e) ? Qr(e, on(t, 1, qa, !0), void 0, r) : []
                );
              });
            function Oo(e, t, r) {
              var n = null == e ? 0 : e.length;
              if (!n) return -1;
              var i = null == r ? 0 : ns(r);
              return i < 0 && (i = or(n + i, 0)), yt(e, $i(t, 3), i);
            }
            function jo(e, t, r) {
              var n = null == e ? 0 : e.length;
              if (!n) return -1;
              var i = n - 1;
              return (
                void 0 !== r &&
                  ((i = ns(r)), (i = r < 0 ? or(n + i, 0) : ar(i, n - 1))),
                yt(e, $i(t, 3), i, !0)
              );
            }
            function No(e) {
              return (null == e ? 0 : e.length) ? on(e, 1) : [];
            }
            function Lo(e) {
              return e && e.length ? e[0] : void 0;
            }
            var qo = Bn(function (e) {
                var t = dt(e, oi);
                return t.length && t[0] === e[0] ? gn(t) : [];
              }),
              Ro = Bn(function (e) {
                var t = Co(e),
                  r = dt(e, oi);
                return (
                  t === Co(r) ? (t = void 0) : r.pop(),
                  r.length && r[0] === e[0] ? gn(r, $i(t, 2)) : []
                );
              }),
              Bo = Bn(function (e) {
                var t = Co(e),
                  r = dt(e, oi);
                return (
                  (t = 'function' == typeof t ? t : void 0) && r.pop(),
                  r.length && r[0] === e[0] ? gn(r, void 0, t) : []
                );
              });
            function Co(e) {
              var t = null == e ? 0 : e.length;
              return t ? e[t - 1] : void 0;
            }
            var Uo = Bn(Do);
            function Do(e, t) {
              return e && e.length && t && t.length ? Nn(e, t) : e;
            }
            var Ko = Vi(function (e, t) {
              var r = null == e ? 0 : e.length,
                n = Yr(e, t);
              return (
                Ln(
                  e,
                  dt(t, function (e) {
                    return ao(e, r) ? +e : e;
                  }).sort(hi)
                ),
                n
              );
            });
            function Ho(e) {
              return null == e ? e : fr.call(e);
            }
            var Vo = Bn(function (e) {
                return Qn(on(e, 1, qa, !0));
              }),
              Fo = Bn(function (e) {
                var t = Co(e);
                return qa(t) && (t = void 0), Qn(on(e, 1, qa, !0), $i(t, 2));
              }),
              Wo = Bn(function (e) {
                var t = Co(e);
                return (
                  (t = 'function' == typeof t ? t : void 0),
                  Qn(on(e, 1, qa, !0), void 0, t)
                );
              });
            function Yo(e) {
              if (!e || !e.length) return [];
              var t = 0;
              return (
                (e = ct(e, function (e) {
                  if (qa(e)) return (t = or(e.length, t)), !0;
                })),
                zt(t, function (t) {
                  return dt(e, xt(t));
                })
              );
            }
            function Go(e, t) {
              if (!e || !e.length) return [];
              var r = Yo(e);
              return null == t
                ? r
                : dt(r, function (e) {
                    return it(t, void 0, e);
                  });
            }
            var Jo = Bn(function (e, t) {
                return qa(e) ? Qr(e, t) : [];
              }),
              $o = Bn(function (e) {
                return ni(ct(e, qa));
              }),
              Zo = Bn(function (e) {
                var t = Co(e);
                return qa(t) && (t = void 0), ni(ct(e, qa), $i(t, 2));
              }),
              Qo = Bn(function (e) {
                var t = Co(e);
                return (
                  (t = 'function' == typeof t ? t : void 0),
                  ni(ct(e, qa), void 0, t)
                );
              }),
              Xo = Bn(Yo);
            var ea = Bn(function (e) {
              var t = e.length,
                r = t > 1 ? e[t - 1] : void 0;
              return (
                (r = 'function' == typeof r ? (e.pop(), r) : void 0), Go(e, r)
              );
            });
            function ta(e) {
              var t = kr(e);
              return (t.__chain__ = !0), t;
            }
            function ra(e, t) {
              return t(e);
            }
            var na = Vi(function (e) {
              var t = e.length,
                r = t ? e[0] : 0,
                n = this.__wrapped__,
                i = function (t) {
                  return Yr(t, e);
                };
              return !(t > 1 || this.__actions__.length) &&
                n instanceof Pr &&
                ao(r)
                ? ((n = n.slice(r, +r + (t ? 1 : 0))).__actions__.push({
                    func: ra,
                    args: [i],
                    thisArg: void 0,
                  }),
                  new Tr(n, this.__chain__).thru(function (e) {
                    return t && !e.length && e.push(void 0), e;
                  }))
                : this.thru(i);
            });
            var ia = yi(function (e, t, r) {
              xe.call(e, r) ? ++e[r] : Wr(e, r, 1);
            });
            var oa = Ai(Oo),
              aa = Ai(jo);
            function sa(e, t) {
              return (ja(e) ? at : Xr)(e, $i(t, 3));
            }
            function ua(e, t) {
              return (ja(e) ? st : en)(e, $i(t, 3));
            }
            var ca = yi(function (e, t, r) {
              xe.call(e, r) ? e[r].push(t) : Wr(e, r, [t]);
            });
            var fa = Bn(function (e, t, r) {
                var i = -1,
                  o = 'function' == typeof t,
                  a = La(e) ? n(e.length) : [];
                return (
                  Xr(e, function (e) {
                    a[++i] = o ? it(t, e, r) : vn(e, t, r);
                  }),
                  a
                );
              }),
              la = yi(function (e, t, r) {
                Wr(e, r, t);
              });
            function da(e, t) {
              return (ja(e) ? dt : kn)(e, $i(t, 3));
            }
            var pa = yi(
              function (e, t, r) {
                e[r ? 0 : 1].push(t);
              },
              function () {
                return [[], []];
              }
            );
            var ha = Bn(function (e, t) {
                if (null == e) return [];
                var r = t.length;
                return (
                  r > 1 && so(e, t[0], t[1])
                    ? (t = [])
                    : r > 2 && so(t[0], t[1], t[2]) && (t = [t[0]]),
                  On(e, on(t, 1), [])
                );
              }),
              ma =
                $t ||
                function () {
                  return We.Date.now();
                };
            function ba(e, t, r) {
              return (
                (t = r ? void 0 : t),
                Ci(
                  e,
                  128,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  (t = e && null == t ? e.length : t)
                )
              );
            }
            function ga(e, t) {
              var r;
              if ('function' != typeof t) throw new ve(i);
              return (
                (e = ns(e)),
                function () {
                  return (
                    --e > 0 && (r = t.apply(this, arguments)),
                    e <= 1 && (t = void 0),
                    r
                  );
                }
              );
            }
            var va = Bn(function (e, t, r) {
                var n = 1;
                if (r.length) {
                  var i = Dt(r, Ji(va));
                  n |= 32;
                }
                return Ci(e, n, t, r, i);
              }),
              ya = Bn(function (e, t, r) {
                var n = 3;
                if (r.length) {
                  var i = Dt(r, Ji(ya));
                  n |= 32;
                }
                return Ci(t, n, e, r, i);
              });
            function wa(e, t, r) {
              var n,
                o,
                a,
                s,
                u,
                c,
                f = 0,
                l = !1,
                d = !1,
                p = !0;
              if ('function' != typeof e) throw new ve(i);
              function h(t) {
                var r = n,
                  i = o;
                return (n = o = void 0), (f = t), (s = e.apply(i, r));
              }
              function m(e) {
                return (f = e), (u = wo(g, t)), l ? h(e) : s;
              }
              function b(e) {
                var r = e - c;
                return void 0 === c || r >= t || r < 0 || (d && e - f >= a);
              }
              function g() {
                var e = ma();
                if (b(e)) return v(e);
                u = wo(
                  g,
                  (function (e) {
                    var r = t - (e - c);
                    return d ? ar(r, a - (e - f)) : r;
                  })(e)
                );
              }
              function v(e) {
                return (u = void 0), p && n ? h(e) : ((n = o = void 0), s);
              }
              function y() {
                var e = ma(),
                  r = b(e);
                if (((n = arguments), (o = this), (c = e), r)) {
                  if (void 0 === u) return m(c);
                  if (d) return fi(u), (u = wo(g, t)), h(c);
                }
                return void 0 === u && (u = wo(g, t)), s;
              }
              return (
                (t = os(t) || 0),
                Ha(r) &&
                  ((l = !!r.leading),
                  (a = (d = 'maxWait' in r) ? or(os(r.maxWait) || 0, t) : a),
                  (p = 'trailing' in r ? !!r.trailing : p)),
                (y.cancel = function () {
                  void 0 !== u && fi(u), (f = 0), (n = c = o = u = void 0);
                }),
                (y.flush = function () {
                  return void 0 === u ? s : v(ma());
                }),
                y
              );
            }
            var _a = Bn(function (e, t) {
                return Zr(e, 1, t);
              }),
              Ea = Bn(function (e, t, r) {
                return Zr(e, os(t) || 0, r);
              });
            function Sa(e, t) {
              if (
                'function' != typeof e ||
                (null != t && 'function' != typeof t)
              )
                throw new ve(i);
              var r = function () {
                var n = arguments,
                  i = t ? t.apply(this, n) : n[0],
                  o = r.cache;
                if (o.has(i)) return o.get(i);
                var a = e.apply(this, n);
                return (r.cache = o.set(i, a) || o), a;
              };
              return (r.cache = new (Sa.Cache || Nr)()), r;
            }
            function xa(e) {
              if ('function' != typeof e) throw new ve(i);
              return function () {
                var t = arguments;
                switch (t.length) {
                  case 0:
                    return !e.call(this);
                  case 1:
                    return !e.call(this, t[0]);
                  case 2:
                    return !e.call(this, t[0], t[1]);
                  case 3:
                    return !e.call(this, t[0], t[1], t[2]);
                }
                return !e.apply(this, t);
              };
            }
            Sa.Cache = Nr;
            var Ia = ui(function (e, t) {
                var r = (t =
                  1 == t.length && ja(t[0])
                    ? dt(t[0], Mt($i()))
                    : dt(on(t, 1), Mt($i()))).length;
                return Bn(function (n) {
                  for (var i = -1, o = ar(n.length, r); ++i < o; )
                    n[i] = t[i].call(this, n[i]);
                  return it(e, this, n);
                });
              }),
              Aa = Bn(function (e, t) {
                return Ci(e, 32, void 0, t, Dt(t, Ji(Aa)));
              }),
              ka = Bn(function (e, t) {
                return Ci(e, 64, void 0, t, Dt(t, Ji(ka)));
              }),
              za = Vi(function (e, t) {
                return Ci(e, 256, void 0, void 0, void 0, t);
              });
            function Ma(e, t) {
              return e === t || (e != e && t != t);
            }
            var Ta = Ni(hn),
              Pa = Ni(function (e, t) {
                return e >= t;
              }),
              Oa = yn(
                (function () {
                  return arguments;
                })()
              )
                ? yn
                : function (e) {
                    return (
                      Va(e) && xe.call(e, 'callee') && !Ge.call(e, 'callee')
                    );
                  },
              ja = n.isArray,
              Na = Qe
                ? Mt(Qe)
                : function (e) {
                    return Va(e) && pn(e) == E;
                  };
            function La(e) {
              return null != e && Ka(e.length) && !Ua(e);
            }
            function qa(e) {
              return Va(e) && La(e);
            }
            var Ra = tr || ou,
              Ba = Xe
                ? Mt(Xe)
                : function (e) {
                    return Va(e) && pn(e) == f;
                  };
            function Ca(e) {
              if (!Va(e)) return !1;
              var t = pn(e);
              return (
                t == l ||
                '[object DOMException]' == t ||
                ('string' == typeof e.message &&
                  'string' == typeof e.name &&
                  !Ya(e))
              );
            }
            function Ua(e) {
              if (!Ha(e)) return !1;
              var t = pn(e);
              return (
                t == d ||
                t == p ||
                '[object AsyncFunction]' == t ||
                '[object Proxy]' == t
              );
            }
            function Da(e) {
              return 'number' == typeof e && e == ns(e);
            }
            function Ka(e) {
              return (
                'number' == typeof e &&
                e > -1 &&
                e % 1 == 0 &&
                e <= 9007199254740991
              );
            }
            function Ha(e) {
              var t = typeof e;
              return null != e && ('object' == t || 'function' == t);
            }
            function Va(e) {
              return null != e && 'object' == typeof e;
            }
            var Fa = et
              ? Mt(et)
              : function (e) {
                  return Va(e) && ro(e) == h;
                };
            function Wa(e) {
              return 'number' == typeof e || (Va(e) && pn(e) == m);
            }
            function Ya(e) {
              if (!Va(e) || pn(e) != b) return !1;
              var t = Fe(e);
              if (null === t) return !0;
              var r = xe.call(t, 'constructor') && t.constructor;
              return (
                'function' == typeof r && r instanceof r && Se.call(r) == ze
              );
            }
            var Ga = tt
              ? Mt(tt)
              : function (e) {
                  return Va(e) && pn(e) == g;
                };
            var Ja = rt
              ? Mt(rt)
              : function (e) {
                  return Va(e) && ro(e) == v;
                };
            function $a(e) {
              return 'string' == typeof e || (!ja(e) && Va(e) && pn(e) == y);
            }
            function Za(e) {
              return 'symbol' == typeof e || (Va(e) && pn(e) == w);
            }
            var Qa = nt
              ? Mt(nt)
              : function (e) {
                  return Va(e) && Ka(e.length) && !!Ce[pn(e)];
                };
            var Xa = Ni(An),
              es = Ni(function (e, t) {
                return e <= t;
              });
            function ts(e) {
              if (!e) return [];
              if (La(e)) return $a(e) ? Ft(e) : gi(e);
              if (gt && e[gt])
                return (function (e) {
                  for (var t, r = []; !(t = e.next()).done; ) r.push(t.value);
                  return r;
                })(e[gt]());
              var t = ro(e);
              return (t == h ? Ct : t == v ? Kt : Ms)(e);
            }
            function rs(e) {
              return e
                ? (e = os(e)) === 1 / 0 || e === -1 / 0
                  ? 17976931348623157e292 * (e < 0 ? -1 : 1)
                  : e == e
                  ? e
                  : 0
                : 0 === e
                ? e
                : 0;
            }
            function ns(e) {
              var t = rs(e),
                r = t % 1;
              return t == t ? (r ? t - r : t) : 0;
            }
            function is(e) {
              return e ? Gr(ns(e), 0, 4294967295) : 0;
            }
            function os(e) {
              if ('number' == typeof e) return e;
              if (Za(e)) return NaN;
              if (Ha(e)) {
                var t = 'function' == typeof e.valueOf ? e.valueOf() : e;
                e = Ha(t) ? t + '' : t;
              }
              if ('string' != typeof e) return 0 === e ? e : +e;
              e = e.replace(Y, '');
              var r = ie.test(e);
              return r || ae.test(e)
                ? He(e.slice(2), r ? 2 : 8)
                : ne.test(e)
                ? NaN
                : +e;
            }
            function as(e) {
              return vi(e, _s(e));
            }
            function ss(e) {
              return null == e ? '' : Zn(e);
            }
            var us = wi(function (e, t) {
                if (lo(t) || La(t)) vi(t, ws(t), e);
                else for (var r in t) xe.call(t, r) && Kr(e, r, t[r]);
              }),
              cs = wi(function (e, t) {
                vi(t, _s(t), e);
              }),
              fs = wi(function (e, t, r, n) {
                vi(t, _s(t), e, n);
              }),
              ls = wi(function (e, t, r, n) {
                vi(t, ws(t), e, n);
              }),
              ds = Vi(Yr);
            var ps = Bn(function (e, t) {
                e = me(e);
                var r = -1,
                  n = t.length,
                  i = n > 2 ? t[2] : void 0;
                for (i && so(t[0], t[1], i) && (n = 1); ++r < n; )
                  for (
                    var o = t[r], a = _s(o), s = -1, u = a.length;
                    ++s < u;

                  ) {
                    var c = a[s],
                      f = e[c];
                    (void 0 === f || (Ma(f, _e[c]) && !xe.call(e, c))) &&
                      (e[c] = o[c]);
                  }
                return e;
              }),
              hs = Bn(function (e) {
                return e.push(void 0, Di), it(Ss, void 0, e);
              });
            function ms(e, t, r) {
              var n = null == e ? void 0 : ln(e, t);
              return void 0 === n ? r : n;
            }
            function bs(e, t) {
              return null != e && no(e, t, bn);
            }
            var gs = Mi(function (e, t, r) {
                null != t &&
                  'function' != typeof t.toString &&
                  (t = ke.call(t)),
                  (e[t] = r);
              }, Hs(Ws)),
              vs = Mi(function (e, t, r) {
                null != t &&
                  'function' != typeof t.toString &&
                  (t = ke.call(t)),
                  xe.call(e, t) ? e[t].push(r) : (e[t] = [r]);
              }, $i),
              ys = Bn(vn);
            function ws(e) {
              return La(e) ? Rr(e) : xn(e);
            }
            function _s(e) {
              return La(e) ? Rr(e, !0) : In(e);
            }
            var Es = wi(function (e, t, r) {
                Tn(e, t, r);
              }),
              Ss = wi(function (e, t, r, n) {
                Tn(e, t, r, n);
              }),
              xs = Vi(function (e, t) {
                var r = {};
                if (null == e) return r;
                var n = !1;
                (t = dt(t, function (t) {
                  return (t = si(t, e)), n || (n = t.length > 1), t;
                })),
                  vi(e, Wi(e), r),
                  n && (r = Jr(r, 7, Ki));
                for (var i = t.length; i--; ) Xn(r, t[i]);
                return r;
              });
            var Is = Vi(function (e, t) {
              return null == e
                ? {}
                : (function (e, t) {
                    return jn(e, t, function (t, r) {
                      return bs(e, r);
                    });
                  })(e, t);
            });
            function As(e, t) {
              if (null == e) return {};
              var r = dt(Wi(e), function (e) {
                return [e];
              });
              return (
                (t = $i(t)),
                jn(e, r, function (e, r) {
                  return t(e, r[0]);
                })
              );
            }
            var ks = Bi(ws),
              zs = Bi(_s);
            function Ms(e) {
              return null == e ? [] : Tt(e, ws(e));
            }
            var Ts = xi(function (e, t, r) {
              return (t = t.toLowerCase()), e + (r ? Ps(t) : t);
            });
            function Ps(e) {
              return Cs(ss(e).toLowerCase());
            }
            function Os(e) {
              return (e = ss(e)) && e.replace(ue, Lt).replace(Oe, '');
            }
            var js = xi(function (e, t, r) {
                return e + (r ? '-' : '') + t.toLowerCase();
              }),
              Ns = xi(function (e, t, r) {
                return e + (r ? ' ' : '') + t.toLowerCase();
              }),
              Ls = Si('toLowerCase');
            var qs = xi(function (e, t, r) {
              return e + (r ? '_' : '') + t.toLowerCase();
            });
            var Rs = xi(function (e, t, r) {
              return e + (r ? ' ' : '') + Cs(t);
            });
            var Bs = xi(function (e, t, r) {
                return e + (r ? ' ' : '') + t.toUpperCase();
              }),
              Cs = Si('toUpperCase');
            function Us(e, t, r) {
              return (
                (e = ss(e)),
                void 0 === (t = r ? void 0 : t)
                  ? (function (e) {
                      return qe.test(e);
                    })(e)
                    ? (function (e) {
                        return e.match(Ne) || [];
                      })(e)
                    : (function (e) {
                        return e.match(X) || [];
                      })(e)
                  : e.match(t) || []
              );
            }
            var Ds = Bn(function (e, t) {
                try {
                  return it(e, void 0, t);
                } catch (e) {
                  return Ca(e) ? e : new de(e);
                }
              }),
              Ks = Vi(function (e, t) {
                return (
                  at(t, function (t) {
                    (t = Ao(t)), Wr(e, t, va(e[t], e));
                  }),
                  e
                );
              });
            function Hs(e) {
              return function () {
                return e;
              };
            }
            var Vs = ki(),
              Fs = ki(!0);
            function Ws(e) {
              return e;
            }
            function Ys(e) {
              return Sn('function' == typeof e ? e : Jr(e, 1));
            }
            var Gs = Bn(function (e, t) {
                return function (r) {
                  return vn(r, e, t);
                };
              }),
              Js = Bn(function (e, t) {
                return function (r) {
                  return vn(e, r, t);
                };
              });
            function $s(e, t, r) {
              var n = ws(t),
                i = fn(t, n);
              null != r ||
                (Ha(t) && (i.length || !n.length)) ||
                ((r = t), (t = e), (e = this), (i = fn(t, ws(t))));
              var o = !(Ha(r) && 'chain' in r && !r.chain),
                a = Ua(e);
              return (
                at(i, function (r) {
                  var n = t[r];
                  (e[r] = n),
                    a &&
                      (e.prototype[r] = function () {
                        var t = this.__chain__;
                        if (o || t) {
                          var r = e(this.__wrapped__),
                            i = (r.__actions__ = gi(this.__actions__));
                          return (
                            i.push({ func: n, args: arguments, thisArg: e }),
                            (r.__chain__ = t),
                            r
                          );
                        }
                        return n.apply(e, pt([this.value()], arguments));
                      });
                }),
                e
              );
            }
            function Zs() {}
            var Qs = Pi(dt),
              Xs = Pi(ut),
              eu = Pi(bt);
            function tu(e) {
              return uo(e)
                ? xt(Ao(e))
                : (function (e) {
                    return function (t) {
                      return ln(t, e);
                    };
                  })(e);
            }
            var ru = ji(),
              nu = ji(!0);
            function iu() {
              return [];
            }
            function ou() {
              return !1;
            }
            var au = Ti(function (e, t) {
                return e + t;
              }, 0),
              su = qi('ceil'),
              uu = Ti(function (e, t) {
                return e / t;
              }, 1),
              cu = qi('floor');
            var fu,
              lu = Ti(function (e, t) {
                return e * t;
              }, 1),
              du = qi('round'),
              pu = Ti(function (e, t) {
                return e - t;
              }, 0);
            return (
              (kr.after = function (e, t) {
                if ('function' != typeof t) throw new ve(i);
                return (
                  (e = ns(e)),
                  function () {
                    if (--e < 1) return t.apply(this, arguments);
                  }
                );
              }),
              (kr.ary = ba),
              (kr.assign = us),
              (kr.assignIn = cs),
              (kr.assignInWith = fs),
              (kr.assignWith = ls),
              (kr.at = ds),
              (kr.before = ga),
              (kr.bind = va),
              (kr.bindAll = Ks),
              (kr.bindKey = ya),
              (kr.castArray = function () {
                if (!arguments.length) return [];
                var e = arguments[0];
                return ja(e) ? e : [e];
              }),
              (kr.chain = ta),
              (kr.chunk = function (e, t, r) {
                t = (r ? so(e, t, r) : void 0 === t) ? 1 : or(ns(t), 0);
                var i = null == e ? 0 : e.length;
                if (!i || t < 1) return [];
                for (var o = 0, a = 0, s = n(Qt(i / t)); o < i; )
                  s[a++] = Fn(e, o, (o += t));
                return s;
              }),
              (kr.compact = function (e) {
                for (
                  var t = -1, r = null == e ? 0 : e.length, n = 0, i = [];
                  ++t < r;

                ) {
                  var o = e[t];
                  o && (i[n++] = o);
                }
                return i;
              }),
              (kr.concat = function () {
                var e = arguments.length;
                if (!e) return [];
                for (var t = n(e - 1), r = arguments[0], i = e; i--; )
                  t[i - 1] = arguments[i];
                return pt(ja(r) ? gi(r) : [r], on(t, 1));
              }),
              (kr.cond = function (e) {
                var t = null == e ? 0 : e.length,
                  r = $i();
                return (
                  (e = t
                    ? dt(e, function (e) {
                        if ('function' != typeof e[1]) throw new ve(i);
                        return [r(e[0]), e[1]];
                      })
                    : []),
                  Bn(function (r) {
                    for (var n = -1; ++n < t; ) {
                      var i = e[n];
                      if (it(i[0], this, r)) return it(i[1], this, r);
                    }
                  })
                );
              }),
              (kr.conforms = function (e) {
                return (function (e) {
                  var t = ws(e);
                  return function (r) {
                    return $r(r, e, t);
                  };
                })(Jr(e, 1));
              }),
              (kr.constant = Hs),
              (kr.countBy = ia),
              (kr.create = function (e, t) {
                var r = zr(e);
                return null == t ? r : Fr(r, t);
              }),
              (kr.curry = function e(t, r, n) {
                var i = Ci(
                  t,
                  8,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  (r = n ? void 0 : r)
                );
                return (i.placeholder = e.placeholder), i;
              }),
              (kr.curryRight = function e(t, r, n) {
                var i = Ci(
                  t,
                  16,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  (r = n ? void 0 : r)
                );
                return (i.placeholder = e.placeholder), i;
              }),
              (kr.debounce = wa),
              (kr.defaults = ps),
              (kr.defaultsDeep = hs),
              (kr.defer = _a),
              (kr.delay = Ea),
              (kr.difference = Mo),
              (kr.differenceBy = To),
              (kr.differenceWith = Po),
              (kr.drop = function (e, t, r) {
                var n = null == e ? 0 : e.length;
                return n
                  ? Fn(e, (t = r || void 0 === t ? 1 : ns(t)) < 0 ? 0 : t, n)
                  : [];
              }),
              (kr.dropRight = function (e, t, r) {
                var n = null == e ? 0 : e.length;
                return n
                  ? Fn(
                      e,
                      0,
                      (t = n - (t = r || void 0 === t ? 1 : ns(t))) < 0 ? 0 : t
                    )
                  : [];
              }),
              (kr.dropRightWhile = function (e, t) {
                return e && e.length ? ti(e, $i(t, 3), !0, !0) : [];
              }),
              (kr.dropWhile = function (e, t) {
                return e && e.length ? ti(e, $i(t, 3), !0) : [];
              }),
              (kr.fill = function (e, t, r, n) {
                var i = null == e ? 0 : e.length;
                return i
                  ? (r &&
                      'number' != typeof r &&
                      so(e, t, r) &&
                      ((r = 0), (n = i)),
                    (function (e, t, r, n) {
                      var i = e.length;
                      for (
                        (r = ns(r)) < 0 && (r = -r > i ? 0 : i + r),
                          (n = void 0 === n || n > i ? i : ns(n)) < 0 &&
                            (n += i),
                          n = r > n ? 0 : is(n);
                        r < n;

                      )
                        e[r++] = t;
                      return e;
                    })(e, t, r, n))
                  : [];
              }),
              (kr.filter = function (e, t) {
                return (ja(e) ? ct : nn)(e, $i(t, 3));
              }),
              (kr.flatMap = function (e, t) {
                return on(da(e, t), 1);
              }),
              (kr.flatMapDeep = function (e, t) {
                return on(da(e, t), 1 / 0);
              }),
              (kr.flatMapDepth = function (e, t, r) {
                return (r = void 0 === r ? 1 : ns(r)), on(da(e, t), r);
              }),
              (kr.flatten = No),
              (kr.flattenDeep = function (e) {
                return (null == e ? 0 : e.length) ? on(e, 1 / 0) : [];
              }),
              (kr.flattenDepth = function (e, t) {
                return (null == e ? 0 : e.length)
                  ? on(e, (t = void 0 === t ? 1 : ns(t)))
                  : [];
              }),
              (kr.flip = function (e) {
                return Ci(e, 512);
              }),
              (kr.flow = Vs),
              (kr.flowRight = Fs),
              (kr.fromPairs = function (e) {
                for (
                  var t = -1, r = null == e ? 0 : e.length, n = {};
                  ++t < r;

                ) {
                  var i = e[t];
                  n[i[0]] = i[1];
                }
                return n;
              }),
              (kr.functions = function (e) {
                return null == e ? [] : fn(e, ws(e));
              }),
              (kr.functionsIn = function (e) {
                return null == e ? [] : fn(e, _s(e));
              }),
              (kr.groupBy = ca),
              (kr.initial = function (e) {
                return (null == e ? 0 : e.length) ? Fn(e, 0, -1) : [];
              }),
              (kr.intersection = qo),
              (kr.intersectionBy = Ro),
              (kr.intersectionWith = Bo),
              (kr.invert = gs),
              (kr.invertBy = vs),
              (kr.invokeMap = fa),
              (kr.iteratee = Ys),
              (kr.keyBy = la),
              (kr.keys = ws),
              (kr.keysIn = _s),
              (kr.map = da),
              (kr.mapKeys = function (e, t) {
                var r = {};
                return (
                  (t = $i(t, 3)),
                  un(e, function (e, n, i) {
                    Wr(r, t(e, n, i), e);
                  }),
                  r
                );
              }),
              (kr.mapValues = function (e, t) {
                var r = {};
                return (
                  (t = $i(t, 3)),
                  un(e, function (e, n, i) {
                    Wr(r, n, t(e, n, i));
                  }),
                  r
                );
              }),
              (kr.matches = function (e) {
                return zn(Jr(e, 1));
              }),
              (kr.matchesProperty = function (e, t) {
                return Mn(e, Jr(t, 1));
              }),
              (kr.memoize = Sa),
              (kr.merge = Es),
              (kr.mergeWith = Ss),
              (kr.method = Gs),
              (kr.methodOf = Js),
              (kr.mixin = $s),
              (kr.negate = xa),
              (kr.nthArg = function (e) {
                return (
                  (e = ns(e)),
                  Bn(function (t) {
                    return Pn(t, e);
                  })
                );
              }),
              (kr.omit = xs),
              (kr.omitBy = function (e, t) {
                return As(e, xa($i(t)));
              }),
              (kr.once = function (e) {
                return ga(2, e);
              }),
              (kr.orderBy = function (e, t, r, n) {
                return null == e
                  ? []
                  : (ja(t) || (t = null == t ? [] : [t]),
                    ja((r = n ? void 0 : r)) || (r = null == r ? [] : [r]),
                    On(e, t, r));
              }),
              (kr.over = Qs),
              (kr.overArgs = Ia),
              (kr.overEvery = Xs),
              (kr.overSome = eu),
              (kr.partial = Aa),
              (kr.partialRight = ka),
              (kr.partition = pa),
              (kr.pick = Is),
              (kr.pickBy = As),
              (kr.property = tu),
              (kr.propertyOf = function (e) {
                return function (t) {
                  return null == e ? void 0 : ln(e, t);
                };
              }),
              (kr.pull = Uo),
              (kr.pullAll = Do),
              (kr.pullAllBy = function (e, t, r) {
                return e && e.length && t && t.length ? Nn(e, t, $i(r, 2)) : e;
              }),
              (kr.pullAllWith = function (e, t, r) {
                return e && e.length && t && t.length ? Nn(e, t, void 0, r) : e;
              }),
              (kr.pullAt = Ko),
              (kr.range = ru),
              (kr.rangeRight = nu),
              (kr.rearg = za),
              (kr.reject = function (e, t) {
                return (ja(e) ? ct : nn)(e, xa($i(t, 3)));
              }),
              (kr.remove = function (e, t) {
                var r = [];
                if (!e || !e.length) return r;
                var n = -1,
                  i = [],
                  o = e.length;
                for (t = $i(t, 3); ++n < o; ) {
                  var a = e[n];
                  t(a, n, e) && (r.push(a), i.push(n));
                }
                return Ln(e, i), r;
              }),
              (kr.rest = function (e, t) {
                if ('function' != typeof e) throw new ve(i);
                return Bn(e, (t = void 0 === t ? t : ns(t)));
              }),
              (kr.reverse = Ho),
              (kr.sampleSize = function (e, t, r) {
                return (
                  (t = (r ? so(e, t, r) : void 0 === t) ? 1 : ns(t)),
                  (ja(e) ? Cr : Un)(e, t)
                );
              }),
              (kr.set = function (e, t, r) {
                return null == e ? e : Dn(e, t, r);
              }),
              (kr.setWith = function (e, t, r, n) {
                return (
                  (n = 'function' == typeof n ? n : void 0),
                  null == e ? e : Dn(e, t, r, n)
                );
              }),
              (kr.shuffle = function (e) {
                return (ja(e) ? Ur : Vn)(e);
              }),
              (kr.slice = function (e, t, r) {
                var n = null == e ? 0 : e.length;
                return n
                  ? (r && 'number' != typeof r && so(e, t, r)
                      ? ((t = 0), (r = n))
                      : ((t = null == t ? 0 : ns(t)),
                        (r = void 0 === r ? n : ns(r))),
                    Fn(e, t, r))
                  : [];
              }),
              (kr.sortBy = ha),
              (kr.sortedUniq = function (e) {
                return e && e.length ? Jn(e) : [];
              }),
              (kr.sortedUniqBy = function (e, t) {
                return e && e.length ? Jn(e, $i(t, 2)) : [];
              }),
              (kr.split = function (e, t, r) {
                return (
                  r && 'number' != typeof r && so(e, t, r) && (t = r = void 0),
                  (r = void 0 === r ? 4294967295 : r >>> 0)
                    ? (e = ss(e)) &&
                      ('string' == typeof t || (null != t && !Ga(t))) &&
                      !(t = Zn(t)) &&
                      Bt(e)
                      ? ci(Ft(e), 0, r)
                      : e.split(t, r)
                    : []
                );
              }),
              (kr.spread = function (e, t) {
                if ('function' != typeof e) throw new ve(i);
                return (
                  (t = null == t ? 0 : or(ns(t), 0)),
                  Bn(function (r) {
                    var n = r[t],
                      i = ci(r, 0, t);
                    return n && pt(i, n), it(e, this, i);
                  })
                );
              }),
              (kr.tail = function (e) {
                var t = null == e ? 0 : e.length;
                return t ? Fn(e, 1, t) : [];
              }),
              (kr.take = function (e, t, r) {
                return e && e.length
                  ? Fn(e, 0, (t = r || void 0 === t ? 1 : ns(t)) < 0 ? 0 : t)
                  : [];
              }),
              (kr.takeRight = function (e, t, r) {
                var n = null == e ? 0 : e.length;
                return n
                  ? Fn(
                      e,
                      (t = n - (t = r || void 0 === t ? 1 : ns(t))) < 0 ? 0 : t,
                      n
                    )
                  : [];
              }),
              (kr.takeRightWhile = function (e, t) {
                return e && e.length ? ti(e, $i(t, 3), !1, !0) : [];
              }),
              (kr.takeWhile = function (e, t) {
                return e && e.length ? ti(e, $i(t, 3)) : [];
              }),
              (kr.tap = function (e, t) {
                return t(e), e;
              }),
              (kr.throttle = function (e, t, r) {
                var n = !0,
                  o = !0;
                if ('function' != typeof e) throw new ve(i);
                return (
                  Ha(r) &&
                    ((n = 'leading' in r ? !!r.leading : n),
                    (o = 'trailing' in r ? !!r.trailing : o)),
                  wa(e, t, { leading: n, maxWait: t, trailing: o })
                );
              }),
              (kr.thru = ra),
              (kr.toArray = ts),
              (kr.toPairs = ks),
              (kr.toPairsIn = zs),
              (kr.toPath = function (e) {
                return ja(e) ? dt(e, Ao) : Za(e) ? [e] : gi(Io(ss(e)));
              }),
              (kr.toPlainObject = as),
              (kr.transform = function (e, t, r) {
                var n = ja(e),
                  i = n || Ra(e) || Qa(e);
                if (((t = $i(t, 4)), null == r)) {
                  var o = e && e.constructor;
                  r = i ? (n ? new o() : []) : Ha(e) && Ua(o) ? zr(Fe(e)) : {};
                }
                return (
                  (i ? at : un)(e, function (e, n, i) {
                    return t(r, e, n, i);
                  }),
                  r
                );
              }),
              (kr.unary = function (e) {
                return ba(e, 1);
              }),
              (kr.union = Vo),
              (kr.unionBy = Fo),
              (kr.unionWith = Wo),
              (kr.uniq = function (e) {
                return e && e.length ? Qn(e) : [];
              }),
              (kr.uniqBy = function (e, t) {
                return e && e.length ? Qn(e, $i(t, 2)) : [];
              }),
              (kr.uniqWith = function (e, t) {
                return (
                  (t = 'function' == typeof t ? t : void 0),
                  e && e.length ? Qn(e, void 0, t) : []
                );
              }),
              (kr.unset = function (e, t) {
                return null == e || Xn(e, t);
              }),
              (kr.unzip = Yo),
              (kr.unzipWith = Go),
              (kr.update = function (e, t, r) {
                return null == e ? e : ei(e, t, ai(r));
              }),
              (kr.updateWith = function (e, t, r, n) {
                return (
                  (n = 'function' == typeof n ? n : void 0),
                  null == e ? e : ei(e, t, ai(r), n)
                );
              }),
              (kr.values = Ms),
              (kr.valuesIn = function (e) {
                return null == e ? [] : Tt(e, _s(e));
              }),
              (kr.without = Jo),
              (kr.words = Us),
              (kr.wrap = function (e, t) {
                return Aa(ai(t), e);
              }),
              (kr.xor = $o),
              (kr.xorBy = Zo),
              (kr.xorWith = Qo),
              (kr.zip = Xo),
              (kr.zipObject = function (e, t) {
                return ii(e || [], t || [], Kr);
              }),
              (kr.zipObjectDeep = function (e, t) {
                return ii(e || [], t || [], Dn);
              }),
              (kr.zipWith = ea),
              (kr.entries = ks),
              (kr.entriesIn = zs),
              (kr.extend = cs),
              (kr.extendWith = fs),
              $s(kr, kr),
              (kr.add = au),
              (kr.attempt = Ds),
              (kr.camelCase = Ts),
              (kr.capitalize = Ps),
              (kr.ceil = su),
              (kr.clamp = function (e, t, r) {
                return (
                  void 0 === r && ((r = t), (t = void 0)),
                  void 0 !== r && (r = (r = os(r)) == r ? r : 0),
                  void 0 !== t && (t = (t = os(t)) == t ? t : 0),
                  Gr(os(e), t, r)
                );
              }),
              (kr.clone = function (e) {
                return Jr(e, 4);
              }),
              (kr.cloneDeep = function (e) {
                return Jr(e, 5);
              }),
              (kr.cloneDeepWith = function (e, t) {
                return Jr(e, 5, (t = 'function' == typeof t ? t : void 0));
              }),
              (kr.cloneWith = function (e, t) {
                return Jr(e, 4, (t = 'function' == typeof t ? t : void 0));
              }),
              (kr.conformsTo = function (e, t) {
                return null == t || $r(e, t, ws(t));
              }),
              (kr.deburr = Os),
              (kr.defaultTo = function (e, t) {
                return null == e || e != e ? t : e;
              }),
              (kr.divide = uu),
              (kr.endsWith = function (e, t, r) {
                (e = ss(e)), (t = Zn(t));
                var n = e.length,
                  i = (r = void 0 === r ? n : Gr(ns(r), 0, n));
                return (r -= t.length) >= 0 && e.slice(r, i) == t;
              }),
              (kr.eq = Ma),
              (kr.escape = function (e) {
                return (e = ss(e)) && B.test(e) ? e.replace(q, qt) : e;
              }),
              (kr.escapeRegExp = function (e) {
                return (e = ss(e)) && W.test(e) ? e.replace(F, '\\$&') : e;
              }),
              (kr.every = function (e, t, r) {
                var n = ja(e) ? ut : tn;
                return r && so(e, t, r) && (t = void 0), n(e, $i(t, 3));
              }),
              (kr.find = oa),
              (kr.findIndex = Oo),
              (kr.findKey = function (e, t) {
                return vt(e, $i(t, 3), un);
              }),
              (kr.findLast = aa),
              (kr.findLastIndex = jo),
              (kr.findLastKey = function (e, t) {
                return vt(e, $i(t, 3), cn);
              }),
              (kr.floor = cu),
              (kr.forEach = sa),
              (kr.forEachRight = ua),
              (kr.forIn = function (e, t) {
                return null == e ? e : an(e, $i(t, 3), _s);
              }),
              (kr.forInRight = function (e, t) {
                return null == e ? e : sn(e, $i(t, 3), _s);
              }),
              (kr.forOwn = function (e, t) {
                return e && un(e, $i(t, 3));
              }),
              (kr.forOwnRight = function (e, t) {
                return e && cn(e, $i(t, 3));
              }),
              (kr.get = ms),
              (kr.gt = Ta),
              (kr.gte = Pa),
              (kr.has = function (e, t) {
                return null != e && no(e, t, mn);
              }),
              (kr.hasIn = bs),
              (kr.head = Lo),
              (kr.identity = Ws),
              (kr.includes = function (e, t, r, n) {
                (e = La(e) ? e : Ms(e)), (r = r && !n ? ns(r) : 0);
                var i = e.length;
                return (
                  r < 0 && (r = or(i + r, 0)),
                  $a(e)
                    ? r <= i && e.indexOf(t, r) > -1
                    : !!i && wt(e, t, r) > -1
                );
              }),
              (kr.indexOf = function (e, t, r) {
                var n = null == e ? 0 : e.length;
                if (!n) return -1;
                var i = null == r ? 0 : ns(r);
                return i < 0 && (i = or(n + i, 0)), wt(e, t, i);
              }),
              (kr.inRange = function (e, t, r) {
                return (
                  (t = rs(t)),
                  void 0 === r ? ((r = t), (t = 0)) : (r = rs(r)),
                  (function (e, t, r) {
                    return e >= ar(t, r) && e < or(t, r);
                  })((e = os(e)), t, r)
                );
              }),
              (kr.invoke = ys),
              (kr.isArguments = Oa),
              (kr.isArray = ja),
              (kr.isArrayBuffer = Na),
              (kr.isArrayLike = La),
              (kr.isArrayLikeObject = qa),
              (kr.isBoolean = function (e) {
                return !0 === e || !1 === e || (Va(e) && pn(e) == c);
              }),
              (kr.isBuffer = Ra),
              (kr.isDate = Ba),
              (kr.isElement = function (e) {
                return Va(e) && 1 === e.nodeType && !Ya(e);
              }),
              (kr.isEmpty = function (e) {
                if (null == e) return !0;
                if (
                  La(e) &&
                  (ja(e) ||
                    'string' == typeof e ||
                    'function' == typeof e.splice ||
                    Ra(e) ||
                    Qa(e) ||
                    Oa(e))
                )
                  return !e.length;
                var t = ro(e);
                if (t == h || t == v) return !e.size;
                if (lo(e)) return !xn(e).length;
                for (var r in e) if (xe.call(e, r)) return !1;
                return !0;
              }),
              (kr.isEqual = function (e, t) {
                return wn(e, t);
              }),
              (kr.isEqualWith = function (e, t, r) {
                var n = (r = 'function' == typeof r ? r : void 0)
                  ? r(e, t)
                  : void 0;
                return void 0 === n ? wn(e, t, void 0, r) : !!n;
              }),
              (kr.isError = Ca),
              (kr.isFinite = function (e) {
                return 'number' == typeof e && rr(e);
              }),
              (kr.isFunction = Ua),
              (kr.isInteger = Da),
              (kr.isLength = Ka),
              (kr.isMap = Fa),
              (kr.isMatch = function (e, t) {
                return e === t || _n(e, t, Qi(t));
              }),
              (kr.isMatchWith = function (e, t, r) {
                return (
                  (r = 'function' == typeof r ? r : void 0), _n(e, t, Qi(t), r)
                );
              }),
              (kr.isNaN = function (e) {
                return Wa(e) && e != +e;
              }),
              (kr.isNative = function (e) {
                if (fo(e))
                  throw new de(
                    'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.'
                  );
                return En(e);
              }),
              (kr.isNil = function (e) {
                return null == e;
              }),
              (kr.isNull = function (e) {
                return null === e;
              }),
              (kr.isNumber = Wa),
              (kr.isObject = Ha),
              (kr.isObjectLike = Va),
              (kr.isPlainObject = Ya),
              (kr.isRegExp = Ga),
              (kr.isSafeInteger = function (e) {
                return Da(e) && e >= -9007199254740991 && e <= 9007199254740991;
              }),
              (kr.isSet = Ja),
              (kr.isString = $a),
              (kr.isSymbol = Za),
              (kr.isTypedArray = Qa),
              (kr.isUndefined = function (e) {
                return void 0 === e;
              }),
              (kr.isWeakMap = function (e) {
                return Va(e) && ro(e) == _;
              }),
              (kr.isWeakSet = function (e) {
                return Va(e) && '[object WeakSet]' == pn(e);
              }),
              (kr.join = function (e, t) {
                return null == e ? '' : nr.call(e, t);
              }),
              (kr.kebabCase = js),
              (kr.last = Co),
              (kr.lastIndexOf = function (e, t, r) {
                var n = null == e ? 0 : e.length;
                if (!n) return -1;
                var i = n;
                return (
                  void 0 !== r &&
                    (i = (i = ns(r)) < 0 ? or(n + i, 0) : ar(i, n - 1)),
                  t == t
                    ? (function (e, t, r) {
                        for (var n = r + 1; n--; ) if (e[n] === t) return n;
                        return n;
                      })(e, t, i)
                    : yt(e, Et, i, !0)
                );
              }),
              (kr.lowerCase = Ns),
              (kr.lowerFirst = Ls),
              (kr.lt = Xa),
              (kr.lte = es),
              (kr.max = function (e) {
                return e && e.length ? rn(e, Ws, hn) : void 0;
              }),
              (kr.maxBy = function (e, t) {
                return e && e.length ? rn(e, $i(t, 2), hn) : void 0;
              }),
              (kr.mean = function (e) {
                return St(e, Ws);
              }),
              (kr.meanBy = function (e, t) {
                return St(e, $i(t, 2));
              }),
              (kr.min = function (e) {
                return e && e.length ? rn(e, Ws, An) : void 0;
              }),
              (kr.minBy = function (e, t) {
                return e && e.length ? rn(e, $i(t, 2), An) : void 0;
              }),
              (kr.stubArray = iu),
              (kr.stubFalse = ou),
              (kr.stubObject = function () {
                return {};
              }),
              (kr.stubString = function () {
                return '';
              }),
              (kr.stubTrue = function () {
                return !0;
              }),
              (kr.multiply = lu),
              (kr.nth = function (e, t) {
                return e && e.length ? Pn(e, ns(t)) : void 0;
              }),
              (kr.noConflict = function () {
                return We._ === this && (We._ = Me), this;
              }),
              (kr.noop = Zs),
              (kr.now = ma),
              (kr.pad = function (e, t, r) {
                e = ss(e);
                var n = (t = ns(t)) ? Vt(e) : 0;
                if (!t || n >= t) return e;
                var i = (t - n) / 2;
                return Oi(Xt(i), r) + e + Oi(Qt(i), r);
              }),
              (kr.padEnd = function (e, t, r) {
                e = ss(e);
                var n = (t = ns(t)) ? Vt(e) : 0;
                return t && n < t ? e + Oi(t - n, r) : e;
              }),
              (kr.padStart = function (e, t, r) {
                e = ss(e);
                var n = (t = ns(t)) ? Vt(e) : 0;
                return t && n < t ? Oi(t - n, r) + e : e;
              }),
              (kr.parseInt = function (e, t, r) {
                return (
                  r || null == t ? (t = 0) : t && (t = +t),
                  ur(ss(e).replace(G, ''), t || 0)
                );
              }),
              (kr.random = function (e, t, r) {
                if (
                  (r &&
                    'boolean' != typeof r &&
                    so(e, t, r) &&
                    (t = r = void 0),
                  void 0 === r &&
                    ('boolean' == typeof t
                      ? ((r = t), (t = void 0))
                      : 'boolean' == typeof e && ((r = e), (e = void 0))),
                  void 0 === e && void 0 === t
                    ? ((e = 0), (t = 1))
                    : ((e = rs(e)),
                      void 0 === t ? ((t = e), (e = 0)) : (t = rs(t))),
                  e > t)
                ) {
                  var n = e;
                  (e = t), (t = n);
                }
                if (r || e % 1 || t % 1) {
                  var i = cr();
                  return ar(
                    e + i * (t - e + Ke('1e-' + ((i + '').length - 1))),
                    t
                  );
                }
                return qn(e, t);
              }),
              (kr.reduce = function (e, t, r) {
                var n = ja(e) ? ht : At,
                  i = arguments.length < 3;
                return n(e, $i(t, 4), r, i, Xr);
              }),
              (kr.reduceRight = function (e, t, r) {
                var n = ja(e) ? mt : At,
                  i = arguments.length < 3;
                return n(e, $i(t, 4), r, i, en);
              }),
              (kr.repeat = function (e, t, r) {
                return (
                  (t = (r ? so(e, t, r) : void 0 === t) ? 1 : ns(t)),
                  Rn(ss(e), t)
                );
              }),
              (kr.replace = function () {
                var e = arguments,
                  t = ss(e[0]);
                return e.length < 3 ? t : t.replace(e[1], e[2]);
              }),
              (kr.result = function (e, t, r) {
                var n = -1,
                  i = (t = si(t, e)).length;
                for (i || ((i = 1), (e = void 0)); ++n < i; ) {
                  var o = null == e ? void 0 : e[Ao(t[n])];
                  void 0 === o && ((n = i), (o = r)),
                    (e = Ua(o) ? o.call(e) : o);
                }
                return e;
              }),
              (kr.round = du),
              (kr.runInContext = e),
              (kr.sample = function (e) {
                return (ja(e) ? Br : Cn)(e);
              }),
              (kr.size = function (e) {
                if (null == e) return 0;
                if (La(e)) return $a(e) ? Vt(e) : e.length;
                var t = ro(e);
                return t == h || t == v ? e.size : xn(e).length;
              }),
              (kr.snakeCase = qs),
              (kr.some = function (e, t, r) {
                var n = ja(e) ? bt : Wn;
                return r && so(e, t, r) && (t = void 0), n(e, $i(t, 3));
              }),
              (kr.sortedIndex = function (e, t) {
                return Yn(e, t);
              }),
              (kr.sortedIndexBy = function (e, t, r) {
                return Gn(e, t, $i(r, 2));
              }),
              (kr.sortedIndexOf = function (e, t) {
                var r = null == e ? 0 : e.length;
                if (r) {
                  var n = Yn(e, t);
                  if (n < r && Ma(e[n], t)) return n;
                }
                return -1;
              }),
              (kr.sortedLastIndex = function (e, t) {
                return Yn(e, t, !0);
              }),
              (kr.sortedLastIndexBy = function (e, t, r) {
                return Gn(e, t, $i(r, 2), !0);
              }),
              (kr.sortedLastIndexOf = function (e, t) {
                if (null == e ? 0 : e.length) {
                  var r = Yn(e, t, !0) - 1;
                  if (Ma(e[r], t)) return r;
                }
                return -1;
              }),
              (kr.startCase = Rs),
              (kr.startsWith = function (e, t, r) {
                return (
                  (e = ss(e)),
                  (r = null == r ? 0 : Gr(ns(r), 0, e.length)),
                  (t = Zn(t)),
                  e.slice(r, r + t.length) == t
                );
              }),
              (kr.subtract = pu),
              (kr.sum = function (e) {
                return e && e.length ? kt(e, Ws) : 0;
              }),
              (kr.sumBy = function (e, t) {
                return e && e.length ? kt(e, $i(t, 2)) : 0;
              }),
              (kr.template = function (e, t, r) {
                var n = kr.templateSettings;
                r && so(e, t, r) && (t = void 0),
                  (e = ss(e)),
                  (t = fs({}, t, n, Ui));
                var i,
                  o,
                  a = fs({}, t.imports, n.imports, Ui),
                  s = ws(a),
                  u = Tt(a, s),
                  c = 0,
                  f = t.interpolate || ce,
                  l = "__p += '",
                  d = be(
                    (t.escape || ce).source +
                      '|' +
                      f.source +
                      '|' +
                      (f === D ? te : ce).source +
                      '|' +
                      (t.evaluate || ce).source +
                      '|$',
                    'g'
                  ),
                  p =
                    '//# sourceURL=' +
                    (xe.call(t, 'sourceURL')
                      ? (t.sourceURL + '').replace(/\s/g, ' ')
                      : 'lodash.templateSources[' + ++Be + ']') +
                    '\n';
                e.replace(d, function (t, r, n, a, s, u) {
                  return (
                    n || (n = a),
                    (l += e.slice(c, u).replace(fe, Rt)),
                    r && ((i = !0), (l += "' +\n__e(" + r + ") +\n'")),
                    s && ((o = !0), (l += "';\n" + s + ";\n__p += '")),
                    n &&
                      (l +=
                        "' +\n((__t = (" + n + ")) == null ? '' : __t) +\n'"),
                    (c = u + t.length),
                    t
                  );
                }),
                  (l += "';\n");
                var h = xe.call(t, 'variable') && t.variable;
                h || (l = 'with (obj) {\n' + l + '\n}\n'),
                  (l = (o ? l.replace(O, '') : l)
                    .replace(j, '$1')
                    .replace(N, '$1;')),
                  (l =
                    'function(' +
                    (h || 'obj') +
                    ') {\n' +
                    (h ? '' : 'obj || (obj = {});\n') +
                    "var __t, __p = ''" +
                    (i ? ', __e = _.escape' : '') +
                    (o
                      ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n"
                      : ';\n') +
                    l +
                    'return __p\n}');
                var m = Ds(function () {
                  return pe(s, p + 'return ' + l).apply(void 0, u);
                });
                if (((m.source = l), Ca(m))) throw m;
                return m;
              }),
              (kr.times = function (e, t) {
                if ((e = ns(e)) < 1 || e > 9007199254740991) return [];
                var r = 4294967295,
                  n = ar(e, 4294967295);
                e -= 4294967295;
                for (var i = zt(n, (t = $i(t))); ++r < e; ) t(r);
                return i;
              }),
              (kr.toFinite = rs),
              (kr.toInteger = ns),
              (kr.toLength = is),
              (kr.toLower = function (e) {
                return ss(e).toLowerCase();
              }),
              (kr.toNumber = os),
              (kr.toSafeInteger = function (e) {
                return e
                  ? Gr(ns(e), -9007199254740991, 9007199254740991)
                  : 0 === e
                  ? e
                  : 0;
              }),
              (kr.toString = ss),
              (kr.toUpper = function (e) {
                return ss(e).toUpperCase();
              }),
              (kr.trim = function (e, t, r) {
                if ((e = ss(e)) && (r || void 0 === t)) return e.replace(Y, '');
                if (!e || !(t = Zn(t))) return e;
                var n = Ft(e),
                  i = Ft(t);
                return ci(n, Ot(n, i), jt(n, i) + 1).join('');
              }),
              (kr.trimEnd = function (e, t, r) {
                if ((e = ss(e)) && (r || void 0 === t)) return e.replace(J, '');
                if (!e || !(t = Zn(t))) return e;
                var n = Ft(e);
                return ci(n, 0, jt(n, Ft(t)) + 1).join('');
              }),
              (kr.trimStart = function (e, t, r) {
                if ((e = ss(e)) && (r || void 0 === t)) return e.replace(G, '');
                if (!e || !(t = Zn(t))) return e;
                var n = Ft(e);
                return ci(n, Ot(n, Ft(t))).join('');
              }),
              (kr.truncate = function (e, t) {
                var r = 30,
                  n = '...';
                if (Ha(t)) {
                  var i = 'separator' in t ? t.separator : i;
                  (r = 'length' in t ? ns(t.length) : r),
                    (n = 'omission' in t ? Zn(t.omission) : n);
                }
                var o = (e = ss(e)).length;
                if (Bt(e)) {
                  var a = Ft(e);
                  o = a.length;
                }
                if (r >= o) return e;
                var s = r - Vt(n);
                if (s < 1) return n;
                var u = a ? ci(a, 0, s).join('') : e.slice(0, s);
                if (void 0 === i) return u + n;
                if ((a && (s += u.length - s), Ga(i))) {
                  if (e.slice(s).search(i)) {
                    var c,
                      f = u;
                    for (
                      i.global || (i = be(i.source, ss(re.exec(i)) + 'g')),
                        i.lastIndex = 0;
                      (c = i.exec(f));

                    )
                      var l = c.index;
                    u = u.slice(0, void 0 === l ? s : l);
                  }
                } else if (e.indexOf(Zn(i), s) != s) {
                  var d = u.lastIndexOf(i);
                  d > -1 && (u = u.slice(0, d));
                }
                return u + n;
              }),
              (kr.unescape = function (e) {
                return (e = ss(e)) && R.test(e) ? e.replace(L, Wt) : e;
              }),
              (kr.uniqueId = function (e) {
                var t = ++Ie;
                return ss(e) + t;
              }),
              (kr.upperCase = Bs),
              (kr.upperFirst = Cs),
              (kr.each = sa),
              (kr.eachRight = ua),
              (kr.first = Lo),
              $s(
                kr,
                ((fu = {}),
                un(kr, function (e, t) {
                  xe.call(kr.prototype, t) || (fu[t] = e);
                }),
                fu),
                { chain: !1 }
              ),
              (kr.VERSION = '4.17.20'),
              at(
                [
                  'bind',
                  'bindKey',
                  'curry',
                  'curryRight',
                  'partial',
                  'partialRight',
                ],
                function (e) {
                  kr[e].placeholder = kr;
                }
              ),
              at(['drop', 'take'], function (e, t) {
                (Pr.prototype[e] = function (r) {
                  r = void 0 === r ? 1 : or(ns(r), 0);
                  var n = this.__filtered__ && !t ? new Pr(this) : this.clone();
                  return (
                    n.__filtered__
                      ? (n.__takeCount__ = ar(r, n.__takeCount__))
                      : n.__views__.push({
                          size: ar(r, 4294967295),
                          type: e + (n.__dir__ < 0 ? 'Right' : ''),
                        }),
                    n
                  );
                }),
                  (Pr.prototype[e + 'Right'] = function (t) {
                    return this.reverse()[e](t).reverse();
                  });
              }),
              at(['filter', 'map', 'takeWhile'], function (e, t) {
                var r = t + 1,
                  n = 1 == r || 3 == r;
                Pr.prototype[e] = function (e) {
                  var t = this.clone();
                  return (
                    t.__iteratees__.push({ iteratee: $i(e, 3), type: r }),
                    (t.__filtered__ = t.__filtered__ || n),
                    t
                  );
                };
              }),
              at(['head', 'last'], function (e, t) {
                var r = 'take' + (t ? 'Right' : '');
                Pr.prototype[e] = function () {
                  return this[r](1).value()[0];
                };
              }),
              at(['initial', 'tail'], function (e, t) {
                var r = 'drop' + (t ? '' : 'Right');
                Pr.prototype[e] = function () {
                  return this.__filtered__ ? new Pr(this) : this[r](1);
                };
              }),
              (Pr.prototype.compact = function () {
                return this.filter(Ws);
              }),
              (Pr.prototype.find = function (e) {
                return this.filter(e).head();
              }),
              (Pr.prototype.findLast = function (e) {
                return this.reverse().find(e);
              }),
              (Pr.prototype.invokeMap = Bn(function (e, t) {
                return 'function' == typeof e
                  ? new Pr(this)
                  : this.map(function (r) {
                      return vn(r, e, t);
                    });
              })),
              (Pr.prototype.reject = function (e) {
                return this.filter(xa($i(e)));
              }),
              (Pr.prototype.slice = function (e, t) {
                e = ns(e);
                var r = this;
                return r.__filtered__ && (e > 0 || t < 0)
                  ? new Pr(r)
                  : (e < 0 ? (r = r.takeRight(-e)) : e && (r = r.drop(e)),
                    void 0 !== t &&
                      (r = (t = ns(t)) < 0 ? r.dropRight(-t) : r.take(t - e)),
                    r);
              }),
              (Pr.prototype.takeRightWhile = function (e) {
                return this.reverse().takeWhile(e).reverse();
              }),
              (Pr.prototype.toArray = function () {
                return this.take(4294967295);
              }),
              un(Pr.prototype, function (e, t) {
                var r = /^(?:filter|find|map|reject)|While$/.test(t),
                  n = /^(?:head|last)$/.test(t),
                  i = kr[n ? 'take' + ('last' == t ? 'Right' : '') : t],
                  o = n || /^find/.test(t);
                i &&
                  (kr.prototype[t] = function () {
                    var t = this.__wrapped__,
                      a = n ? [1] : arguments,
                      s = t instanceof Pr,
                      u = a[0],
                      c = s || ja(t),
                      f = function (e) {
                        var t = i.apply(kr, pt([e], a));
                        return n && l ? t[0] : t;
                      };
                    c &&
                      r &&
                      'function' == typeof u &&
                      1 != u.length &&
                      (s = c = !1);
                    var l = this.__chain__,
                      d = !!this.__actions__.length,
                      p = o && !l,
                      h = s && !d;
                    if (!o && c) {
                      t = h ? t : new Pr(this);
                      var m = e.apply(t, a);
                      return (
                        m.__actions__.push({
                          func: ra,
                          args: [f],
                          thisArg: void 0,
                        }),
                        new Tr(m, l)
                      );
                    }
                    return p && h
                      ? e.apply(this, a)
                      : ((m = this.thru(f)),
                        p ? (n ? m.value()[0] : m.value()) : m);
                  });
              }),
              at(
                ['pop', 'push', 'shift', 'sort', 'splice', 'unshift'],
                function (e) {
                  var t = ye[e],
                    r = /^(?:push|sort|unshift)$/.test(e) ? 'tap' : 'thru',
                    n = /^(?:pop|shift)$/.test(e);
                  kr.prototype[e] = function () {
                    var e = arguments;
                    if (n && !this.__chain__) {
                      var i = this.value();
                      return t.apply(ja(i) ? i : [], e);
                    }
                    return this[r](function (r) {
                      return t.apply(ja(r) ? r : [], e);
                    });
                  };
                }
              ),
              un(Pr.prototype, function (e, t) {
                var r = kr[t];
                if (r) {
                  var n = r.name + '';
                  xe.call(vr, n) || (vr[n] = []),
                    vr[n].push({ name: t, func: r });
                }
              }),
              (vr[zi(void 0, 2).name] = [{ name: 'wrapper', func: void 0 }]),
              (Pr.prototype.clone = function () {
                var e = new Pr(this.__wrapped__);
                return (
                  (e.__actions__ = gi(this.__actions__)),
                  (e.__dir__ = this.__dir__),
                  (e.__filtered__ = this.__filtered__),
                  (e.__iteratees__ = gi(this.__iteratees__)),
                  (e.__takeCount__ = this.__takeCount__),
                  (e.__views__ = gi(this.__views__)),
                  e
                );
              }),
              (Pr.prototype.reverse = function () {
                if (this.__filtered__) {
                  var e = new Pr(this);
                  (e.__dir__ = -1), (e.__filtered__ = !0);
                } else (e = this.clone()).__dir__ *= -1;
                return e;
              }),
              (Pr.prototype.value = function () {
                var e = this.__wrapped__.value(),
                  t = this.__dir__,
                  r = ja(e),
                  n = t < 0,
                  i = r ? e.length : 0,
                  o = (function (e, t, r) {
                    var n = -1,
                      i = r.length;
                    for (; ++n < i; ) {
                      var o = r[n],
                        a = o.size;
                      switch (o.type) {
                        case 'drop':
                          e += a;
                          break;
                        case 'dropRight':
                          t -= a;
                          break;
                        case 'take':
                          t = ar(t, e + a);
                          break;
                        case 'takeRight':
                          e = or(e, t - a);
                      }
                    }
                    return { start: e, end: t };
                  })(0, i, this.__views__),
                  a = o.start,
                  s = o.end,
                  u = s - a,
                  c = n ? s : a - 1,
                  f = this.__iteratees__,
                  l = f.length,
                  d = 0,
                  p = ar(u, this.__takeCount__);
                if (!r || (!n && i == u && p == u))
                  return ri(e, this.__actions__);
                var h = [];
                e: for (; u-- && d < p; ) {
                  for (var m = -1, b = e[(c += t)]; ++m < l; ) {
                    var g = f[m],
                      v = g.iteratee,
                      y = g.type,
                      w = v(b);
                    if (2 == y) b = w;
                    else if (!w) {
                      if (1 == y) continue e;
                      break e;
                    }
                  }
                  h[d++] = b;
                }
                return h;
              }),
              (kr.prototype.at = na),
              (kr.prototype.chain = function () {
                return ta(this);
              }),
              (kr.prototype.commit = function () {
                return new Tr(this.value(), this.__chain__);
              }),
              (kr.prototype.next = function () {
                void 0 === this.__values__ &&
                  (this.__values__ = ts(this.value()));
                var e = this.__index__ >= this.__values__.length;
                return {
                  done: e,
                  value: e ? void 0 : this.__values__[this.__index__++],
                };
              }),
              (kr.prototype.plant = function (e) {
                for (var t, r = this; r instanceof Mr; ) {
                  var n = zo(r);
                  (n.__index__ = 0),
                    (n.__values__ = void 0),
                    t ? (i.__wrapped__ = n) : (t = n);
                  var i = n;
                  r = r.__wrapped__;
                }
                return (i.__wrapped__ = e), t;
              }),
              (kr.prototype.reverse = function () {
                var e = this.__wrapped__;
                if (e instanceof Pr) {
                  var t = e;
                  return (
                    this.__actions__.length && (t = new Pr(this)),
                    (t = t.reverse()).__actions__.push({
                      func: ra,
                      args: [Ho],
                      thisArg: void 0,
                    }),
                    new Tr(t, this.__chain__)
                  );
                }
                return this.thru(Ho);
              }),
              (kr.prototype.toJSON = kr.prototype.valueOf = kr.prototype.value = function () {
                return ri(this.__wrapped__, this.__actions__);
              }),
              (kr.prototype.first = kr.prototype.head),
              gt &&
                (kr.prototype[gt] = function () {
                  return this;
                }),
              kr
            );
          })();
          (We._ = Yt),
            void 0 ===
              (n = function () {
                return Yt;
              }.call(t, r, t, e)) || (e.exports = n);
        }.call(this));
      }.call(this, r(57)(e)));
    },
    function (e, t, r) {
      var n = r(45),
        i = r(4);
      i.pbkdf2Sync && -1 !== i.pbkdf2Sync.toString().indexOf('keylen, digest')
        ? ((t.pbkdf2Sync = function (e, t, r, o, a) {
            return (
              n(e, t, r, o), (a = a || 'sha1'), i.pbkdf2Sync(e, t, r, o, a)
            );
          }),
          (t.pbkdf2 = function (e, t, r, o, a, s) {
            if (
              (n(e, t, r, o),
              'function' == typeof a && ((s = a), (a = 'sha1')),
              'function' != typeof s)
            )
              throw new Error('No callback provided to pbkdf2');
            return i.pbkdf2(e, t, r, o, a, s);
          }))
        : ((t.pbkdf2Sync = r(66)), (t.pbkdf2 = r(110)));
    },
    function (e, t, r) {
      var n = {
          md5: 16,
          sha1: 20,
          sha224: 28,
          sha256: 32,
          sha384: 48,
          sha512: 64,
          rmd160: 20,
          ripemd160: 20,
        },
        i = r(46),
        o = r(45),
        a = r(67),
        s = r(2).Buffer;
      e.exports = function (e, t, r, u, c) {
        o(e, t, r, u),
          s.isBuffer(e) || (e = s.from(e, a)),
          s.isBuffer(t) || (t = s.from(t, a)),
          (c = c || 'sha1');
        var f = s.allocUnsafe(u),
          l = s.allocUnsafe(t.length + 4);
        t.copy(l, 0, 0, t.length);
        for (var d = 0, p = n[c], h = Math.ceil(u / p), m = 1; m <= h; m++) {
          l.writeUInt32BE(m, t.length);
          for (var b = i(c, e).update(l).digest(), g = b, v = 1; v < r; v++) {
            g = i(c, e).update(g).digest();
            for (var y = 0; y < p; y++) b[y] ^= g[y];
          }
          b.copy(f, d), (d += p);
        }
        return f;
      };
    },
    function (e, t) {
      var r;
      process.browser
        ? (r = 'utf-8')
        : (r =
            parseInt(process.version.split('.')[0].slice(1), 10) >= 6
              ? 'utf-8'
              : 'binary');
      e.exports = r;
    },
    function (e, t, r) {
      'use strict';
      Object.defineProperty(t, '__esModule', { value: !0 });
      const n = {};
      let i;
      (t.wordlists = n), (t._default = i);
      try {
        (t._default = i = r(111)), (n.chinese_simplified = i);
      } catch (e) {}
      try {
        (t._default = i = r(112)), (n.chinese_traditional = i);
      } catch (e) {}
      try {
        (t._default = i = r(113)), (n.korean = i);
      } catch (e) {}
      try {
        (t._default = i = r(114)), (n.french = i);
      } catch (e) {}
      try {
        (t._default = i = r(115)), (n.italian = i);
      } catch (e) {}
      try {
        (t._default = i = r(116)), (n.spanish = i);
      } catch (e) {}
      try {
        (t._default = i = r(117)), (n.japanese = i), (n.JA = i);
      } catch (e) {}
      try {
        (t._default = i = r(118)), (n.english = i), (n.EN = i);
      } catch (e) {}
    },
    function (e, t, r) {
      let n = r(2).Buffer,
        i = r(29),
        o = r(133),
        a = r(21),
        s = r(3),
        u = r(79),
        c = s.BufferN(32),
        f = s.compile({
          wif: s.UInt8,
          bip32: { public: s.UInt32, private: s.UInt32 },
        }),
        l = { wif: 128, bip32: { public: 76067358, private: 76066276 } };
      function d(e, t, r, n) {
        s(f, n),
          (this.__d = e || null),
          (this.__Q = t || null),
          (this.chainCode = r),
          (this.depth = 0),
          (this.index = 0),
          (this.network = n),
          (this.parentFingerprint = 0);
      }
      Object.defineProperty(d.prototype, 'identifier', {
        get: function () {
          return o.hash160(this.publicKey);
        },
      }),
        Object.defineProperty(d.prototype, 'fingerprint', {
          get: function () {
            return this.identifier.slice(0, 4);
          },
        }),
        Object.defineProperty(d.prototype, 'privateKey', {
          enumerable: !1,
          get: function () {
            return this.__d;
          },
        }),
        Object.defineProperty(d.prototype, 'publicKey', {
          get: function () {
            return (
              this.__Q ||
                (this.__Q = a.pointFromScalar(this.__d, this.compressed)),
              this.__Q
            );
          },
        }),
        (d.prototype.isNeutered = function () {
          return null === this.__d;
        }),
        (d.prototype.neutered = function () {
          let e = g(this.publicKey, this.chainCode, this.network);
          return (
            (e.depth = this.depth),
            (e.index = this.index),
            (e.parentFingerprint = this.parentFingerprint),
            e
          );
        }),
        (d.prototype.toBase58 = function () {
          let e = this.network,
            t = this.isNeutered() ? e.bip32.public : e.bip32.private,
            r = n.allocUnsafe(78);
          return (
            r.writeUInt32BE(t, 0),
            r.writeUInt8(this.depth, 4),
            r.writeUInt32BE(this.parentFingerprint, 5),
            r.writeUInt32BE(this.index, 9),
            this.chainCode.copy(r, 13),
            this.isNeutered()
              ? this.publicKey.copy(r, 45)
              : (r.writeUInt8(0, 45), this.privateKey.copy(r, 46)),
            i.encode(r)
          );
        }),
        (d.prototype.toWIF = function () {
          if (!this.privateKey) throw new TypeError('Missing private key');
          return u.encode(this.network.wif, this.privateKey, !0);
        });
      d.prototype.derive = function (e) {
        s(s.UInt32, e);
        let t = e >= 2147483648,
          r = n.allocUnsafe(37);
        if (t) {
          if (this.isNeutered())
            throw new TypeError('Missing private key for hardened child key');
          (r[0] = 0), this.privateKey.copy(r, 1), r.writeUInt32BE(e, 33);
        } else this.publicKey.copy(r, 0), r.writeUInt32BE(e, 33);
        let i,
          u = o.hmacSHA512(this.chainCode, r),
          c = u.slice(0, 32),
          f = u.slice(32);
        if (!a.isPrivate(c)) return this.derive(e + 1);
        if (this.isNeutered()) {
          let t = a.pointAddScalar(this.publicKey, c, !0);
          if (null === t) return this.derive(e + 1);
          i = g(t, f, this.network);
        } else {
          let t = a.privateAdd(this.privateKey, c);
          if (null == t) return this.derive(e + 1);
          i = b(t, f, this.network);
        }
        return (
          (i.depth = this.depth + 1),
          (i.index = e),
          (i.parentFingerprint = this.fingerprint.readUInt32BE(0)),
          i
        );
      };
      let p = Math.pow(2, 31) - 1;
      function h(e) {
        return s.UInt32(e) && e <= p;
      }
      function m(e) {
        return s.String(e) && e.match(/^(m\/)?(\d+'?\/)*\d+'?$/);
      }
      function b(e, t, r) {
        if (
          (s({ privateKey: c, chainCode: c }, { privateKey: e, chainCode: t }),
          (r = r || l),
          !a.isPrivate(e))
        )
          throw new TypeError('Private key not in range [1, n)');
        return new d(e, null, t, r);
      }
      function g(e, t, r) {
        if (
          (s(
            { publicKey: s.BufferN(33), chainCode: c },
            { publicKey: e, chainCode: t }
          ),
          (r = r || l),
          !a.isPoint(e))
        )
          throw new TypeError('Point is not on the curve');
        return new d(null, e, t, r);
      }
      (d.prototype.deriveHardened = function (e) {
        return s(h, e), this.derive(e + 2147483648);
      }),
        (d.prototype.derivePath = function (e) {
          s(m, e);
          let t = e.split('/');
          if ('m' === t[0]) {
            if (this.parentFingerprint)
              throw new TypeError('Expected master, got child');
            t = t.slice(1);
          }
          return t.reduce(function (e, t) {
            let r;
            return "'" === t.slice(-1)
              ? ((r = parseInt(t.slice(0, -1), 10)), e.deriveHardened(r))
              : ((r = parseInt(t, 10)), e.derive(r));
          }, this);
        }),
        (d.prototype.sign = function (e) {
          return a.sign(e, this.privateKey);
        }),
        (d.prototype.verify = function (e, t) {
          return a.verify(e, this.publicKey, t);
        }),
        (e.exports = {
          fromBase58: function (e, t) {
            let r = i.decode(e);
            if (78 !== r.length) throw new TypeError('Invalid buffer length');
            t = t || l;
            let n = r.readUInt32BE(0);
            if (n !== t.bip32.private && n !== t.bip32.public)
              throw new TypeError('Invalid network version');
            let o = r[4],
              a = r.readUInt32BE(5);
            if (0 === o && 0 !== a)
              throw new TypeError('Invalid parent fingerprint');
            let s = r.readUInt32BE(9);
            if (0 === o && 0 !== s) throw new TypeError('Invalid index');
            let u,
              c = r.slice(13, 45);
            if (n === t.bip32.private) {
              if (0 !== r.readUInt8(45))
                throw new TypeError('Invalid private key');
              u = b(r.slice(46, 78), c, t);
            } else {
              u = g(r.slice(45, 78), c, t);
            }
            return (u.depth = o), (u.index = s), (u.parentFingerprint = a), u;
          },
          fromPrivateKey: b,
          fromPublicKey: g,
          fromSeed: function (e, t) {
            if ((s(s.Buffer, e), e.length < 16))
              throw new TypeError('Seed should be at least 128 bits');
            if (e.length > 64)
              throw new TypeError('Seed should be at most 512 bits');
            t = t || l;
            let r = o.hmacSHA512('Bitcoin seed', e);
            return b(r.slice(0, 32), r.slice(32), t);
          },
        });
    },
    function (e, t, r) {
      (function (n) {
        var i = r(40),
          o = r(33),
          a = r(135),
          s = o.join,
          u = o.dirname,
          c =
            (i.accessSync &&
              function (e) {
                try {
                  i.accessSync(e);
                } catch (e) {
                  return !1;
                }
                return !0;
              }) ||
            i.existsSync ||
            o.existsSync,
          f = {
            arrow: process.env.NODE_BINDINGS_ARROW || ' → ',
            compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled',
            platform: process.platform,
            arch: process.arch,
            nodePreGyp:
              'node-v' +
              process.versions.modules +
              '-' +
              process.platform +
              '-' +
              process.arch,
            version: process.versions.node,
            bindings: 'bindings.node',
            try: [
              ['module_root', 'build', 'bindings'],
              ['module_root', 'build', 'Debug', 'bindings'],
              ['module_root', 'build', 'Release', 'bindings'],
              ['module_root', 'out', 'Debug', 'bindings'],
              ['module_root', 'Debug', 'bindings'],
              ['module_root', 'out', 'Release', 'bindings'],
              ['module_root', 'Release', 'bindings'],
              ['module_root', 'build', 'default', 'bindings'],
              [
                'module_root',
                'compiled',
                'version',
                'platform',
                'arch',
                'bindings',
              ],
              [
                'module_root',
                'addon-build',
                'release',
                'install-root',
                'bindings',
              ],
              [
                'module_root',
                'addon-build',
                'debug',
                'install-root',
                'bindings',
              ],
              [
                'module_root',
                'addon-build',
                'default',
                'install-root',
                'bindings',
              ],
              ['module_root', 'lib', 'binding', 'nodePreGyp', 'bindings'],
            ],
          };
        (e.exports = t = function (e) {
          'string' == typeof e ? (e = { bindings: e }) : e || (e = {}),
            Object.keys(f).map(function (t) {
              t in e || (e[t] = f[t]);
            }),
            e.module_root || (e.module_root = t.getRoot(t.getFileName())),
            '.node' != o.extname(e.bindings) && (e.bindings += '.node');
          for (
            var r, n, i, a = require, u = [], c = 0, l = e.try.length;
            c < l;
            c++
          ) {
            (r = s.apply(
              null,
              e.try[c].map(function (t) {
                return e[t] || t;
              })
            )),
              u.push(r);
            try {
              return (
                (n = e.path ? a.resolve(r) : a(r)), e.path || (n.path = r), n
              );
            } catch (e) {
              if (
                'MODULE_NOT_FOUND' !== e.code &&
                'QUALIFIED_PATH_RESOLUTION_FAILED' !== e.code &&
                !/not find/i.test(e.message)
              )
                throw e;
            }
          }
          throw (
            (((i = new Error(
              'Could not locate the bindings file. Tried:\n' +
                u
                  .map(function (t) {
                    return e.arrow + t;
                  })
                  .join('\n')
            )).tries = u),
            i)
          );
        }),
          (t.getFileName = function (e) {
            var t,
              r = Error.prepareStackTrace,
              i = Error.stackTraceLimit,
              o = {};
            (Error.stackTraceLimit = 10),
              (Error.prepareStackTrace = function (r, i) {
                for (var o = 0, a = i.length; o < a; o++)
                  if ((t = i[o].getFileName()) !== n) {
                    if (!e) return;
                    if (t !== e) return;
                  }
              }),
              Error.captureStackTrace(o),
              (Error.prepareStackTrace = r),
              (Error.stackTraceLimit = i);
            return 0 === t.indexOf('file://') && (t = a(t)), t;
          }),
          (t.getRoot = function (e) {
            for (var t, r = u(e); ; ) {
              if (
                ('.' === r && (r = process.cwd()),
                c(s(r, 'package.json')) || c(s(r, 'node_modules')))
              )
                return r;
              if (t === r)
                throw new Error(
                  'Could not find module root given file: "' +
                    e +
                    '". Do you have a `package.json` file? '
                );
              (t = r), (r = s(r, '..'));
            }
          });
      }.call(this, '/index.js'));
    },
    function (e, t, r) {
      'use strict';
      var n = t;
      (n.version = r(137).version),
        (n.utils = r(8)),
        (n.rand = r(73)),
        (n.curve = r(74)),
        (n.curves = r(48)),
        (n.ec = r(149)),
        (n.eddsa = r(153));
    },
    function (e, t, r) {
      'use strict';
      var n = t;
      function i(e) {
        return 1 === e.length ? '0' + e : e;
      }
      function o(e) {
        for (var t = '', r = 0; r < e.length; r++) t += i(e[r].toString(16));
        return t;
      }
      (n.toArray = function (e, t) {
        if (Array.isArray(e)) return e.slice();
        if (!e) return [];
        var r = [];
        if ('string' != typeof e) {
          for (var n = 0; n < e.length; n++) r[n] = 0 | e[n];
          return r;
        }
        if ('hex' === t) {
          (e = e.replace(/[^a-z0-9]+/gi, '')).length % 2 != 0 && (e = '0' + e);
          for (n = 0; n < e.length; n += 2)
            r.push(parseInt(e[n] + e[n + 1], 16));
        } else
          for (n = 0; n < e.length; n++) {
            var i = e.charCodeAt(n),
              o = i >> 8,
              a = 255 & i;
            o ? r.push(o, a) : r.push(a);
          }
        return r;
      }),
        (n.zero2 = i),
        (n.toHex = o),
        (n.encode = function (e, t) {
          return 'hex' === t ? o(e) : e;
        });
    },
    function (e, t, r) {
      var n;
      function i(e) {
        this.rand = e;
      }
      if (
        ((e.exports = function (e) {
          return n || (n = new i(null)), n.generate(e);
        }),
        (e.exports.Rand = i),
        (i.prototype.generate = function (e) {
          return this._rand(e);
        }),
        (i.prototype._rand = function (e) {
          if (this.rand.getBytes) return this.rand.getBytes(e);
          for (var t = new Uint8Array(e), r = 0; r < t.length; r++)
            t[r] = this.rand.getByte();
          return t;
        }),
        'object' == typeof self)
      )
        self.crypto && self.crypto.getRandomValues
          ? (i.prototype._rand = function (e) {
              var t = new Uint8Array(e);
              return self.crypto.getRandomValues(t), t;
            })
          : self.msCrypto && self.msCrypto.getRandomValues
          ? (i.prototype._rand = function (e) {
              var t = new Uint8Array(e);
              return self.msCrypto.getRandomValues(t), t;
            })
          : 'object' == typeof window &&
            (i.prototype._rand = function () {
              throw new Error('Not implemented yet');
            });
      else
        try {
          var o = r(4);
          if ('function' != typeof o.randomBytes)
            throw new Error('Not supported');
          i.prototype._rand = function (e) {
            return o.randomBytes(e);
          };
        } catch (e) {}
    },
    function (e, t, r) {
      'use strict';
      var n = t;
      (n.base = r(35)),
        (n.short = r(138)),
        (n.mont = r(140)),
        (n.edwards = r(141));
    },
    function (e, t, r) {
      'use strict';
      var n = r(12).rotr32;
      function i(e, t, r) {
        return (e & t) ^ (~e & r);
      }
      function o(e, t, r) {
        return (e & t) ^ (e & r) ^ (t & r);
      }
      function a(e, t, r) {
        return e ^ t ^ r;
      }
      (t.ft_1 = function (e, t, r, n) {
        return 0 === e
          ? i(t, r, n)
          : 1 === e || 3 === e
          ? a(t, r, n)
          : 2 === e
          ? o(t, r, n)
          : void 0;
      }),
        (t.ch32 = i),
        (t.maj32 = o),
        (t.p32 = a),
        (t.s0_256 = function (e) {
          return n(e, 2) ^ n(e, 13) ^ n(e, 22);
        }),
        (t.s1_256 = function (e) {
          return n(e, 6) ^ n(e, 11) ^ n(e, 25);
        }),
        (t.g0_256 = function (e) {
          return n(e, 7) ^ n(e, 18) ^ (e >>> 3);
        }),
        (t.g1_256 = function (e) {
          return n(e, 17) ^ n(e, 19) ^ (e >>> 10);
        });
    },
    function (e, t, r) {
      'use strict';
      var n = r(12),
        i = r(30),
        o = r(75),
        a = r(22),
        s = n.sum32,
        u = n.sum32_4,
        c = n.sum32_5,
        f = o.ch32,
        l = o.maj32,
        d = o.s0_256,
        p = o.s1_256,
        h = o.g0_256,
        m = o.g1_256,
        b = i.BlockHash,
        g = [
          1116352408,
          1899447441,
          3049323471,
          3921009573,
          961987163,
          1508970993,
          2453635748,
          2870763221,
          3624381080,
          310598401,
          607225278,
          1426881987,
          1925078388,
          2162078206,
          2614888103,
          3248222580,
          3835390401,
          4022224774,
          264347078,
          604807628,
          770255983,
          1249150122,
          1555081692,
          1996064986,
          2554220882,
          2821834349,
          2952996808,
          3210313671,
          3336571891,
          3584528711,
          113926993,
          338241895,
          666307205,
          773529912,
          1294757372,
          1396182291,
          1695183700,
          1986661051,
          2177026350,
          2456956037,
          2730485921,
          2820302411,
          3259730800,
          3345764771,
          3516065817,
          3600352804,
          4094571909,
          275423344,
          430227734,
          506948616,
          659060556,
          883997877,
          958139571,
          1322822218,
          1537002063,
          1747873779,
          1955562222,
          2024104815,
          2227730452,
          2361852424,
          2428436474,
          2756734187,
          3204031479,
          3329325298,
        ];
      function v() {
        if (!(this instanceof v)) return new v();
        b.call(this),
          (this.h = [
            1779033703,
            3144134277,
            1013904242,
            2773480762,
            1359893119,
            2600822924,
            528734635,
            1541459225,
          ]),
          (this.k = g),
          (this.W = new Array(64));
      }
      n.inherits(v, b),
        (e.exports = v),
        (v.blockSize = 512),
        (v.outSize = 256),
        (v.hmacStrength = 192),
        (v.padLength = 64),
        (v.prototype._update = function (e, t) {
          for (var r = this.W, n = 0; n < 16; n++) r[n] = e[t + n];
          for (; n < r.length; n++)
            r[n] = u(m(r[n - 2]), r[n - 7], h(r[n - 15]), r[n - 16]);
          var i = this.h[0],
            o = this.h[1],
            b = this.h[2],
            g = this.h[3],
            v = this.h[4],
            y = this.h[5],
            w = this.h[6],
            _ = this.h[7];
          for (a(this.k.length === r.length), n = 0; n < r.length; n++) {
            var E = c(_, p(v), f(v, y, w), this.k[n], r[n]),
              S = s(d(i), l(i, o, b));
            (_ = w),
              (w = y),
              (y = v),
              (v = s(g, E)),
              (g = b),
              (b = o),
              (o = i),
              (i = s(E, S));
          }
          (this.h[0] = s(this.h[0], i)),
            (this.h[1] = s(this.h[1], o)),
            (this.h[2] = s(this.h[2], b)),
            (this.h[3] = s(this.h[3], g)),
            (this.h[4] = s(this.h[4], v)),
            (this.h[5] = s(this.h[5], y)),
            (this.h[6] = s(this.h[6], w)),
            (this.h[7] = s(this.h[7], _));
        }),
        (v.prototype._digest = function (e) {
          return 'hex' === e
            ? n.toHex32(this.h, 'big')
            : n.split32(this.h, 'big');
        });
    },
    function (e, t, r) {
      'use strict';
      var n = r(12),
        i = r(30),
        o = r(22),
        a = n.rotr64_hi,
        s = n.rotr64_lo,
        u = n.shr64_hi,
        c = n.shr64_lo,
        f = n.sum64,
        l = n.sum64_hi,
        d = n.sum64_lo,
        p = n.sum64_4_hi,
        h = n.sum64_4_lo,
        m = n.sum64_5_hi,
        b = n.sum64_5_lo,
        g = i.BlockHash,
        v = [
          1116352408,
          3609767458,
          1899447441,
          602891725,
          3049323471,
          3964484399,
          3921009573,
          2173295548,
          961987163,
          4081628472,
          1508970993,
          3053834265,
          2453635748,
          2937671579,
          2870763221,
          3664609560,
          3624381080,
          2734883394,
          310598401,
          1164996542,
          607225278,
          1323610764,
          1426881987,
          3590304994,
          1925078388,
          4068182383,
          2162078206,
          991336113,
          2614888103,
          633803317,
          3248222580,
          3479774868,
          3835390401,
          2666613458,
          4022224774,
          944711139,
          264347078,
          2341262773,
          604807628,
          2007800933,
          770255983,
          1495990901,
          1249150122,
          1856431235,
          1555081692,
          3175218132,
          1996064986,
          2198950837,
          2554220882,
          3999719339,
          2821834349,
          766784016,
          2952996808,
          2566594879,
          3210313671,
          3203337956,
          3336571891,
          1034457026,
          3584528711,
          2466948901,
          113926993,
          3758326383,
          338241895,
          168717936,
          666307205,
          1188179964,
          773529912,
          1546045734,
          1294757372,
          1522805485,
          1396182291,
          2643833823,
          1695183700,
          2343527390,
          1986661051,
          1014477480,
          2177026350,
          1206759142,
          2456956037,
          344077627,
          2730485921,
          1290863460,
          2820302411,
          3158454273,
          3259730800,
          3505952657,
          3345764771,
          106217008,
          3516065817,
          3606008344,
          3600352804,
          1432725776,
          4094571909,
          1467031594,
          275423344,
          851169720,
          430227734,
          3100823752,
          506948616,
          1363258195,
          659060556,
          3750685593,
          883997877,
          3785050280,
          958139571,
          3318307427,
          1322822218,
          3812723403,
          1537002063,
          2003034995,
          1747873779,
          3602036899,
          1955562222,
          1575990012,
          2024104815,
          1125592928,
          2227730452,
          2716904306,
          2361852424,
          442776044,
          2428436474,
          593698344,
          2756734187,
          3733110249,
          3204031479,
          2999351573,
          3329325298,
          3815920427,
          3391569614,
          3928383900,
          3515267271,
          566280711,
          3940187606,
          3454069534,
          4118630271,
          4000239992,
          116418474,
          1914138554,
          174292421,
          2731055270,
          289380356,
          3203993006,
          460393269,
          320620315,
          685471733,
          587496836,
          852142971,
          1086792851,
          1017036298,
          365543100,
          1126000580,
          2618297676,
          1288033470,
          3409855158,
          1501505948,
          4234509866,
          1607167915,
          987167468,
          1816402316,
          1246189591,
        ];
      function y() {
        if (!(this instanceof y)) return new y();
        g.call(this),
          (this.h = [
            1779033703,
            4089235720,
            3144134277,
            2227873595,
            1013904242,
            4271175723,
            2773480762,
            1595750129,
            1359893119,
            2917565137,
            2600822924,
            725511199,
            528734635,
            4215389547,
            1541459225,
            327033209,
          ]),
          (this.k = v),
          (this.W = new Array(160));
      }
      function w(e, t, r, n, i) {
        var o = (e & r) ^ (~e & i);
        return o < 0 && (o += 4294967296), o;
      }
      function _(e, t, r, n, i, o) {
        var a = (t & n) ^ (~t & o);
        return a < 0 && (a += 4294967296), a;
      }
      function E(e, t, r, n, i) {
        var o = (e & r) ^ (e & i) ^ (r & i);
        return o < 0 && (o += 4294967296), o;
      }
      function S(e, t, r, n, i, o) {
        var a = (t & n) ^ (t & o) ^ (n & o);
        return a < 0 && (a += 4294967296), a;
      }
      function x(e, t) {
        var r = a(e, t, 28) ^ a(t, e, 2) ^ a(t, e, 7);
        return r < 0 && (r += 4294967296), r;
      }
      function I(e, t) {
        var r = s(e, t, 28) ^ s(t, e, 2) ^ s(t, e, 7);
        return r < 0 && (r += 4294967296), r;
      }
      function A(e, t) {
        var r = a(e, t, 14) ^ a(e, t, 18) ^ a(t, e, 9);
        return r < 0 && (r += 4294967296), r;
      }
      function k(e, t) {
        var r = s(e, t, 14) ^ s(e, t, 18) ^ s(t, e, 9);
        return r < 0 && (r += 4294967296), r;
      }
      function z(e, t) {
        var r = a(e, t, 1) ^ a(e, t, 8) ^ u(e, t, 7);
        return r < 0 && (r += 4294967296), r;
      }
      function M(e, t) {
        var r = s(e, t, 1) ^ s(e, t, 8) ^ c(e, t, 7);
        return r < 0 && (r += 4294967296), r;
      }
      function T(e, t) {
        var r = a(e, t, 19) ^ a(t, e, 29) ^ u(e, t, 6);
        return r < 0 && (r += 4294967296), r;
      }
      function P(e, t) {
        var r = s(e, t, 19) ^ s(t, e, 29) ^ c(e, t, 6);
        return r < 0 && (r += 4294967296), r;
      }
      n.inherits(y, g),
        (e.exports = y),
        (y.blockSize = 1024),
        (y.outSize = 512),
        (y.hmacStrength = 192),
        (y.padLength = 128),
        (y.prototype._prepareBlock = function (e, t) {
          for (var r = this.W, n = 0; n < 32; n++) r[n] = e[t + n];
          for (; n < r.length; n += 2) {
            var i = T(r[n - 4], r[n - 3]),
              o = P(r[n - 4], r[n - 3]),
              a = r[n - 14],
              s = r[n - 13],
              u = z(r[n - 30], r[n - 29]),
              c = M(r[n - 30], r[n - 29]),
              f = r[n - 32],
              l = r[n - 31];
            (r[n] = p(i, o, a, s, u, c, f, l)),
              (r[n + 1] = h(i, o, a, s, u, c, f, l));
          }
        }),
        (y.prototype._update = function (e, t) {
          this._prepareBlock(e, t);
          var r = this.W,
            n = this.h[0],
            i = this.h[1],
            a = this.h[2],
            s = this.h[3],
            u = this.h[4],
            c = this.h[5],
            p = this.h[6],
            h = this.h[7],
            g = this.h[8],
            v = this.h[9],
            y = this.h[10],
            z = this.h[11],
            M = this.h[12],
            T = this.h[13],
            P = this.h[14],
            O = this.h[15];
          o(this.k.length === r.length);
          for (var j = 0; j < r.length; j += 2) {
            var N = P,
              L = O,
              q = A(g, v),
              R = k(g, v),
              B = w(g, v, y, z, M),
              C = _(g, v, y, z, M, T),
              U = this.k[j],
              D = this.k[j + 1],
              K = r[j],
              H = r[j + 1],
              V = m(N, L, q, R, B, C, U, D, K, H),
              F = b(N, L, q, R, B, C, U, D, K, H);
            (N = x(n, i)),
              (L = I(n, i)),
              (q = E(n, i, a, s, u)),
              (R = S(n, i, a, s, u, c));
            var W = l(N, L, q, R),
              Y = d(N, L, q, R);
            (P = M),
              (O = T),
              (M = y),
              (T = z),
              (y = g),
              (z = v),
              (g = l(p, h, V, F)),
              (v = d(h, h, V, F)),
              (p = u),
              (h = c),
              (u = a),
              (c = s),
              (a = n),
              (s = i),
              (n = l(V, F, W, Y)),
              (i = d(V, F, W, Y));
          }
          f(this.h, 0, n, i),
            f(this.h, 2, a, s),
            f(this.h, 4, u, c),
            f(this.h, 6, p, h),
            f(this.h, 8, g, v),
            f(this.h, 10, y, z),
            f(this.h, 12, M, T),
            f(this.h, 14, P, O);
        }),
        (y.prototype._digest = function (e) {
          return 'hex' === e
            ? n.toHex32(this.h, 'big')
            : n.split32(this.h, 'big');
        });
    },
    function (e, t, r) {
      var n = r(50);
      function i(e) {
        return e.name || e.toString().match(/function (.*?)\s*\(/)[1];
      }
      function o(e) {
        return n.Nil(e) ? '' : i(e.constructor);
      }
      function a(e, t) {
        Error.captureStackTrace && Error.captureStackTrace(e, t);
      }
      function s(e) {
        return n.Function(e)
          ? e.toJSON
            ? e.toJSON()
            : i(e)
          : n.Array(e)
          ? 'Array'
          : e && n.Object(e)
          ? 'Object'
          : void 0 !== e
          ? e
          : '';
      }
      function u(e, t, r) {
        var i = (function (e) {
          return n.Function(e)
            ? ''
            : n.String(e)
            ? JSON.stringify(e)
            : e && n.Object(e)
            ? ''
            : e;
        })(t);
        return (
          'Expected ' +
          s(e) +
          ', got' +
          ('' !== r ? ' ' + r : '') +
          ('' !== i ? ' ' + i : '')
        );
      }
      function c(e, t, r) {
        (r = r || o(t)),
          (this.message = u(e, t, r)),
          a(this, c),
          (this.__type = e),
          (this.__value = t),
          (this.__valueTypeName = r);
      }
      function f(e, t, r, n, i) {
        e
          ? ((i = i || o(n)),
            (this.message = (function (e, t, r, n, i) {
              var o = '" of type ';
              return (
                'key' === t && (o = '" with key type '),
                u('property "' + s(r) + o + s(e), n, i)
              );
            })(e, r, t, n, i)))
          : (this.message = 'Unexpected property "' + t + '"'),
          a(this, c),
          (this.__label = r),
          (this.__property = t),
          (this.__type = e),
          (this.__value = n),
          (this.__valueTypeName = i);
      }
      (c.prototype = Object.create(Error.prototype)),
        (c.prototype.constructor = c),
        (f.prototype = Object.create(Error.prototype)),
        (f.prototype.constructor = c),
        (e.exports = {
          TfTypeError: c,
          TfPropertyTypeError: f,
          tfCustomError: function (e, t) {
            return new c(e, {}, t);
          },
          tfSubError: function (e, t, r) {
            return (
              e instanceof f
                ? ((t = t + '.' + e.__property),
                  (e = new f(
                    e.__type,
                    t,
                    e.__label,
                    e.__value,
                    e.__valueTypeName
                  )))
                : e instanceof c &&
                  (e = new f(e.__type, t, r, e.__value, e.__valueTypeName)),
              a(e),
              e
            );
          },
          tfJSON: s,
          getValueTypeName: o,
        });
    },
    function (e, t, r) {
      var n = r(29);
      function i(e, t) {
        if (void 0 !== t && e[0] !== t)
          throw new Error('Invalid network version');
        if (33 === e.length)
          return { version: e[0], privateKey: e.slice(1, 33), compressed: !1 };
        if (34 !== e.length) throw new Error('Invalid WIF length');
        if (1 !== e[33]) throw new Error('Invalid compression flag');
        return { version: e[0], privateKey: e.slice(1, 33), compressed: !0 };
      }
      function o(e, t, r) {
        var n = new Buffer(r ? 34 : 33);
        return n.writeUInt8(e, 0), t.copy(n, 1), r && (n[33] = 1), n;
      }
      e.exports = {
        decode: function (e, t) {
          return i(n.decode(e), t);
        },
        decodeRaw: i,
        encode: function (e, t, r) {
          return 'number' == typeof e
            ? n.encode(o(e, t, r))
            : n.encode(o(e.version, e.privateKey, e.compressed));
        },
        encodeRaw: o,
      };
    },
    function (e) {
      e.exports = JSON.parse(
        '{"COMPRESSED_TYPE_INVALID":"compressed should be a boolean","EC_PRIVATE_KEY_TYPE_INVALID":"private key should be a Buffer","EC_PRIVATE_KEY_LENGTH_INVALID":"private key length is invalid","EC_PRIVATE_KEY_RANGE_INVALID":"private key range is invalid","EC_PRIVATE_KEY_TWEAK_ADD_FAIL":"tweak out of range or resulting private key is invalid","EC_PRIVATE_KEY_TWEAK_MUL_FAIL":"tweak out of range","EC_PRIVATE_KEY_EXPORT_DER_FAIL":"couldn\'t export to DER format","EC_PRIVATE_KEY_IMPORT_DER_FAIL":"couldn\'t import from DER format","EC_PUBLIC_KEYS_TYPE_INVALID":"public keys should be an Array","EC_PUBLIC_KEYS_LENGTH_INVALID":"public keys Array should have at least 1 element","EC_PUBLIC_KEY_TYPE_INVALID":"public key should be a Buffer","EC_PUBLIC_KEY_LENGTH_INVALID":"public key length is invalid","EC_PUBLIC_KEY_PARSE_FAIL":"the public key could not be parsed or is invalid","EC_PUBLIC_KEY_CREATE_FAIL":"private was invalid, try again","EC_PUBLIC_KEY_TWEAK_ADD_FAIL":"tweak out of range or resulting public key is invalid","EC_PUBLIC_KEY_TWEAK_MUL_FAIL":"tweak out of range","EC_PUBLIC_KEY_COMBINE_FAIL":"the sum of the public keys is not valid","ECDH_FAIL":"scalar was invalid (zero or overflow)","ECDSA_SIGNATURE_TYPE_INVALID":"signature should be a Buffer","ECDSA_SIGNATURE_LENGTH_INVALID":"signature length is invalid","ECDSA_SIGNATURE_PARSE_FAIL":"couldn\'t parse signature","ECDSA_SIGNATURE_PARSE_DER_FAIL":"couldn\'t parse DER signature","ECDSA_SIGNATURE_SERIALIZE_DER_FAIL":"couldn\'t serialize signature to DER format","ECDSA_SIGN_FAIL":"nonce generation function failed or private key is invalid","ECDSA_RECOVER_FAIL":"couldn\'t recover public key from signature","MSG32_TYPE_INVALID":"message should be a Buffer","MSG32_LENGTH_INVALID":"message length is invalid","OPTIONS_TYPE_INVALID":"options should be an Object","OPTIONS_DATA_TYPE_INVALID":"options.data should be a Buffer","OPTIONS_DATA_LENGTH_INVALID":"options.data length is invalid","OPTIONS_NONCEFN_TYPE_INVALID":"options.noncefn should be a Function","RECOVERY_ID_TYPE_INVALID":"recovery should be a Number","RECOVERY_ID_VALUE_INVALID":"recovery should have value between -1 and 4","TWEAK_TYPE_INVALID":"tweak should be a Buffer","TWEAK_LENGTH_INVALID":"tweak length is invalid"}'
      );
    },
    function (e, t, r) {
      const n = r(2).Buffer;
      e.exports = {
        decode: function (e, t, r) {
          (t = t || 4), (r = void 0 === r || r);
          const n = e.length;
          if (0 === n) return 0;
          if (n > t) throw new TypeError('Script number overflow');
          if (r && 0 == (127 & e[n - 1]) && (n <= 1 || 0 == (128 & e[n - 2])))
            throw new Error('Non-minimally encoded script number');
          if (5 === n) {
            const t = e.readUInt32LE(0),
              r = e.readUInt8(4);
            return 128 & r
              ? -(4294967296 * (-129 & r) + t)
              : 4294967296 * r + t;
          }
          let i = 0;
          for (var o = 0; o < n; ++o) i |= e[o] << (8 * o);
          return 128 & e[n - 1] ? -(i & ~(128 << (8 * (n - 1)))) : i;
        },
        encode: function (e) {
          let t = Math.abs(e);
          const r = (function (e) {
              return e > 2147483647
                ? 5
                : e > 8388607
                ? 4
                : e > 32767
                ? 3
                : e > 127
                ? 2
                : e > 0
                ? 1
                : 0;
            })(t),
            i = n.allocUnsafe(r),
            o = e < 0;
          for (var a = 0; a < r; ++a) i.writeUInt8(255 & t, a), (t >>= 8);
          return (
            128 & i[r - 1]
              ? i.writeUInt8(o ? 128 : 0, r - 1)
              : o && (i[r - 1] |= 128),
            i
          );
        },
      };
    },
    function (e, t, r) {
      'use strict';
      var n = r(2).Buffer;
      function i(e) {
        if (e < 0 || e > 9007199254740991 || e % 1 != 0)
          throw new RangeError('value out of range');
      }
      function o(e) {
        return i(e), e < 253 ? 1 : e <= 65535 ? 3 : e <= 4294967295 ? 5 : 9;
      }
      e.exports = {
        encode: function e(t, r, a) {
          if ((i(t), r || (r = n.allocUnsafe(o(t))), !n.isBuffer(r)))
            throw new TypeError('buffer must be a Buffer instance');
          return (
            a || (a = 0),
            t < 253
              ? (r.writeUInt8(t, a), (e.bytes = 1))
              : t <= 65535
              ? (r.writeUInt8(253, a), r.writeUInt16LE(t, a + 1), (e.bytes = 3))
              : t <= 4294967295
              ? (r.writeUInt8(254, a), r.writeUInt32LE(t, a + 1), (e.bytes = 5))
              : (r.writeUInt8(255, a),
                r.writeUInt32LE(t >>> 0, a + 1),
                r.writeUInt32LE((t / 4294967296) | 0, a + 5),
                (e.bytes = 9)),
            r
          );
        },
        decode: function e(t, r) {
          if (!n.isBuffer(t))
            throw new TypeError('buffer must be a Buffer instance');
          r || (r = 0);
          var o = t.readUInt8(r);
          if (o < 253) return (e.bytes = 1), o;
          if (253 === o) return (e.bytes = 3), t.readUInt16LE(r + 1);
          if (254 === o) return (e.bytes = 5), t.readUInt32LE(r + 1);
          e.bytes = 9;
          var a = t.readUInt32LE(r + 1),
            s = 4294967296 * t.readUInt32LE(r + 5) + a;
          return i(s), s;
        },
        encodingLength: o,
      };
    },
    function (e, t, r) {
      const n = r(21),
        i = r(47),
        o = r(3),
        a = r(13),
        s = r(79),
        u = r(11),
        c = o.maybe(
          o.compile({
            compressed: a.maybe(a.Boolean),
            network: a.maybe(a.Network),
          })
        );
      function f(e, t, r) {
        (r = r || {}),
          (this.compressed = void 0 === r.compressed || r.compressed),
          (this.network = r.network || u.bitcoin),
          (this.__d = e || null),
          (this.__Q = null),
          t && (this.__Q = n.pointCompress(t, this.compressed));
      }
      function l(e, t) {
        if ((o(a.Buffer256bit, e), !n.isPrivate(e)))
          throw new TypeError('Private key not in range [1, n)');
        return o(c, t), new f(e, null, t);
      }
      Object.defineProperty(f.prototype, 'privateKey', {
        enumerable: !1,
        get: function () {
          return this.__d;
        },
      }),
        Object.defineProperty(f.prototype, 'publicKey', {
          get: function () {
            return (
              this.__Q ||
                (this.__Q = n.pointFromScalar(this.__d, this.compressed)),
              this.__Q
            );
          },
        }),
        (f.prototype.toWIF = function () {
          if (!this.__d) throw new Error('Missing private key');
          return s.encode(this.network.wif, this.__d, this.compressed);
        }),
        (f.prototype.sign = function (e) {
          if (!this.__d) throw new Error('Missing private key');
          return n.sign(e, this.__d);
        }),
        (f.prototype.verify = function (e, t) {
          return n.verify(e, this.publicKey, t);
        }),
        (e.exports = {
          makeRandom: function (e) {
            o(c, e);
            const t = (e = e || {}).rng || i;
            let r;
            do {
              (r = t(32)), o(a.Buffer256bit, r);
            } while (!n.isPrivate(r));
            return l(r, e);
          },
          fromPrivateKey: l,
          fromPublicKey: function (e, t) {
            return o(n.isPoint, e), o(c, t), new f(null, e, t);
          },
          fromWIF: function (e, t) {
            const r = s.decode(e),
              n = r.version;
            if (a.Array(t)) {
              if (
                !(t = t
                  .filter(function (e) {
                    return n === e.wif;
                  })
                  .pop())
              )
                throw new Error('Unknown network version');
            } else if (((t = t || u.bitcoin), n !== t.wif))
              throw new Error('Invalid network version');
            return l(r.privateKey, { compressed: r.compressed, network: t });
          },
        });
    },
    function (e, t, r) {
      const n = r(2).Buffer,
        i = r(36),
        o = r(29),
        a = r(0),
        s = r(11),
        u = r(3),
        c = r(13),
        f = r(53);
      function l(e) {
        const t = o.decode(e);
        if (t.length < 21) throw new TypeError(e + ' is too short');
        if (t.length > 21) throw new TypeError(e + ' is too long');
        return { version: t.readUInt8(0), hash: t.slice(1) };
      }
      function d(e) {
        const t = i.decode(e),
          r = i.fromWords(t.words.slice(1));
        return { version: t.words[0], prefix: t.prefix, data: n.from(r) };
      }
      e.exports = {
        fromBase58Check: l,
        fromBech32: d,
        fromOutputScript: function (e, t) {
          t = t || s.bitcoin;
          try {
            return f.p2pkh({ output: e, network: t }).address;
          } catch (e) {}
          try {
            return f.p2sh({ output: e, network: t }).address;
          } catch (e) {}
          try {
            return f.p2wpkh({ output: e, network: t }).address;
          } catch (e) {}
          try {
            return f.p2wsh({ output: e, network: t }).address;
          } catch (e) {}
          throw new Error(a.toASM(e) + ' has no matching Address');
        },
        toBase58Check: function (e, t) {
          u(c.tuple(c.Hash160bit, c.UInt8), arguments);
          const r = n.allocUnsafe(21);
          return r.writeUInt8(t, 0), e.copy(r, 1), o.encode(r);
        },
        toBech32: function (e, t, r) {
          const n = i.toWords(e);
          return n.unshift(t), i.encode(r, n);
        },
        toOutputScript: function (e, t) {
          let r;
          t = t || s.bitcoin;
          try {
            r = l(e);
          } catch (e) {}
          if (r) {
            if (r.version === t.pubKeyHash)
              return f.p2pkh({ hash: r.hash }).output;
            if (r.version === t.scriptHash)
              return f.p2sh({ hash: r.hash }).output;
          } else {
            try {
              r = d(e);
            } catch (e) {}
            if (r) {
              if (r.prefix !== t.bech32)
                throw new Error(e + ' has an invalid prefix');
              if (0 === r.version) {
                if (20 === r.data.length)
                  return f.p2wpkh({ hash: r.data }).output;
                if (32 === r.data.length)
                  return f.p2wsh({ hash: r.data }).output;
              }
            }
          }
          throw new Error(e + ' has no matching Script');
        },
      };
    },
    function (e, t, r) {
      const n = r(0),
        i = r(1);
      function o(e) {
        const t = n.compile(e);
        return 22 === t.length && t[0] === i.OP_0 && 20 === t[1];
      }
      (o.toJSON = function () {
        return 'Witness pubKeyHash output';
      }),
        (e.exports = { check: o });
    },
    function (e, t, r) {
      const n = r(0),
        i = r(1);
      function o(e) {
        const t = n.compile(e);
        return 34 === t.length && t[0] === i.OP_0 && 32 === t[1];
      }
      (o.toJSON = function () {
        return 'Witness scriptHash output';
      }),
        (e.exports = { check: o });
    },
    function (e, t, r) {
      r(197).config(),
        (e.exports = {
          TWITTER_CONSUMER_KEY: process.env.TWITTER_CONSUMER_KEY,
          TWITTER_CONSUMER_SECRET: process.env.TWITTER_CONSUMER_SECRET,
          TWITTER_ACCESS_TOKEN: process.env.TWITTER_ACCESS_TOKEN,
          TWITTER_ACCESS_TOKEN_SECRET: process.env.TWITTER_ACCESS_TOKEN_SECRET,
          PERSPECTIVE_API_KEY: process.env.PERSPECTIVE_API_KEY,
          PERSPECTIVE_API_THRESHOLD: process.env.PERSPECTIVE_API_THRESHOLD,
          BLUZELLE_MNEMONIC:
            'ceiling cat potato program palm behave say traffic erupt fault frozen siege good lunch split kidney jeans express help input square violin vacuum arm',
          BLUZELLE_ENDPOINT:
            'https://client.sentry.testnet.public.bluzelle.com:1317/',
          BLUZELLE_CHAIN_ID: 'bluzelle-testnet-public-9',
          TUMBLR_CONSUMER_KEY: process.env.TUMBLR_CONSUMER_KEY,
          TUMBLR_CONSUMER_SECRET: process.env.TUMBLR_CONSUMER_SECRET,
          TUMBLR_TOKEN: process.env.TUMBLR_TOKEN,
          TUMBLR_TOKEN_SECRET: process.env.TUMBLR_TOKEN_SECRET,
        });
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    function (e, t, r) {
      const { bluzelle: n } = r(105),
        {
          BLUZELLE_MNEMONIC: i,
          BLUZELLE_CHAIN_ID: o,
          BLUZELLE_ENDPOINT: a,
        } = r(87);
      async function s(e) {
        var t = {},
          r = e;
        if (t[r]) return console.log(t), t[r];
        {
          const s = { uuid: e, mnemonic: i, endpoint: a, chain_id: o };
          return (val = await n(s)), (t[r] = val), val;
        }
      }
      e.exports = {
        fetch: async function (e, t) {
          const r = await s(e);
          return await r.read(t);
        },
        save: async function (e, t, r) {
          const n = await s(e);
          console.log('Fetched bluzelle client', n);
          try {
            await n.create(t, r);
          } catch (e) {
            console.log('Error storing in db', e);
          }
          return console.log('Storing tweet in db', n), await n.read(t);
        },
        fetchAll: async function (e) {
          const t = await s(e);
          return await t.keyValues();
        },
        keyExists: async function (e, t) {
          const r = await s(e);
          return await r.has(t);
        },
      };
    },
    ,
    ,
    ,
    function (e, t, r) {
      'use strict';
      Object.defineProperty(t, '__esModule', { value: !0 }),
        (t.bluzelle = t.mnemonicToAddress = t.API = void 0);
      const n = r(44);
      var i = r(44);
      Object.defineProperty(t, 'API', {
        enumerable: !0,
        get: function () {
          return i.API;
        },
      });
      var o = r(44);
      Object.defineProperty(t, 'mnemonicToAddress', {
        enumerable: !0,
        get: function () {
          return o.mnemonicToAddress;
        },
      }),
        (t.bluzelle = (e) => new n.API(e));
    },
    function (e, t, r) {
      /*!
       * @overview es6-promise - a tiny implementation of Promises/A+.
       * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
       * @license   Licensed under MIT license
       *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
       * @version   v4.2.8+1e68dce6
       */ var n;
      (n = function () {
        'use strict';
        function e(e) {
          return 'function' == typeof e;
        }
        var t = Array.isArray
            ? Array.isArray
            : function (e) {
                return '[object Array]' === Object.prototype.toString.call(e);
              },
          r = 0,
          n = void 0,
          i = void 0,
          o = function (e, t) {
            (d[r] = e), (d[r + 1] = t), 2 === (r += 2) && (i ? i(p) : v());
          },
          a = 'undefined' != typeof window ? window : void 0,
          s = a || {},
          u = s.MutationObserver || s.WebKitMutationObserver,
          c =
            'undefined' == typeof self &&
            'undefined' != typeof process &&
            '[object process]' === {}.toString.call(process),
          f =
            'undefined' != typeof Uint8ClampedArray &&
            'undefined' != typeof importScripts &&
            'undefined' != typeof MessageChannel;
        function l() {
          var e = setTimeout;
          return function () {
            return e(p, 1);
          };
        }
        var d = new Array(1e3);
        function p() {
          for (var e = 0; e < r; e += 2)
            (0, d[e])(d[e + 1]), (d[e] = void 0), (d[e + 1] = void 0);
          r = 0;
        }
        var h,
          m,
          b,
          g,
          v = void 0;
        function y(e, t) {
          var r = this,
            n = new this.constructor(E);
          void 0 === n[_] && O(n);
          var i = r._state;
          if (i) {
            var a = arguments[i - 1];
            o(function () {
              return T(i, n, a, r._result);
            });
          } else z(r, n, e, t);
          return n;
        }
        function w(e) {
          if (e && 'object' == typeof e && e.constructor === this) return e;
          var t = new this(E);
          return x(t, e), t;
        }
        c
          ? (v = function () {
              return process.nextTick(p);
            })
          : u
          ? ((m = 0),
            (b = new u(p)),
            (g = document.createTextNode('')),
            b.observe(g, { characterData: !0 }),
            (v = function () {
              g.data = m = ++m % 2;
            }))
          : f
          ? (((h = new MessageChannel()).port1.onmessage = p),
            (v = function () {
              return h.port2.postMessage(0);
            }))
          : (v =
              void 0 === a
                ? (function () {
                    try {
                      var e = Function('return this')().require('vertx');
                      return void 0 !== (n = e.runOnLoop || e.runOnContext)
                        ? function () {
                            n(p);
                          }
                        : l();
                    } catch (e) {
                      return l();
                    }
                  })()
                : l());
        var _ = Math.random().toString(36).substring(2);
        function E() {}
        function S(t, r, n) {
          r.constructor === t.constructor &&
          n === y &&
          r.constructor.resolve === w
            ? (function (e, t) {
                1 === t._state
                  ? A(e, t._result)
                  : 2 === t._state
                  ? k(e, t._result)
                  : z(
                      t,
                      void 0,
                      function (t) {
                        return x(e, t);
                      },
                      function (t) {
                        return k(e, t);
                      }
                    );
              })(t, r)
            : void 0 === n
            ? A(t, r)
            : e(n)
            ? (function (e, t, r) {
                o(function (e) {
                  var n = !1,
                    i = (function (e, t, r, n) {
                      try {
                        e.call(t, r, n);
                      } catch (e) {
                        return e;
                      }
                    })(
                      r,
                      t,
                      function (r) {
                        n || ((n = !0), t !== r ? x(e, r) : A(e, r));
                      },
                      function (t) {
                        n || ((n = !0), k(e, t));
                      },
                      e._label
                    );
                  !n && i && ((n = !0), k(e, i));
                }, e);
              })(t, r, n)
            : A(t, r);
        }
        function x(e, t) {
          if (e === t)
            k(e, new TypeError('You cannot resolve a promise with itself'));
          else if (
            ((i = typeof (n = t)),
            null === n || ('object' !== i && 'function' !== i))
          )
            A(e, t);
          else {
            var r = void 0;
            try {
              r = t.then;
            } catch (t) {
              return void k(e, t);
            }
            S(e, t, r);
          }
          var n, i;
        }
        function I(e) {
          e._onerror && e._onerror(e._result), M(e);
        }
        function A(e, t) {
          void 0 === e._state &&
            ((e._result = t),
            (e._state = 1),
            0 !== e._subscribers.length && o(M, e));
        }
        function k(e, t) {
          void 0 === e._state && ((e._state = 2), (e._result = t), o(I, e));
        }
        function z(e, t, r, n) {
          var i = e._subscribers,
            a = i.length;
          (e._onerror = null),
            (i[a] = t),
            (i[a + 1] = r),
            (i[a + 2] = n),
            0 === a && e._state && o(M, e);
        }
        function M(e) {
          var t = e._subscribers,
            r = e._state;
          if (0 !== t.length) {
            for (
              var n = void 0, i = void 0, o = e._result, a = 0;
              a < t.length;
              a += 3
            )
              (n = t[a]), (i = t[a + r]), n ? T(r, n, i, o) : i(o);
            e._subscribers.length = 0;
          }
        }
        function T(t, r, n, i) {
          var o = e(n),
            a = void 0,
            s = void 0,
            u = !0;
          if (o) {
            try {
              a = n(i);
            } catch (e) {
              (u = !1), (s = e);
            }
            if (r === a)
              return void k(
                r,
                new TypeError(
                  'A promises callback cannot return that same promise.'
                )
              );
          } else a = i;
          void 0 !== r._state ||
            (o && u
              ? x(r, a)
              : !1 === u
              ? k(r, s)
              : 1 === t
              ? A(r, a)
              : 2 === t && k(r, a));
        }
        var P = 0;
        function O(e) {
          (e[_] = P++),
            (e._state = void 0),
            (e._result = void 0),
            (e._subscribers = []);
        }
        var j = (function () {
            function e(e, r) {
              (this._instanceConstructor = e),
                (this.promise = new e(E)),
                this.promise[_] || O(this.promise),
                t(r)
                  ? ((this.length = r.length),
                    (this._remaining = r.length),
                    (this._result = new Array(this.length)),
                    0 === this.length
                      ? A(this.promise, this._result)
                      : ((this.length = this.length || 0),
                        this._enumerate(r),
                        0 === this._remaining && A(this.promise, this._result)))
                  : k(
                      this.promise,
                      new Error('Array Methods must be provided an Array')
                    );
            }
            return (
              (e.prototype._enumerate = function (e) {
                for (var t = 0; void 0 === this._state && t < e.length; t++)
                  this._eachEntry(e[t], t);
              }),
              (e.prototype._eachEntry = function (e, t) {
                var r = this._instanceConstructor,
                  n = r.resolve;
                if (n === w) {
                  var i = void 0,
                    o = void 0,
                    a = !1;
                  try {
                    i = e.then;
                  } catch (e) {
                    (a = !0), (o = e);
                  }
                  if (i === y && void 0 !== e._state)
                    this._settledAt(e._state, t, e._result);
                  else if ('function' != typeof i)
                    this._remaining--, (this._result[t] = e);
                  else if (r === N) {
                    var s = new r(E);
                    a ? k(s, o) : S(s, e, i), this._willSettleAt(s, t);
                  } else
                    this._willSettleAt(
                      new r(function (t) {
                        return t(e);
                      }),
                      t
                    );
                } else this._willSettleAt(n(e), t);
              }),
              (e.prototype._settledAt = function (e, t, r) {
                var n = this.promise;
                void 0 === n._state &&
                  (this._remaining--,
                  2 === e ? k(n, r) : (this._result[t] = r)),
                  0 === this._remaining && A(n, this._result);
              }),
              (e.prototype._willSettleAt = function (e, t) {
                var r = this;
                z(
                  e,
                  void 0,
                  function (e) {
                    return r._settledAt(1, t, e);
                  },
                  function (e) {
                    return r._settledAt(2, t, e);
                  }
                );
              }),
              e
            );
          })(),
          N = (function () {
            function t(e) {
              (this[_] = P++),
                (this._result = this._state = void 0),
                (this._subscribers = []),
                E !== e &&
                  ('function' != typeof e &&
                    (function () {
                      throw new TypeError(
                        'You must pass a resolver function as the first argument to the promise constructor'
                      );
                    })(),
                  this instanceof t
                    ? (function (e, t) {
                        try {
                          t(
                            function (t) {
                              x(e, t);
                            },
                            function (t) {
                              k(e, t);
                            }
                          );
                        } catch (t) {
                          k(e, t);
                        }
                      })(this, e)
                    : (function () {
                        throw new TypeError(
                          "Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function."
                        );
                      })());
            }
            return (
              (t.prototype.catch = function (e) {
                return this.then(null, e);
              }),
              (t.prototype.finally = function (t) {
                var r = this.constructor;
                return e(t)
                  ? this.then(
                      function (e) {
                        return r.resolve(t()).then(function () {
                          return e;
                        });
                      },
                      function (e) {
                        return r.resolve(t()).then(function () {
                          throw e;
                        });
                      }
                    )
                  : this.then(t, t);
              }),
              t
            );
          })();
        return (
          (N.prototype.then = y),
          (N.all = function (e) {
            return new j(this, e).promise;
          }),
          (N.race = function (e) {
            var r = this;
            return t(e)
              ? new r(function (t, n) {
                  for (var i = e.length, o = 0; o < i; o++)
                    r.resolve(e[o]).then(t, n);
                })
              : new r(function (e, t) {
                  return t(new TypeError('You must pass an array to race.'));
                });
          }),
          (N.resolve = w),
          (N.reject = function (e) {
            var t = new this(E);
            return k(t, e), t;
          }),
          (N._setScheduler = function (e) {
            i = e;
          }),
          (N._setAsap = function (e) {
            o = e;
          }),
          (N._asap = o),
          (N.polyfill = function () {
            var e = void 0;
            if ('undefined' != typeof global) e = global;
            else if ('undefined' != typeof self) e = self;
            else
              try {
                e = Function('return this')();
              } catch (e) {
                throw new Error(
                  'polyfill failed because global object is unavailable in this environment'
                );
              }
            var t = e.Promise;
            if (t) {
              var r = null;
              try {
                r = Object.prototype.toString.call(t.resolve());
              } catch (e) {}
              if ('[object Promise]' === r && !t.cast) return;
            }
            e.Promise = N;
          }),
          (N.Promise = N),
          N
        );
      }),
        (e.exports = n());
    },
    function (e, t, r) {
      'use strict';
      var n,
        i,
        o,
        a,
        s,
        u,
        c =
          (this && this.__classPrivateFieldSet) ||
          function (e, t, r) {
            if (!t.has(e))
              throw new TypeError(
                'attempted to set private field on non-instance'
              );
            return t.set(e, r), r;
          },
        f =
          (this && this.__classPrivateFieldGet) ||
          function (e, t) {
            if (!t.has(e))
              throw new TypeError(
                'attempted to get private field on non-instance'
              );
            return t.get(e);
          };
      Object.defineProperty(t, '__esModule', { value: !0 }),
        (t.CommunicationService = void 0);
      const l = r(63),
        d = r(64),
        p = r(61);
      class h {
        constructor(e) {
          n.set(this, void 0),
            i.set(this, []),
            o.set(this, 1),
            a.set(this, Promise.resolve()),
            s.set(this, void 0),
            u.set(this, !1),
            c(this, n, e);
        }
        static create(e) {
          return new h(e);
        }
        setMaxMessagesPerTransaction(e) {
          c(this, o, e);
        }
        startTransaction(e) {
          c(this, s, e);
        }
        endTransaction() {
          c(this, s, void 0);
        }
        withTransaction(e, t = { memo: '' }) {
          if (f(this, s))
            throw new Error('withTransaction() can not be nested');
          this.startTransaction(t);
          const r = e();
          return this.endTransaction(), r;
        }
        sendMessage(e, t) {
          const r = new Promise((r, n) => {
            f(this, i).push({
              message: e,
              gasInfo: t,
              resolve: r,
              reject: n,
              transaction: f(this, s),
            });
          });
          return (
            1 === f(this, i).length &&
              !f(this, u) &&
              c(
                this,
                a,
                f(this, a).then(this.checkMessageQueueNeedsTransmit.bind(this))
              ),
            r
          );
        }
        checkMessageQueueNeedsTransmit() {
          l.Some(f(this, i))
            .flatMap((e) => (e.length ? l.Some(f(this, i)) : l.None()))
            .map((e) => [e[0].transaction, e])
            .map(([e, t]) => [
              d.takeWhile(
                t,
                (t, r) =>
                  t.transaction === e &&
                  (void 0 !== t.transaction || r < f(this, o))
              ),
              t,
            ])
            .map(([e, t]) => (c(this, i, d.without(t, ...e)), e))
            .map((e) =>
              this.transmitTransaction(e).then(
                this.checkMessageQueueNeedsTransmit.bind(this)
              )
            );
        }
        transmitTransaction(e) {
          let t;
          return (
            c(this, u, !0),
            f(this, n)
              .getCosmos()
              .then((e) => (t = e))
              .then(() => t.getAccounts(f(this, n).address))
              .then((r) => {
                var i;
                return l
                  .Some({
                    msgs: e.map((e) => e.message),
                    chain_id: t.chainId,
                    fee: v(y(e)),
                    memo:
                      (null === (i = e[0].transaction) || void 0 === i
                        ? void 0
                        : i.memo) || 'no memo',
                    account_number: r.result.value.account_number,
                    sequence: r.result.value.sequence,
                  })
                  .map(t.newStdMsg.bind(t))
                  .map((e) =>
                    t.sign(e, t.getECPairPriv(f(this, n).mnemonic), 'block')
                  )
                  .map(t.broadcast.bind(t))
                  .map(p.passThrough(() => c(this, u, !1)))
                  .map((t) =>
                    t
                      .then(m)
                      .then(b)
                      .then((e) => ({ ...e, height: parseInt(e.height) }))
                      .then(g(e))
                      .catch((t) => g(e)({ error: t }))
                  )
                  .join();
              })
          );
        }
      }
      (t.CommunicationService = h),
        (n = new WeakMap()),
        (i = new WeakMap()),
        (o = new WeakMap()),
        (a = new WeakMap()),
        (s = new WeakMap()),
        (u = new WeakMap());
      const m = (e) => ({
          ...e,
          data: e.data ? Buffer.from(e.data, 'hex').toString() : void 0,
        }),
        b = (e) => ({
          ...e,
          data:
            void 0 !== e.data
              ? JSON.parse(`[${e.data.split('}{').join('},{')}]`)
              : void 0,
        }),
        g = (e) => (t) =>
          e.reduce((r, n) => {
            if (t.error)
              return n.reject({
                txhash: t.txhash,
                height: t.height,
                failedMsg: void 0,
                failedMsgIdx: void 0,
                error: t.error,
              });
            if (/signature verification failed/.test(t.raw_log))
              return n.reject({
                txhash: t.txhash,
                height: t.height,
                failedMsg: void 0,
                failedMsgIdx: void 0,
                error: 'Unknown error',
              });
            if (/insufficient fee/.test(t.raw_log)) {
              let [e, r] = t.raw_log.split(/[:;]/);
              return n.reject({
                txhash: t.txhash,
                height: t.height,
                failedMsg: void 0,
                failedMsgIdx: void 0,
                error: r.trim(),
              });
            }
            if (/failed to execute message/.test(t.raw_log)) {
              let [r, i, o, a] = t.raw_log.split(':');
              return (
                (a = parseInt(a)),
                n.reject({
                  txhash: t.txhash,
                  height: t.height,
                  failedMsg: e[a].message,
                  failedMsgIdx: parseInt(a),
                  error: i.trim(),
                })
              );
            }
            return !1 === /^\[.*\]$/.test(t.raw_log)
              ? n.reject({
                  txhash: t.txhash,
                  height: t.height,
                  failedMsg: void 0,
                  failedMsgIdx: void 0,
                  error: t.raw_log,
                })
              : (n.resolve && n.resolve(r)) || r;
          }, t),
        v = ({ max_fee: e, gas_price: t = 10, max_gas: r = 2e5 }) => ({
          amount: [{ denom: 'ubnt', amount: (e || r * t).toString() }],
          gas: r.toString(),
        }),
        y = (e) =>
          e.reduce(
            (e, t) => ({
              max_gas: (e.max_gas || 0) + (t.gasInfo.max_gas || 2e5),
              max_fee: (e.max_fee || 0) + (t.gasInfo.max_fee || 0),
              gas_price: Math.max(e.gas_price || 0, t.gasInfo.gas_price || 0),
            }),
            {}
          );
    },
    function (e, t, r) {
      'use strict';
      Object.defineProperty(t, '__esModule', { value: !0 }),
        (t.assert = void 0),
        (t.assert = (e, t) => {
          if (!e) throw new Error(t);
        });
    },
    function (e, t, r) {
      'use strict';
      Object.defineProperty(t, '__esModule', { value: !0 });
      const n = r(26),
        i = r(65),
        o = r(47),
        a = r(68);
      let s = a._default;
      const u =
        'A wordlist is required but a default could not be found.\nPlease explicitly pass a 2048 word array explicitly.';
      function c(e, t, r) {
        for (; e.length < r; ) e = t + e;
        return e;
      }
      function f(e) {
        return parseInt(e, 2);
      }
      function l(e) {
        return e.map((e) => c(e.toString(2), '0', 8)).join('');
      }
      function d(e) {
        const t = (8 * e.length) / 32;
        return l([...n('sha256').update(e).digest()]).slice(0, t);
      }
      function p(e) {
        return 'mnemonic' + (e || '');
      }
      function h(e, t) {
        if (!(t = t || s)) throw new Error(u);
        const r = (e || '').normalize('NFKD').split(' ');
        if (r.length % 3 != 0) throw new Error('Invalid mnemonic');
        const n = r
            .map((e) => {
              const r = t.indexOf(e);
              if (-1 === r) throw new Error('Invalid mnemonic');
              return c(r.toString(2), '0', 11);
            })
            .join(''),
          i = 32 * Math.floor(n.length / 33),
          o = n.slice(0, i),
          a = n.slice(i),
          l = o.match(/(.{1,8})/g).map(f);
        if (l.length < 16) throw new Error('Invalid entropy');
        if (l.length > 32) throw new Error('Invalid entropy');
        if (l.length % 4 != 0) throw new Error('Invalid entropy');
        const p = Buffer.from(l);
        if (d(p) !== a) throw new Error('Invalid mnemonic checksum');
        return p.toString('hex');
      }
      function m(e, t) {
        if ((Buffer.isBuffer(e) || (e = Buffer.from(e, 'hex')), !(t = t || s)))
          throw new Error(u);
        if (e.length < 16) throw new TypeError('Invalid entropy');
        if (e.length > 32) throw new TypeError('Invalid entropy');
        if (e.length % 4 != 0) throw new TypeError('Invalid entropy');
        const r = (l([...e]) + d(e)).match(/(.{1,11})/g).map((e) => {
          const r = f(e);
          return t[r];
        });
        return 'あいこくしん' === t[0] ? r.join('　') : r.join(' ');
      }
      (t.mnemonicToSeedSync = function (e, t) {
        const r = Buffer.from((e || '').normalize('NFKD'), 'utf8'),
          n = Buffer.from(p((t || '').normalize('NFKD')), 'utf8');
        return i.pbkdf2Sync(r, n, 2048, 64, 'sha512');
      }),
        (t.mnemonicToSeed = function (e, t) {
          return new Promise((r, n) => {
            try {
              const o = Buffer.from((e || '').normalize('NFKD'), 'utf8'),
                a = Buffer.from(p((t || '').normalize('NFKD')), 'utf8');
              i.pbkdf2(o, a, 2048, 64, 'sha512', (e, t) => (e ? n(e) : r(t)));
            } catch (e) {
              return n(e);
            }
          });
        }),
        (t.mnemonicToEntropy = h),
        (t.entropyToMnemonic = m),
        (t.generateMnemonic = function (e, t, r) {
          if ((e = e || 128) % 32 != 0) throw new TypeError('Invalid entropy');
          return m((t = t || o)(e / 8), r);
        }),
        (t.validateMnemonic = function (e, t) {
          try {
            h(e, t);
          } catch (e) {
            return !1;
          }
          return !0;
        }),
        (t.setDefaultWordlist = function (e) {
          const t = a.wordlists[e];
          if (!t)
            throw new Error('Could not find wordlist for language "' + e + '"');
          s = t;
        }),
        (t.getDefaultWordlist = function () {
          if (!s) throw new Error('No Default Wordlist set');
          return Object.keys(a.wordlists).filter(
            (e) =>
              'JA' !== e &&
              'EN' !== e &&
              a.wordlists[e].every((e, t) => e === s[t])
          )[0];
        });
      var b = r(68);
      t.wordlists = b.wordlists;
    },
    function (e, t, r) {
      var n,
        i = r(45),
        o = r(67),
        a = r(66),
        s = r(2).Buffer,
        u = global.crypto && global.crypto.subtle,
        c = {
          sha: 'SHA-1',
          'sha-1': 'SHA-1',
          sha1: 'SHA-1',
          sha256: 'SHA-256',
          'sha-256': 'SHA-256',
          sha384: 'SHA-384',
          'sha-384': 'SHA-384',
          'sha-512': 'SHA-512',
          sha512: 'SHA-512',
        },
        f = [];
      function l(e, t, r, n, i) {
        return u
          .importKey('raw', e, { name: 'PBKDF2' }, !1, ['deriveBits'])
          .then(function (e) {
            return u.deriveBits(
              { name: 'PBKDF2', salt: t, iterations: r, hash: { name: i } },
              e,
              n << 3
            );
          })
          .then(function (e) {
            return s.from(e);
          });
      }
      e.exports = function (e, t, r, d, p, h) {
        'function' == typeof p && ((h = p), (p = void 0));
        var m = c[(p = p || 'sha1').toLowerCase()];
        if (!m || 'function' != typeof global.Promise)
          return process.nextTick(function () {
            var n;
            try {
              n = a(e, t, r, d, p);
            } catch (e) {
              return h(e);
            }
            h(null, n);
          });
        if ((i(e, t, r, d), 'function' != typeof h))
          throw new Error('No callback provided to pbkdf2');
        s.isBuffer(e) || (e = s.from(e, o)),
          s.isBuffer(t) || (t = s.from(t, o)),
          (function (e, t) {
            e.then(
              function (e) {
                process.nextTick(function () {
                  t(null, e);
                });
              },
              function (e) {
                process.nextTick(function () {
                  t(e);
                });
              }
            );
          })(
            (function (e) {
              if (global.process && !global.process.browser)
                return Promise.resolve(!1);
              if (!u || !u.importKey || !u.deriveBits)
                return Promise.resolve(!1);
              if (void 0 !== f[e]) return f[e];
              var t = l((n = n || s.alloc(8)), n, 10, 128, e)
                .then(function () {
                  return !0;
                })
                .catch(function () {
                  return !1;
                });
              return (f[e] = t), t;
            })(m).then(function (n) {
              return n ? l(e, t, r, d, m) : a(e, t, r, d, p);
            }),
            h
          );
      };
    },
    function (e) {
      e.exports = JSON.parse(
        '["的","一","是","在","不","了","有","和","人","这","中","大","为","上","个","国","我","以","要","他","时","来","用","们","生","到","作","地","于","出","就","分","对","成","会","可","主","发","年","动","同","工","也","能","下","过","子","说","产","种","面","而","方","后","多","定","行","学","法","所","民","得","经","十","三","之","进","着","等","部","度","家","电","力","里","如","水","化","高","自","二","理","起","小","物","现","实","加","量","都","两","体","制","机","当","使","点","从","业","本","去","把","性","好","应","开","它","合","还","因","由","其","些","然","前","外","天","政","四","日","那","社","义","事","平","形","相","全","表","间","样","与","关","各","重","新","线","内","数","正","心","反","你","明","看","原","又","么","利","比","或","但","质","气","第","向","道","命","此","变","条","只","没","结","解","问","意","建","月","公","无","系","军","很","情","者","最","立","代","想","已","通","并","提","直","题","党","程","展","五","果","料","象","员","革","位","入","常","文","总","次","品","式","活","设","及","管","特","件","长","求","老","头","基","资","边","流","路","级","少","图","山","统","接","知","较","将","组","见","计","别","她","手","角","期","根","论","运","农","指","几","九","区","强","放","决","西","被","干","做","必","战","先","回","则","任","取","据","处","队","南","给","色","光","门","即","保","治","北","造","百","规","热","领","七","海","口","东","导","器","压","志","世","金","增","争","济","阶","油","思","术","极","交","受","联","什","认","六","共","权","收","证","改","清","美","再","采","转","更","单","风","切","打","白","教","速","花","带","安","场","身","车","例","真","务","具","万","每","目","至","达","走","积","示","议","声","报","斗","完","类","八","离","华","名","确","才","科","张","信","马","节","话","米","整","空","元","况","今","集","温","传","土","许","步","群","广","石","记","需","段","研","界","拉","林","律","叫","且","究","观","越","织","装","影","算","低","持","音","众","书","布","复","容","儿","须","际","商","非","验","连","断","深","难","近","矿","千","周","委","素","技","备","半","办","青","省","列","习","响","约","支","般","史","感","劳","便","团","往","酸","历","市","克","何","除","消","构","府","称","太","准","精","值","号","率","族","维","划","选","标","写","存","候","毛","亲","快","效","斯","院","查","江","型","眼","王","按","格","养","易","置","派","层","片","始","却","专","状","育","厂","京","识","适","属","圆","包","火","住","调","满","县","局","照","参","红","细","引","听","该","铁","价","严","首","底","液","官","德","随","病","苏","失","尔","死","讲","配","女","黄","推","显","谈","罪","神","艺","呢","席","含","企","望","密","批","营","项","防","举","球","英","氧","势","告","李","台","落","木","帮","轮","破","亚","师","围","注","远","字","材","排","供","河","态","封","另","施","减","树","溶","怎","止","案","言","士","均","武","固","叶","鱼","波","视","仅","费","紧","爱","左","章","早","朝","害","续","轻","服","试","食","充","兵","源","判","护","司","足","某","练","差","致","板","田","降","黑","犯","负","击","范","继","兴","似","余","坚","曲","输","修","故","城","夫","够","送","笔","船","占","右","财","吃","富","春","职","觉","汉","画","功","巴","跟","虽","杂","飞","检","吸","助","升","阳","互","初","创","抗","考","投","坏","策","古","径","换","未","跑","留","钢","曾","端","责","站","简","述","钱","副","尽","帝","射","草","冲","承","独","令","限","阿","宣","环","双","请","超","微","让","控","州","良","轴","找","否","纪","益","依","优","顶","础","载","倒","房","突","坐","粉","敌","略","客","袁","冷","胜","绝","析","块","剂","测","丝","协","诉","念","陈","仍","罗","盐","友","洋","错","苦","夜","刑","移","频","逐","靠","混","母","短","皮","终","聚","汽","村","云","哪","既","距","卫","停","烈","央","察","烧","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","游","久","菜","味","旧","模","湖","货","损","预","阻","毫","普","稳","乙","妈","植","息","扩","银","语","挥","酒","守","拿","序","纸","医","缺","雨","吗","针","刘","啊","急","唱","误","训","愿","审","附","获","茶","鲜","粮","斤","孩","脱","硫","肥","善","龙","演","父","渐","血","欢","械","掌","歌","沙","刚","攻","谓","盾","讨","晚","粒","乱","燃","矛","乎","杀","药","宁","鲁","贵","钟","煤","读","班","伯","香","介","迫","句","丰","培","握","兰","担","弦","蛋","沉","假","穿","执","答","乐","谁","顺","烟","缩","征","脸","喜","松","脚","困","异","免","背","星","福","买","染","井","概","慢","怕","磁","倍","祖","皇","促","静","补","评","翻","肉","践","尼","衣","宽","扬","棉","希","伤","操","垂","秋","宜","氢","套","督","振","架","亮","末","宪","庆","编","牛","触","映","雷","销","诗","座","居","抓","裂","胞","呼","娘","景","威","绿","晶","厚","盟","衡","鸡","孙","延","危","胶","屋","乡","临","陆","顾","掉","呀","灯","岁","措","束","耐","剧","玉","赵","跳","哥","季","课","凯","胡","额","款","绍","卷","齐","伟","蒸","殖","永","宗","苗","川","炉","岩","弱","零","杨","奏","沿","露","杆","探","滑","镇","饭","浓","航","怀","赶","库","夺","伊","灵","税","途","灭","赛","归","召","鼓","播","盘","裁","险","康","唯","录","菌","纯","借","糖","盖","横","符","私","努","堂","域","枪","润","幅","哈","竟","熟","虫","泽","脑","壤","碳","欧","遍","侧","寨","敢","彻","虑","斜","薄","庭","纳","弹","饲","伸","折","麦","湿","暗","荷","瓦","塞","床","筑","恶","户","访","塔","奇","透","梁","刀","旋","迹","卡","氯","遇","份","毒","泥","退","洗","摆","灰","彩","卖","耗","夏","择","忙","铜","献","硬","予","繁","圈","雪","函","亦","抽","篇","阵","阴","丁","尺","追","堆","雄","迎","泛","爸","楼","避","谋","吨","野","猪","旗","累","偏","典","馆","索","秦","脂","潮","爷","豆","忽","托","惊","塑","遗","愈","朱","替","纤","粗","倾","尚","痛","楚","谢","奋","购","磨","君","池","旁","碎","骨","监","捕","弟","暴","割","贯","殊","释","词","亡","壁","顿","宝","午","尘","闻","揭","炮","残","冬","桥","妇","警","综","招","吴","付","浮","遭","徐","您","摇","谷","赞","箱","隔","订","男","吹","园","纷","唐","败","宋","玻","巨","耕","坦","荣","闭","湾","键","凡","驻","锅","救","恩","剥","凝","碱","齿","截","炼","麻","纺","禁","废","盛","版","缓","净","睛","昌","婚","涉","筒","嘴","插","岸","朗","庄","街","藏","姑","贸","腐","奴","啦","惯","乘","伙","恢","匀","纱","扎","辩","耳","彪","臣","亿","璃","抵","脉","秀","萨","俄","网","舞","店","喷","纵","寸","汗","挂","洪","贺","闪","柬","爆","烯","津","稻","墙","软","勇","像","滚","厘","蒙","芳","肯","坡","柱","荡","腿","仪","旅","尾","轧","冰","贡","登","黎","削","钻","勒","逃","障","氨","郭","峰","币","港","伏","轨","亩","毕","擦","莫","刺","浪","秘","援","株","健","售","股","岛","甘","泡","睡","童","铸","汤","阀","休","汇","舍","牧","绕","炸","哲","磷","绩","朋","淡","尖","启","陷","柴","呈","徒","颜","泪","稍","忘","泵","蓝","拖","洞","授","镜","辛","壮","锋","贫","虚","弯","摩","泰","幼","廷","尊","窗","纲","弄","隶","疑","氏","宫","姐","震","瑞","怪","尤","琴","循","描","膜","违","夹","腰","缘","珠","穷","森","枝","竹","沟","催","绳","忆","邦","剩","幸","浆","栏","拥","牙","贮","礼","滤","钠","纹","罢","拍","咱","喊","袖","埃","勤","罚","焦","潜","伍","墨","欲","缝","姓","刊","饱","仿","奖","铝","鬼","丽","跨","默","挖","链","扫","喝","袋","炭","污","幕","诸","弧","励","梅","奶","洁","灾","舟","鉴","苯","讼","抱","毁","懂","寒","智","埔","寄","届","跃","渡","挑","丹","艰","贝","碰","拔","爹","戴","码","梦","芽","熔","赤","渔","哭","敬","颗","奔","铅","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","仓","魏","锐","晓","氮","兼","隐","碍","赫","拨","忠","肃","缸","牵","抢","博","巧","壳","兄","杜","讯","诚","碧","祥","柯","页","巡","矩","悲","灌","龄","伦","票","寻","桂","铺","圣","恐","恰","郑","趣","抬","荒","腾","贴","柔","滴","猛","阔","辆","妻","填","撤","储","签","闹","扰","紫","砂","递","戏","吊","陶","伐","喂","疗","瓶","婆","抚","臂","摸","忍","虾","蜡","邻","胸","巩","挤","偶","弃","槽","劲","乳","邓","吉","仁","烂","砖","租","乌","舰","伴","瓜","浅","丙","暂","燥","橡","柳","迷","暖","牌","秧","胆","详","簧","踏","瓷","谱","呆","宾","糊","洛","辉","愤","竞","隙","怒","粘","乃","绪","肩","籍","敏","涂","熙","皆","侦","悬","掘","享","纠","醒","狂","锁","淀","恨","牲","霸","爬","赏","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鸭","趋","凤","晨","畜","辈","秩","卵","署","梯","炎","滩","棋","驱","筛","峡","冒","啥","寿","译","浸","泉","帽","迟","硅","疆","贷","漏","稿","冠","嫩","胁","芯","牢","叛","蚀","奥","鸣","岭","羊","凭","串","塘","绘","酵","融","盆","锡","庙","筹","冻","辅","摄","袭","筋","拒","僚","旱","钾","鸟","漆","沈","眉","疏","添","棒","穗","硝","韩","逼","扭","侨","凉","挺","碗","栽","炒","杯","患","馏","劝","豪","辽","勃","鸿","旦","吏","拜","狗","埋","辊","掩","饮","搬","骂","辞","勾","扣","估","蒋","绒","雾","丈","朵","姆","拟","宇","辑","陕","雕","偿","蓄","崇","剪","倡","厅","咬","驶","薯","刷","斥","番","赋","奉","佛","浇","漫","曼","扇","钙","桃","扶","仔","返","俗","亏","腔","鞋","棱","覆","框","悄","叔","撞","骗","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","胀","谐","抛","霉","桑","岗","嘛","衰","盗","渗","脏","赖","涌","甜","曹","阅","肌","哩","厉","烃","纬","毅","昨","伪","症","煮","叹","钉","搭","茎","笼","酷","偷","弓","锥","恒","杰","坑","鼻","翼","纶","叙","狱","逮","罐","络","棚","抑","膨","蔬","寺","骤","穆","冶","枯","册","尸","凸","绅","坯","牺","焰","轰","欣","晋","瘦","御","锭","锦","丧","旬","锻","垄","搜","扑","邀","亭","酯","迈","舒","脆","酶","闲","忧","酚","顽","羽","涨","卸","仗","陪","辟","惩","杭","姚","肚","捉","飘","漂","昆","欺","吾","郎","烷","汁","呵","饰","萧","雅","邮","迁","燕","撒","姻","赴","宴","烦","债","帐","斑","铃","旨","醇","董","饼","雏","姿","拌","傅","腹","妥","揉","贤","拆","歪","葡","胺","丢","浩","徽","昂","垫","挡","览","贪","慰","缴","汪","慌","冯","诺","姜","谊","凶","劣","诬","耀","昏","躺","盈","骑","乔","溪","丛","卢","抹","闷","咨","刮","驾","缆","悟","摘","铒","掷","颇","幻","柄","惠","惨","佳","仇","腊","窝","涤","剑","瞧","堡","泼","葱","罩","霍","捞","胎","苍","滨","俩","捅","湘","砍","霞","邵","萄","疯","淮","遂","熊","粪","烘","宿","档","戈","驳","嫂","裕","徙","箭","捐","肠","撑","晒","辨","殿","莲","摊","搅","酱","屏","疫","哀","蔡","堵","沫","皱","畅","叠","阁","莱","敲","辖","钩","痕","坝","巷","饿","祸","丘","玄","溜","曰","逻","彭","尝","卿","妨","艇","吞","韦","怨","矮","歇"]'
      );
    },
    function (e) {
      e.exports = JSON.parse(
        '["的","一","是","在","不","了","有","和","人","這","中","大","為","上","個","國","我","以","要","他","時","來","用","們","生","到","作","地","於","出","就","分","對","成","會","可","主","發","年","動","同","工","也","能","下","過","子","說","產","種","面","而","方","後","多","定","行","學","法","所","民","得","經","十","三","之","進","著","等","部","度","家","電","力","裡","如","水","化","高","自","二","理","起","小","物","現","實","加","量","都","兩","體","制","機","當","使","點","從","業","本","去","把","性","好","應","開","它","合","還","因","由","其","些","然","前","外","天","政","四","日","那","社","義","事","平","形","相","全","表","間","樣","與","關","各","重","新","線","內","數","正","心","反","你","明","看","原","又","麼","利","比","或","但","質","氣","第","向","道","命","此","變","條","只","沒","結","解","問","意","建","月","公","無","系","軍","很","情","者","最","立","代","想","已","通","並","提","直","題","黨","程","展","五","果","料","象","員","革","位","入","常","文","總","次","品","式","活","設","及","管","特","件","長","求","老","頭","基","資","邊","流","路","級","少","圖","山","統","接","知","較","將","組","見","計","別","她","手","角","期","根","論","運","農","指","幾","九","區","強","放","決","西","被","幹","做","必","戰","先","回","則","任","取","據","處","隊","南","給","色","光","門","即","保","治","北","造","百","規","熱","領","七","海","口","東","導","器","壓","志","世","金","增","爭","濟","階","油","思","術","極","交","受","聯","什","認","六","共","權","收","證","改","清","美","再","採","轉","更","單","風","切","打","白","教","速","花","帶","安","場","身","車","例","真","務","具","萬","每","目","至","達","走","積","示","議","聲","報","鬥","完","類","八","離","華","名","確","才","科","張","信","馬","節","話","米","整","空","元","況","今","集","溫","傳","土","許","步","群","廣","石","記","需","段","研","界","拉","林","律","叫","且","究","觀","越","織","裝","影","算","低","持","音","眾","書","布","复","容","兒","須","際","商","非","驗","連","斷","深","難","近","礦","千","週","委","素","技","備","半","辦","青","省","列","習","響","約","支","般","史","感","勞","便","團","往","酸","歷","市","克","何","除","消","構","府","稱","太","準","精","值","號","率","族","維","劃","選","標","寫","存","候","毛","親","快","效","斯","院","查","江","型","眼","王","按","格","養","易","置","派","層","片","始","卻","專","狀","育","廠","京","識","適","屬","圓","包","火","住","調","滿","縣","局","照","參","紅","細","引","聽","該","鐵","價","嚴","首","底","液","官","德","隨","病","蘇","失","爾","死","講","配","女","黃","推","顯","談","罪","神","藝","呢","席","含","企","望","密","批","營","項","防","舉","球","英","氧","勢","告","李","台","落","木","幫","輪","破","亞","師","圍","注","遠","字","材","排","供","河","態","封","另","施","減","樹","溶","怎","止","案","言","士","均","武","固","葉","魚","波","視","僅","費","緊","愛","左","章","早","朝","害","續","輕","服","試","食","充","兵","源","判","護","司","足","某","練","差","致","板","田","降","黑","犯","負","擊","范","繼","興","似","餘","堅","曲","輸","修","故","城","夫","夠","送","筆","船","佔","右","財","吃","富","春","職","覺","漢","畫","功","巴","跟","雖","雜","飛","檢","吸","助","昇","陽","互","初","創","抗","考","投","壞","策","古","徑","換","未","跑","留","鋼","曾","端","責","站","簡","述","錢","副","盡","帝","射","草","衝","承","獨","令","限","阿","宣","環","雙","請","超","微","讓","控","州","良","軸","找","否","紀","益","依","優","頂","礎","載","倒","房","突","坐","粉","敵","略","客","袁","冷","勝","絕","析","塊","劑","測","絲","協","訴","念","陳","仍","羅","鹽","友","洋","錯","苦","夜","刑","移","頻","逐","靠","混","母","短","皮","終","聚","汽","村","雲","哪","既","距","衛","停","烈","央","察","燒","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","遊","久","菜","味","舊","模","湖","貨","損","預","阻","毫","普","穩","乙","媽","植","息","擴","銀","語","揮","酒","守","拿","序","紙","醫","缺","雨","嗎","針","劉","啊","急","唱","誤","訓","願","審","附","獲","茶","鮮","糧","斤","孩","脫","硫","肥","善","龍","演","父","漸","血","歡","械","掌","歌","沙","剛","攻","謂","盾","討","晚","粒","亂","燃","矛","乎","殺","藥","寧","魯","貴","鐘","煤","讀","班","伯","香","介","迫","句","豐","培","握","蘭","擔","弦","蛋","沉","假","穿","執","答","樂","誰","順","煙","縮","徵","臉","喜","松","腳","困","異","免","背","星","福","買","染","井","概","慢","怕","磁","倍","祖","皇","促","靜","補","評","翻","肉","踐","尼","衣","寬","揚","棉","希","傷","操","垂","秋","宜","氫","套","督","振","架","亮","末","憲","慶","編","牛","觸","映","雷","銷","詩","座","居","抓","裂","胞","呼","娘","景","威","綠","晶","厚","盟","衡","雞","孫","延","危","膠","屋","鄉","臨","陸","顧","掉","呀","燈","歲","措","束","耐","劇","玉","趙","跳","哥","季","課","凱","胡","額","款","紹","卷","齊","偉","蒸","殖","永","宗","苗","川","爐","岩","弱","零","楊","奏","沿","露","桿","探","滑","鎮","飯","濃","航","懷","趕","庫","奪","伊","靈","稅","途","滅","賽","歸","召","鼓","播","盤","裁","險","康","唯","錄","菌","純","借","糖","蓋","橫","符","私","努","堂","域","槍","潤","幅","哈","竟","熟","蟲","澤","腦","壤","碳","歐","遍","側","寨","敢","徹","慮","斜","薄","庭","納","彈","飼","伸","折","麥","濕","暗","荷","瓦","塞","床","築","惡","戶","訪","塔","奇","透","梁","刀","旋","跡","卡","氯","遇","份","毒","泥","退","洗","擺","灰","彩","賣","耗","夏","擇","忙","銅","獻","硬","予","繁","圈","雪","函","亦","抽","篇","陣","陰","丁","尺","追","堆","雄","迎","泛","爸","樓","避","謀","噸","野","豬","旗","累","偏","典","館","索","秦","脂","潮","爺","豆","忽","托","驚","塑","遺","愈","朱","替","纖","粗","傾","尚","痛","楚","謝","奮","購","磨","君","池","旁","碎","骨","監","捕","弟","暴","割","貫","殊","釋","詞","亡","壁","頓","寶","午","塵","聞","揭","炮","殘","冬","橋","婦","警","綜","招","吳","付","浮","遭","徐","您","搖","谷","贊","箱","隔","訂","男","吹","園","紛","唐","敗","宋","玻","巨","耕","坦","榮","閉","灣","鍵","凡","駐","鍋","救","恩","剝","凝","鹼","齒","截","煉","麻","紡","禁","廢","盛","版","緩","淨","睛","昌","婚","涉","筒","嘴","插","岸","朗","莊","街","藏","姑","貿","腐","奴","啦","慣","乘","夥","恢","勻","紗","扎","辯","耳","彪","臣","億","璃","抵","脈","秀","薩","俄","網","舞","店","噴","縱","寸","汗","掛","洪","賀","閃","柬","爆","烯","津","稻","牆","軟","勇","像","滾","厘","蒙","芳","肯","坡","柱","盪","腿","儀","旅","尾","軋","冰","貢","登","黎","削","鑽","勒","逃","障","氨","郭","峰","幣","港","伏","軌","畝","畢","擦","莫","刺","浪","秘","援","株","健","售","股","島","甘","泡","睡","童","鑄","湯","閥","休","匯","舍","牧","繞","炸","哲","磷","績","朋","淡","尖","啟","陷","柴","呈","徒","顏","淚","稍","忘","泵","藍","拖","洞","授","鏡","辛","壯","鋒","貧","虛","彎","摩","泰","幼","廷","尊","窗","綱","弄","隸","疑","氏","宮","姐","震","瑞","怪","尤","琴","循","描","膜","違","夾","腰","緣","珠","窮","森","枝","竹","溝","催","繩","憶","邦","剩","幸","漿","欄","擁","牙","貯","禮","濾","鈉","紋","罷","拍","咱","喊","袖","埃","勤","罰","焦","潛","伍","墨","欲","縫","姓","刊","飽","仿","獎","鋁","鬼","麗","跨","默","挖","鏈","掃","喝","袋","炭","污","幕","諸","弧","勵","梅","奶","潔","災","舟","鑑","苯","訟","抱","毀","懂","寒","智","埔","寄","屆","躍","渡","挑","丹","艱","貝","碰","拔","爹","戴","碼","夢","芽","熔","赤","漁","哭","敬","顆","奔","鉛","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","倉","魏","銳","曉","氮","兼","隱","礙","赫","撥","忠","肅","缸","牽","搶","博","巧","殼","兄","杜","訊","誠","碧","祥","柯","頁","巡","矩","悲","灌","齡","倫","票","尋","桂","鋪","聖","恐","恰","鄭","趣","抬","荒","騰","貼","柔","滴","猛","闊","輛","妻","填","撤","儲","簽","鬧","擾","紫","砂","遞","戲","吊","陶","伐","餵","療","瓶","婆","撫","臂","摸","忍","蝦","蠟","鄰","胸","鞏","擠","偶","棄","槽","勁","乳","鄧","吉","仁","爛","磚","租","烏","艦","伴","瓜","淺","丙","暫","燥","橡","柳","迷","暖","牌","秧","膽","詳","簧","踏","瓷","譜","呆","賓","糊","洛","輝","憤","競","隙","怒","粘","乃","緒","肩","籍","敏","塗","熙","皆","偵","懸","掘","享","糾","醒","狂","鎖","淀","恨","牲","霸","爬","賞","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鴨","趨","鳳","晨","畜","輩","秩","卵","署","梯","炎","灘","棋","驅","篩","峽","冒","啥","壽","譯","浸","泉","帽","遲","矽","疆","貸","漏","稿","冠","嫩","脅","芯","牢","叛","蝕","奧","鳴","嶺","羊","憑","串","塘","繪","酵","融","盆","錫","廟","籌","凍","輔","攝","襲","筋","拒","僚","旱","鉀","鳥","漆","沈","眉","疏","添","棒","穗","硝","韓","逼","扭","僑","涼","挺","碗","栽","炒","杯","患","餾","勸","豪","遼","勃","鴻","旦","吏","拜","狗","埋","輥","掩","飲","搬","罵","辭","勾","扣","估","蔣","絨","霧","丈","朵","姆","擬","宇","輯","陝","雕","償","蓄","崇","剪","倡","廳","咬","駛","薯","刷","斥","番","賦","奉","佛","澆","漫","曼","扇","鈣","桃","扶","仔","返","俗","虧","腔","鞋","棱","覆","框","悄","叔","撞","騙","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","脹","諧","拋","黴","桑","崗","嘛","衰","盜","滲","臟","賴","湧","甜","曹","閱","肌","哩","厲","烴","緯","毅","昨","偽","症","煮","嘆","釘","搭","莖","籠","酷","偷","弓","錐","恆","傑","坑","鼻","翼","綸","敘","獄","逮","罐","絡","棚","抑","膨","蔬","寺","驟","穆","冶","枯","冊","屍","凸","紳","坯","犧","焰","轟","欣","晉","瘦","禦","錠","錦","喪","旬","鍛","壟","搜","撲","邀","亭","酯","邁","舒","脆","酶","閒","憂","酚","頑","羽","漲","卸","仗","陪","闢","懲","杭","姚","肚","捉","飄","漂","昆","欺","吾","郎","烷","汁","呵","飾","蕭","雅","郵","遷","燕","撒","姻","赴","宴","煩","債","帳","斑","鈴","旨","醇","董","餅","雛","姿","拌","傅","腹","妥","揉","賢","拆","歪","葡","胺","丟","浩","徽","昂","墊","擋","覽","貪","慰","繳","汪","慌","馮","諾","姜","誼","兇","劣","誣","耀","昏","躺","盈","騎","喬","溪","叢","盧","抹","悶","諮","刮","駕","纜","悟","摘","鉺","擲","頗","幻","柄","惠","慘","佳","仇","臘","窩","滌","劍","瞧","堡","潑","蔥","罩","霍","撈","胎","蒼","濱","倆","捅","湘","砍","霞","邵","萄","瘋","淮","遂","熊","糞","烘","宿","檔","戈","駁","嫂","裕","徙","箭","捐","腸","撐","曬","辨","殿","蓮","攤","攪","醬","屏","疫","哀","蔡","堵","沫","皺","暢","疊","閣","萊","敲","轄","鉤","痕","壩","巷","餓","禍","丘","玄","溜","曰","邏","彭","嘗","卿","妨","艇","吞","韋","怨","矮","歇"]'
      );
    },
    function (e) {
      e.exports = JSON.parse(
        '["가격","가끔","가난","가능","가득","가르침","가뭄","가방","가상","가슴","가운데","가을","가이드","가입","가장","가정","가족","가죽","각오","각자","간격","간부","간섭","간장","간접","간판","갈등","갈비","갈색","갈증","감각","감기","감소","감수성","감자","감정","갑자기","강남","강당","강도","강력히","강변","강북","강사","강수량","강아지","강원도","강의","강제","강조","같이","개구리","개나리","개방","개별","개선","개성","개인","객관적","거실","거액","거울","거짓","거품","걱정","건강","건물","건설","건조","건축","걸음","검사","검토","게시판","게임","겨울","견해","결과","결국","결론","결석","결승","결심","결정","결혼","경계","경고","경기","경력","경복궁","경비","경상도","경영","경우","경쟁","경제","경주","경찰","경치","경향","경험","계곡","계단","계란","계산","계속","계약","계절","계층","계획","고객","고구려","고궁","고급","고등학생","고무신","고민","고양이","고장","고전","고집","고춧가루","고통","고향","곡식","골목","골짜기","골프","공간","공개","공격","공군","공급","공기","공동","공무원","공부","공사","공식","공업","공연","공원","공장","공짜","공책","공통","공포","공항","공휴일","과목","과일","과장","과정","과학","관객","관계","관광","관념","관람","관련","관리","관습","관심","관점","관찰","광경","광고","광장","광주","괴로움","굉장히","교과서","교문","교복","교실","교양","교육","교장","교직","교통","교환","교훈","구경","구름","구멍","구별","구분","구석","구성","구속","구역","구입","구청","구체적","국가","국기","국내","국립","국물","국민","국수","국어","국왕","국적","국제","국회","군대","군사","군인","궁극적","권리","권위","권투","귀국","귀신","규정","규칙","균형","그날","그냥","그늘","그러나","그룹","그릇","그림","그제서야","그토록","극복","극히","근거","근교","근래","근로","근무","근본","근원","근육","근처","글씨","글자","금강산","금고","금년","금메달","금액","금연","금요일","금지","긍정적","기간","기관","기념","기능","기독교","기둥","기록","기름","기법","기본","기분","기쁨","기숙사","기술","기억","기업","기온","기운","기원","기적","기준","기침","기혼","기획","긴급","긴장","길이","김밥","김치","김포공항","깍두기","깜빡","깨달음","깨소금","껍질","꼭대기","꽃잎","나들이","나란히","나머지","나물","나침반","나흘","낙엽","난방","날개","날씨","날짜","남녀","남대문","남매","남산","남자","남편","남학생","낭비","낱말","내년","내용","내일","냄비","냄새","냇물","냉동","냉면","냉방","냉장고","넥타이","넷째","노동","노란색","노력","노인","녹음","녹차","녹화","논리","논문","논쟁","놀이","농구","농담","농민","농부","농업","농장","농촌","높이","눈동자","눈물","눈썹","뉴욕","느낌","늑대","능동적","능력","다방","다양성","다음","다이어트","다행","단계","단골","단독","단맛","단순","단어","단위","단점","단체","단추","단편","단풍","달걀","달러","달력","달리","닭고기","담당","담배","담요","담임","답변","답장","당근","당분간","당연히","당장","대규모","대낮","대단히","대답","대도시","대략","대량","대륙","대문","대부분","대신","대응","대장","대전","대접","대중","대책","대출","대충","대통령","대학","대한민국","대합실","대형","덩어리","데이트","도대체","도덕","도둑","도망","도서관","도심","도움","도입","도자기","도저히","도전","도중","도착","독감","독립","독서","독일","독창적","동화책","뒷모습","뒷산","딸아이","마누라","마늘","마당","마라톤","마련","마무리","마사지","마약","마요네즈","마을","마음","마이크","마중","마지막","마찬가지","마찰","마흔","막걸리","막내","막상","만남","만두","만세","만약","만일","만점","만족","만화","많이","말기","말씀","말투","맘대로","망원경","매년","매달","매력","매번","매스컴","매일","매장","맥주","먹이","먼저","먼지","멀리","메일","며느리","며칠","면담","멸치","명단","명령","명예","명의","명절","명칭","명함","모금","모니터","모델","모든","모범","모습","모양","모임","모조리","모집","모퉁이","목걸이","목록","목사","목소리","목숨","목적","목표","몰래","몸매","몸무게","몸살","몸속","몸짓","몸통","몹시","무관심","무궁화","무더위","무덤","무릎","무슨","무엇","무역","무용","무조건","무지개","무척","문구","문득","문법","문서","문제","문학","문화","물가","물건","물결","물고기","물론","물리학","물음","물질","물체","미국","미디어","미사일","미술","미역","미용실","미움","미인","미팅","미혼","민간","민족","민주","믿음","밀가루","밀리미터","밑바닥","바가지","바구니","바나나","바늘","바닥","바닷가","바람","바이러스","바탕","박물관","박사","박수","반대","반드시","반말","반발","반성","반응","반장","반죽","반지","반찬","받침","발가락","발걸음","발견","발달","발레","발목","발바닥","발생","발음","발자국","발전","발톱","발표","밤하늘","밥그릇","밥맛","밥상","밥솥","방금","방면","방문","방바닥","방법","방송","방식","방안","방울","방지","방학","방해","방향","배경","배꼽","배달","배드민턴","백두산","백색","백성","백인","백제","백화점","버릇","버섯","버튼","번개","번역","번지","번호","벌금","벌레","벌써","범위","범인","범죄","법률","법원","법적","법칙","베이징","벨트","변경","변동","변명","변신","변호사","변화","별도","별명","별일","병실","병아리","병원","보관","보너스","보라색","보람","보름","보상","보안","보자기","보장","보전","보존","보통","보편적","보험","복도","복사","복숭아","복습","볶음","본격적","본래","본부","본사","본성","본인","본질","볼펜","봉사","봉지","봉투","부근","부끄러움","부담","부동산","부문","부분","부산","부상","부엌","부인","부작용","부장","부정","부족","부지런히","부친","부탁","부품","부회장","북부","북한","분노","분량","분리","분명","분석","분야","분위기","분필","분홍색","불고기","불과","불교","불꽃","불만","불법","불빛","불안","불이익","불행","브랜드","비극","비난","비닐","비둘기","비디오","비로소","비만","비명","비밀","비바람","비빔밥","비상","비용","비율","비중","비타민","비판","빌딩","빗물","빗방울","빗줄기","빛깔","빨간색","빨래","빨리","사건","사계절","사나이","사냥","사람","사랑","사립","사모님","사물","사방","사상","사생활","사설","사슴","사실","사업","사용","사월","사장","사전","사진","사촌","사춘기","사탕","사투리","사흘","산길","산부인과","산업","산책","살림","살인","살짝","삼계탕","삼국","삼십","삼월","삼촌","상관","상금","상대","상류","상반기","상상","상식","상업","상인","상자","상점","상처","상추","상태","상표","상품","상황","새벽","색깔","색연필","생각","생명","생물","생방송","생산","생선","생신","생일","생활","서랍","서른","서명","서민","서비스","서양","서울","서적","서점","서쪽","서클","석사","석유","선거","선물","선배","선생","선수","선원","선장","선전","선택","선풍기","설거지","설날","설렁탕","설명","설문","설사","설악산","설치","설탕","섭씨","성공","성당","성명","성별","성인","성장","성적","성질","성함","세금","세미나","세상","세월","세종대왕","세탁","센터","센티미터","셋째","소규모","소극적","소금","소나기","소년","소득","소망","소문","소설","소속","소아과","소용","소원","소음","소중히","소지품","소질","소풍","소형","속담","속도","속옷","손가락","손길","손녀","손님","손등","손목","손뼉","손실","손질","손톱","손해","솔직히","솜씨","송아지","송이","송편","쇠고기","쇼핑","수건","수년","수단","수돗물","수동적","수면","수명","수박","수상","수석","수술","수시로","수업","수염","수영","수입","수준","수집","수출","수컷","수필","수학","수험생","수화기","숙녀","숙소","숙제","순간","순서","순수","순식간","순위","숟가락","술병","술집","숫자","스님","스물","스스로","스승","스웨터","스위치","스케이트","스튜디오","스트레스","스포츠","슬쩍","슬픔","습관","습기","승객","승리","승부","승용차","승진","시각","시간","시골","시금치","시나리오","시댁","시리즈","시멘트","시민","시부모","시선","시설","시스템","시아버지","시어머니","시월","시인","시일","시작","시장","시절","시점","시중","시즌","시집","시청","시합","시험","식구","식기","식당","식량","식료품","식물","식빵","식사","식생활","식초","식탁","식품","신고","신규","신념","신문","신발","신비","신사","신세","신용","신제품","신청","신체","신화","실감","실내","실력","실례","실망","실수","실습","실시","실장","실정","실질적","실천","실체","실컷","실태","실패","실험","실현","심리","심부름","심사","심장","심정","심판","쌍둥이","씨름","씨앗","아가씨","아나운서","아드님","아들","아쉬움","아스팔트","아시아","아울러","아저씨","아줌마","아직","아침","아파트","아프리카","아픔","아홉","아흔","악기","악몽","악수","안개","안경","안과","안내","안녕","안동","안방","안부","안주","알루미늄","알코올","암시","암컷","압력","앞날","앞문","애인","애정","액수","앨범","야간","야단","야옹","약간","약국","약속","약수","약점","약품","약혼녀","양념","양력","양말","양배추","양주","양파","어둠","어려움","어른","어젯밤","어쨌든","어쩌다가","어쩐지","언니","언덕","언론","언어","얼굴","얼른","얼음","얼핏","엄마","업무","업종","업체","엉덩이","엉망","엉터리","엊그제","에너지","에어컨","엔진","여건","여고생","여관","여군","여권","여대생","여덟","여동생","여든","여론","여름","여섯","여성","여왕","여인","여전히","여직원","여학생","여행","역사","역시","역할","연결","연구","연극","연기","연락","연설","연세","연속","연습","연애","연예인","연인","연장","연주","연출","연필","연합","연휴","열기","열매","열쇠","열심히","열정","열차","열흘","염려","엽서","영국","영남","영상","영양","영역","영웅","영원히","영하","영향","영혼","영화","옆구리","옆방","옆집","예감","예금","예방","예산","예상","예선","예술","예습","예식장","예약","예전","예절","예정","예컨대","옛날","오늘","오락","오랫동안","오렌지","오로지","오른발","오븐","오십","오염","오월","오전","오직","오징어","오페라","오피스텔","오히려","옥상","옥수수","온갖","온라인","온몸","온종일","온통","올가을","올림픽","올해","옷차림","와이셔츠","와인","완성","완전","왕비","왕자","왜냐하면","왠지","외갓집","외국","외로움","외삼촌","외출","외침","외할머니","왼발","왼손","왼쪽","요금","요일","요즘","요청","용기","용서","용어","우산","우선","우승","우연히","우정","우체국","우편","운동","운명","운반","운전","운행","울산","울음","움직임","웃어른","웃음","워낙","원고","원래","원서","원숭이","원인","원장","원피스","월급","월드컵","월세","월요일","웨이터","위반","위법","위성","위원","위험","위협","윗사람","유난히","유럽","유명","유물","유산","유적","유치원","유학","유행","유형","육군","육상","육십","육체","은행","음력","음료","음반","음성","음식","음악","음주","의견","의논","의문","의복","의식","의심","의외로","의욕","의원","의학","이것","이곳","이념","이놈","이달","이대로","이동","이렇게","이력서","이론적","이름","이민","이발소","이별","이불","이빨","이상","이성","이슬","이야기","이용","이웃","이월","이윽고","이익","이전","이중","이튿날","이틀","이혼","인간","인격","인공","인구","인근","인기","인도","인류","인물","인생","인쇄","인연","인원","인재","인종","인천","인체","인터넷","인하","인형","일곱","일기","일단","일대","일등","일반","일본","일부","일상","일생","일손","일요일","일월","일정","일종","일주일","일찍","일체","일치","일행","일회용","임금","임무","입대","입력","입맛","입사","입술","입시","입원","입장","입학","자가용","자격","자극","자동","자랑","자부심","자식","자신","자연","자원","자율","자전거","자정","자존심","자판","작가","작년","작성","작업","작용","작은딸","작품","잔디","잔뜩","잔치","잘못","잠깐","잠수함","잠시","잠옷","잠자리","잡지","장관","장군","장기간","장래","장례","장르","장마","장면","장모","장미","장비","장사","장소","장식","장애인","장인","장점","장차","장학금","재능","재빨리","재산","재생","재작년","재정","재채기","재판","재학","재활용","저것","저고리","저곳","저녁","저런","저렇게","저번","저울","저절로","저축","적극","적당히","적성","적용","적응","전개","전공","전기","전달","전라도","전망","전문","전반","전부","전세","전시","전용","전자","전쟁","전주","전철","전체","전통","전혀","전후","절대","절망","절반","절약","절차","점검","점수","점심","점원","점점","점차","접근","접시","접촉","젓가락","정거장","정도","정류장","정리","정말","정면","정문","정반대","정보","정부","정비","정상","정성","정오","정원","정장","정지","정치","정확히","제공","제과점","제대로","제목","제발","제법","제삿날","제안","제일","제작","제주도","제출","제품","제한","조각","조건","조금","조깅","조명","조미료","조상","조선","조용히","조절","조정","조직","존댓말","존재","졸업","졸음","종교","종로","종류","종소리","종업원","종종","종합","좌석","죄인","주관적","주름","주말","주머니","주먹","주문","주민","주방","주변","주식","주인","주일","주장","주전자","주택","준비","줄거리","줄기","줄무늬","중간","중계방송","중국","중년","중단","중독","중반","중부","중세","중소기업","중순","중앙","중요","중학교","즉석","즉시","즐거움","증가","증거","증권","증상","증세","지각","지갑","지경","지극히","지금","지급","지능","지름길","지리산","지방","지붕","지식","지역","지우개","지원","지적","지점","지진","지출","직선","직업","직원","직장","진급","진동","진로","진료","진리","진짜","진찰","진출","진통","진행","질문","질병","질서","짐작","집단","집안","집중","짜증","찌꺼기","차남","차라리","차량","차림","차별","차선","차츰","착각","찬물","찬성","참가","참기름","참새","참석","참여","참외","참조","찻잔","창가","창고","창구","창문","창밖","창작","창조","채널","채점","책가방","책방","책상","책임","챔피언","처벌","처음","천국","천둥","천장","천재","천천히","철도","철저히","철학","첫날","첫째","청년","청바지","청소","청춘","체계","체력","체온","체육","체중","체험","초등학생","초반","초밥","초상화","초순","초여름","초원","초저녁","초점","초청","초콜릿","촛불","총각","총리","총장","촬영","최근","최상","최선","최신","최악","최종","추석","추억","추진","추천","추측","축구","축소","축제","축하","출근","출발","출산","출신","출연","출입","출장","출판","충격","충고","충돌","충분히","충청도","취업","취직","취향","치약","친구","친척","칠십","칠월","칠판","침대","침묵","침실","칫솔","칭찬","카메라","카운터","칼국수","캐릭터","캠퍼스","캠페인","커튼","컨디션","컬러","컴퓨터","코끼리","코미디","콘서트","콜라","콤플렉스","콩나물","쾌감","쿠데타","크림","큰길","큰딸","큰소리","큰아들","큰어머니","큰일","큰절","클래식","클럽","킬로","타입","타자기","탁구","탁자","탄생","태권도","태양","태풍","택시","탤런트","터널","터미널","테니스","테스트","테이블","텔레비전","토론","토마토","토요일","통계","통과","통로","통신","통역","통일","통장","통제","통증","통합","통화","퇴근","퇴원","퇴직금","튀김","트럭","특급","특별","특성","특수","특징","특히","튼튼히","티셔츠","파란색","파일","파출소","판결","판단","판매","판사","팔십","팔월","팝송","패션","팩스","팩시밀리","팬티","퍼센트","페인트","편견","편의","편지","편히","평가","평균","평생","평소","평양","평일","평화","포스터","포인트","포장","포함","표면","표정","표준","표현","품목","품질","풍경","풍속","풍습","프랑스","프린터","플라스틱","피곤","피망","피아노","필름","필수","필요","필자","필통","핑계","하느님","하늘","하드웨어","하룻밤","하반기","하숙집","하순","하여튼","하지만","하천","하품","하필","학과","학교","학급","학기","학년","학력","학번","학부모","학비","학생","학술","학습","학용품","학원","학위","학자","학점","한계","한글","한꺼번에","한낮","한눈","한동안","한때","한라산","한마디","한문","한번","한복","한식","한여름","한쪽","할머니","할아버지","할인","함께","함부로","합격","합리적","항공","항구","항상","항의","해결","해군","해답","해당","해물","해석","해설","해수욕장","해안","핵심","핸드백","햄버거","햇볕","햇살","행동","행복","행사","행운","행위","향기","향상","향수","허락","허용","헬기","현관","현금","현대","현상","현실","현장","현재","현지","혈액","협력","형부","형사","형수","형식","형제","형태","형편","혜택","호기심","호남","호랑이","호박","호텔","호흡","혹시","홀로","홈페이지","홍보","홍수","홍차","화면","화분","화살","화요일","화장","화학","확보","확인","확장","확정","환갑","환경","환영","환율","환자","활기","활동","활발히","활용","활짝","회견","회관","회복","회색","회원","회장","회전","횟수","횡단보도","효율적","후반","후춧가루","훈련","훨씬","휴식","휴일","흉내","흐름","흑백","흑인","흔적","흔히","흥미","흥분","희곡","희망","희생","흰색","힘껏"]'
      );
    },
    function (e) {
      e.exports = JSON.parse(
        '["abaisser","abandon","abdiquer","abeille","abolir","aborder","aboutir","aboyer","abrasif","abreuver","abriter","abroger","abrupt","absence","absolu","absurde","abusif","abyssal","académie","acajou","acarien","accabler","accepter","acclamer","accolade","accroche","accuser","acerbe","achat","acheter","aciduler","acier","acompte","acquérir","acronyme","acteur","actif","actuel","adepte","adéquat","adhésif","adjectif","adjuger","admettre","admirer","adopter","adorer","adoucir","adresse","adroit","adulte","adverbe","aérer","aéronef","affaire","affecter","affiche","affreux","affubler","agacer","agencer","agile","agiter","agrafer","agréable","agrume","aider","aiguille","ailier","aimable","aisance","ajouter","ajuster","alarmer","alchimie","alerte","algèbre","algue","aliéner","aliment","alléger","alliage","allouer","allumer","alourdir","alpaga","altesse","alvéole","amateur","ambigu","ambre","aménager","amertume","amidon","amiral","amorcer","amour","amovible","amphibie","ampleur","amusant","analyse","anaphore","anarchie","anatomie","ancien","anéantir","angle","angoisse","anguleux","animal","annexer","annonce","annuel","anodin","anomalie","anonyme","anormal","antenne","antidote","anxieux","apaiser","apéritif","aplanir","apologie","appareil","appeler","apporter","appuyer","aquarium","aqueduc","arbitre","arbuste","ardeur","ardoise","argent","arlequin","armature","armement","armoire","armure","arpenter","arracher","arriver","arroser","arsenic","artériel","article","aspect","asphalte","aspirer","assaut","asservir","assiette","associer","assurer","asticot","astre","astuce","atelier","atome","atrium","atroce","attaque","attentif","attirer","attraper","aubaine","auberge","audace","audible","augurer","aurore","automne","autruche","avaler","avancer","avarice","avenir","averse","aveugle","aviateur","avide","avion","aviser","avoine","avouer","avril","axial","axiome","badge","bafouer","bagage","baguette","baignade","balancer","balcon","baleine","balisage","bambin","bancaire","bandage","banlieue","bannière","banquier","barbier","baril","baron","barque","barrage","bassin","bastion","bataille","bateau","batterie","baudrier","bavarder","belette","bélier","belote","bénéfice","berceau","berger","berline","bermuda","besace","besogne","bétail","beurre","biberon","bicycle","bidule","bijou","bilan","bilingue","billard","binaire","biologie","biopsie","biotype","biscuit","bison","bistouri","bitume","bizarre","blafard","blague","blanchir","blessant","blinder","blond","bloquer","blouson","bobard","bobine","boire","boiser","bolide","bonbon","bondir","bonheur","bonifier","bonus","bordure","borne","botte","boucle","boueux","bougie","boulon","bouquin","bourse","boussole","boutique","boxeur","branche","brasier","brave","brebis","brèche","breuvage","bricoler","brigade","brillant","brioche","brique","brochure","broder","bronzer","brousse","broyeur","brume","brusque","brutal","bruyant","buffle","buisson","bulletin","bureau","burin","bustier","butiner","butoir","buvable","buvette","cabanon","cabine","cachette","cadeau","cadre","caféine","caillou","caisson","calculer","calepin","calibre","calmer","calomnie","calvaire","camarade","caméra","camion","campagne","canal","caneton","canon","cantine","canular","capable","caporal","caprice","capsule","capter","capuche","carabine","carbone","caresser","caribou","carnage","carotte","carreau","carton","cascade","casier","casque","cassure","causer","caution","cavalier","caverne","caviar","cédille","ceinture","céleste","cellule","cendrier","censurer","central","cercle","cérébral","cerise","cerner","cerveau","cesser","chagrin","chaise","chaleur","chambre","chance","chapitre","charbon","chasseur","chaton","chausson","chavirer","chemise","chenille","chéquier","chercher","cheval","chien","chiffre","chignon","chimère","chiot","chlorure","chocolat","choisir","chose","chouette","chrome","chute","cigare","cigogne","cimenter","cinéma","cintrer","circuler","cirer","cirque","citerne","citoyen","citron","civil","clairon","clameur","claquer","classe","clavier","client","cligner","climat","clivage","cloche","clonage","cloporte","cobalt","cobra","cocasse","cocotier","coder","codifier","coffre","cogner","cohésion","coiffer","coincer","colère","colibri","colline","colmater","colonel","combat","comédie","commande","compact","concert","conduire","confier","congeler","connoter","consonne","contact","convexe","copain","copie","corail","corbeau","cordage","corniche","corpus","correct","cortège","cosmique","costume","coton","coude","coupure","courage","couteau","couvrir","coyote","crabe","crainte","cravate","crayon","créature","créditer","crémeux","creuser","crevette","cribler","crier","cristal","critère","croire","croquer","crotale","crucial","cruel","crypter","cubique","cueillir","cuillère","cuisine","cuivre","culminer","cultiver","cumuler","cupide","curatif","curseur","cyanure","cycle","cylindre","cynique","daigner","damier","danger","danseur","dauphin","débattre","débiter","déborder","débrider","débutant","décaler","décembre","déchirer","décider","déclarer","décorer","décrire","décupler","dédale","déductif","déesse","défensif","défiler","défrayer","dégager","dégivrer","déglutir","dégrafer","déjeuner","délice","déloger","demander","demeurer","démolir","dénicher","dénouer","dentelle","dénuder","départ","dépenser","déphaser","déplacer","déposer","déranger","dérober","désastre","descente","désert","désigner","désobéir","dessiner","destrier","détacher","détester","détourer","détresse","devancer","devenir","deviner","devoir","diable","dialogue","diamant","dicter","différer","digérer","digital","digne","diluer","dimanche","diminuer","dioxyde","directif","diriger","discuter","disposer","dissiper","distance","divertir","diviser","docile","docteur","dogme","doigt","domaine","domicile","dompter","donateur","donjon","donner","dopamine","dortoir","dorure","dosage","doseur","dossier","dotation","douanier","double","douceur","douter","doyen","dragon","draper","dresser","dribbler","droiture","duperie","duplexe","durable","durcir","dynastie","éblouir","écarter","écharpe","échelle","éclairer","éclipse","éclore","écluse","école","économie","écorce","écouter","écraser","écrémer","écrivain","écrou","écume","écureuil","édifier","éduquer","effacer","effectif","effigie","effort","effrayer","effusion","égaliser","égarer","éjecter","élaborer","élargir","électron","élégant","éléphant","élève","éligible","élitisme","éloge","élucider","éluder","emballer","embellir","embryon","émeraude","émission","emmener","émotion","émouvoir","empereur","employer","emporter","emprise","émulsion","encadrer","enchère","enclave","encoche","endiguer","endosser","endroit","enduire","énergie","enfance","enfermer","enfouir","engager","engin","englober","énigme","enjamber","enjeu","enlever","ennemi","ennuyeux","enrichir","enrobage","enseigne","entasser","entendre","entier","entourer","entraver","énumérer","envahir","enviable","envoyer","enzyme","éolien","épaissir","épargne","épatant","épaule","épicerie","épidémie","épier","épilogue","épine","épisode","épitaphe","époque","épreuve","éprouver","épuisant","équerre","équipe","ériger","érosion","erreur","éruption","escalier","espadon","espèce","espiègle","espoir","esprit","esquiver","essayer","essence","essieu","essorer","estime","estomac","estrade","étagère","étaler","étanche","étatique","éteindre","étendoir","éternel","éthanol","éthique","ethnie","étirer","étoffer","étoile","étonnant","étourdir","étrange","étroit","étude","euphorie","évaluer","évasion","éventail","évidence","éviter","évolutif","évoquer","exact","exagérer","exaucer","exceller","excitant","exclusif","excuse","exécuter","exemple","exercer","exhaler","exhorter","exigence","exiler","exister","exotique","expédier","explorer","exposer","exprimer","exquis","extensif","extraire","exulter","fable","fabuleux","facette","facile","facture","faiblir","falaise","fameux","famille","farceur","farfelu","farine","farouche","fasciner","fatal","fatigue","faucon","fautif","faveur","favori","fébrile","féconder","fédérer","félin","femme","fémur","fendoir","féodal","fermer","féroce","ferveur","festival","feuille","feutre","février","fiasco","ficeler","fictif","fidèle","figure","filature","filetage","filière","filleul","filmer","filou","filtrer","financer","finir","fiole","firme","fissure","fixer","flairer","flamme","flasque","flatteur","fléau","flèche","fleur","flexion","flocon","flore","fluctuer","fluide","fluvial","folie","fonderie","fongible","fontaine","forcer","forgeron","formuler","fortune","fossile","foudre","fougère","fouiller","foulure","fourmi","fragile","fraise","franchir","frapper","frayeur","frégate","freiner","frelon","frémir","frénésie","frère","friable","friction","frisson","frivole","froid","fromage","frontal","frotter","fruit","fugitif","fuite","fureur","furieux","furtif","fusion","futur","gagner","galaxie","galerie","gambader","garantir","gardien","garnir","garrigue","gazelle","gazon","géant","gélatine","gélule","gendarme","général","génie","genou","gentil","géologie","géomètre","géranium","germe","gestuel","geyser","gibier","gicler","girafe","givre","glace","glaive","glisser","globe","gloire","glorieux","golfeur","gomme","gonfler","gorge","gorille","goudron","gouffre","goulot","goupille","gourmand","goutte","graduel","graffiti","graine","grand","grappin","gratuit","gravir","grenat","griffure","griller","grimper","grogner","gronder","grotte","groupe","gruger","grutier","gruyère","guépard","guerrier","guide","guimauve","guitare","gustatif","gymnaste","gyrostat","habitude","hachoir","halte","hameau","hangar","hanneton","haricot","harmonie","harpon","hasard","hélium","hématome","herbe","hérisson","hermine","héron","hésiter","heureux","hiberner","hibou","hilarant","histoire","hiver","homard","hommage","homogène","honneur","honorer","honteux","horde","horizon","horloge","hormone","horrible","houleux","housse","hublot","huileux","humain","humble","humide","humour","hurler","hydromel","hygiène","hymne","hypnose","idylle","ignorer","iguane","illicite","illusion","image","imbiber","imiter","immense","immobile","immuable","impact","impérial","implorer","imposer","imprimer","imputer","incarner","incendie","incident","incliner","incolore","indexer","indice","inductif","inédit","ineptie","inexact","infini","infliger","informer","infusion","ingérer","inhaler","inhiber","injecter","injure","innocent","inoculer","inonder","inscrire","insecte","insigne","insolite","inspirer","instinct","insulter","intact","intense","intime","intrigue","intuitif","inutile","invasion","inventer","inviter","invoquer","ironique","irradier","irréel","irriter","isoler","ivoire","ivresse","jaguar","jaillir","jambe","janvier","jardin","jauger","jaune","javelot","jetable","jeton","jeudi","jeunesse","joindre","joncher","jongler","joueur","jouissif","journal","jovial","joyau","joyeux","jubiler","jugement","junior","jupon","juriste","justice","juteux","juvénile","kayak","kimono","kiosque","label","labial","labourer","lacérer","lactose","lagune","laine","laisser","laitier","lambeau","lamelle","lampe","lanceur","langage","lanterne","lapin","largeur","larme","laurier","lavabo","lavoir","lecture","légal","léger","légume","lessive","lettre","levier","lexique","lézard","liasse","libérer","libre","licence","licorne","liège","lièvre","ligature","ligoter","ligue","limer","limite","limonade","limpide","linéaire","lingot","lionceau","liquide","lisière","lister","lithium","litige","littoral","livreur","logique","lointain","loisir","lombric","loterie","louer","lourd","loutre","louve","loyal","lubie","lucide","lucratif","lueur","lugubre","luisant","lumière","lunaire","lundi","luron","lutter","luxueux","machine","magasin","magenta","magique","maigre","maillon","maintien","mairie","maison","majorer","malaxer","maléfice","malheur","malice","mallette","mammouth","mandater","maniable","manquant","manteau","manuel","marathon","marbre","marchand","mardi","maritime","marqueur","marron","marteler","mascotte","massif","matériel","matière","matraque","maudire","maussade","mauve","maximal","méchant","méconnu","médaille","médecin","méditer","méduse","meilleur","mélange","mélodie","membre","mémoire","menacer","mener","menhir","mensonge","mentor","mercredi","mérite","merle","messager","mesure","métal","météore","méthode","métier","meuble","miauler","microbe","miette","mignon","migrer","milieu","million","mimique","mince","minéral","minimal","minorer","minute","miracle","miroiter","missile","mixte","mobile","moderne","moelleux","mondial","moniteur","monnaie","monotone","monstre","montagne","monument","moqueur","morceau","morsure","mortier","moteur","motif","mouche","moufle","moulin","mousson","mouton","mouvant","multiple","munition","muraille","murène","murmure","muscle","muséum","musicien","mutation","muter","mutuel","myriade","myrtille","mystère","mythique","nageur","nappe","narquois","narrer","natation","nation","nature","naufrage","nautique","navire","nébuleux","nectar","néfaste","négation","négliger","négocier","neige","nerveux","nettoyer","neurone","neutron","neveu","niche","nickel","nitrate","niveau","noble","nocif","nocturne","noirceur","noisette","nomade","nombreux","nommer","normatif","notable","notifier","notoire","nourrir","nouveau","novateur","novembre","novice","nuage","nuancer","nuire","nuisible","numéro","nuptial","nuque","nutritif","obéir","objectif","obliger","obscur","observer","obstacle","obtenir","obturer","occasion","occuper","océan","octobre","octroyer","octupler","oculaire","odeur","odorant","offenser","officier","offrir","ogive","oiseau","oisillon","olfactif","olivier","ombrage","omettre","onctueux","onduler","onéreux","onirique","opale","opaque","opérer","opinion","opportun","opprimer","opter","optique","orageux","orange","orbite","ordonner","oreille","organe","orgueil","orifice","ornement","orque","ortie","osciller","osmose","ossature","otarie","ouragan","ourson","outil","outrager","ouvrage","ovation","oxyde","oxygène","ozone","paisible","palace","palmarès","palourde","palper","panache","panda","pangolin","paniquer","panneau","panorama","pantalon","papaye","papier","papoter","papyrus","paradoxe","parcelle","paresse","parfumer","parler","parole","parrain","parsemer","partager","parure","parvenir","passion","pastèque","paternel","patience","patron","pavillon","pavoiser","payer","paysage","peigne","peintre","pelage","pélican","pelle","pelouse","peluche","pendule","pénétrer","pénible","pensif","pénurie","pépite","péplum","perdrix","perforer","période","permuter","perplexe","persil","perte","peser","pétale","petit","pétrir","peuple","pharaon","phobie","phoque","photon","phrase","physique","piano","pictural","pièce","pierre","pieuvre","pilote","pinceau","pipette","piquer","pirogue","piscine","piston","pivoter","pixel","pizza","placard","plafond","plaisir","planer","plaque","plastron","plateau","pleurer","plexus","pliage","plomb","plonger","pluie","plumage","pochette","poésie","poète","pointe","poirier","poisson","poivre","polaire","policier","pollen","polygone","pommade","pompier","ponctuel","pondérer","poney","portique","position","posséder","posture","potager","poteau","potion","pouce","poulain","poumon","pourpre","poussin","pouvoir","prairie","pratique","précieux","prédire","préfixe","prélude","prénom","présence","prétexte","prévoir","primitif","prince","prison","priver","problème","procéder","prodige","profond","progrès","proie","projeter","prologue","promener","propre","prospère","protéger","prouesse","proverbe","prudence","pruneau","psychose","public","puceron","puiser","pulpe","pulsar","punaise","punitif","pupitre","purifier","puzzle","pyramide","quasar","querelle","question","quiétude","quitter","quotient","racine","raconter","radieux","ragondin","raideur","raisin","ralentir","rallonge","ramasser","rapide","rasage","ratisser","ravager","ravin","rayonner","réactif","réagir","réaliser","réanimer","recevoir","réciter","réclamer","récolter","recruter","reculer","recycler","rédiger","redouter","refaire","réflexe","réformer","refrain","refuge","régalien","région","réglage","régulier","réitérer","rejeter","rejouer","relatif","relever","relief","remarque","remède","remise","remonter","remplir","remuer","renard","renfort","renifler","renoncer","rentrer","renvoi","replier","reporter","reprise","reptile","requin","réserve","résineux","résoudre","respect","rester","résultat","rétablir","retenir","réticule","retomber","retracer","réunion","réussir","revanche","revivre","révolte","révulsif","richesse","rideau","rieur","rigide","rigoler","rincer","riposter","risible","risque","rituel","rival","rivière","rocheux","romance","rompre","ronce","rondin","roseau","rosier","rotatif","rotor","rotule","rouge","rouille","rouleau","routine","royaume","ruban","rubis","ruche","ruelle","rugueux","ruiner","ruisseau","ruser","rustique","rythme","sabler","saboter","sabre","sacoche","safari","sagesse","saisir","salade","salive","salon","saluer","samedi","sanction","sanglier","sarcasme","sardine","saturer","saugrenu","saumon","sauter","sauvage","savant","savonner","scalpel","scandale","scélérat","scénario","sceptre","schéma","science","scinder","score","scrutin","sculpter","séance","sécable","sécher","secouer","sécréter","sédatif","séduire","seigneur","séjour","sélectif","semaine","sembler","semence","séminal","sénateur","sensible","sentence","séparer","séquence","serein","sergent","sérieux","serrure","sérum","service","sésame","sévir","sevrage","sextuple","sidéral","siècle","siéger","siffler","sigle","signal","silence","silicium","simple","sincère","sinistre","siphon","sirop","sismique","situer","skier","social","socle","sodium","soigneux","soldat","soleil","solitude","soluble","sombre","sommeil","somnoler","sonde","songeur","sonnette","sonore","sorcier","sortir","sosie","sottise","soucieux","soudure","souffle","soulever","soupape","source","soutirer","souvenir","spacieux","spatial","spécial","sphère","spiral","stable","station","sternum","stimulus","stipuler","strict","studieux","stupeur","styliste","sublime","substrat","subtil","subvenir","succès","sucre","suffixe","suggérer","suiveur","sulfate","superbe","supplier","surface","suricate","surmener","surprise","sursaut","survie","suspect","syllabe","symbole","symétrie","synapse","syntaxe","système","tabac","tablier","tactile","tailler","talent","talisman","talonner","tambour","tamiser","tangible","tapis","taquiner","tarder","tarif","tartine","tasse","tatami","tatouage","taupe","taureau","taxer","témoin","temporel","tenaille","tendre","teneur","tenir","tension","terminer","terne","terrible","tétine","texte","thème","théorie","thérapie","thorax","tibia","tiède","timide","tirelire","tiroir","tissu","titane","titre","tituber","toboggan","tolérant","tomate","tonique","tonneau","toponyme","torche","tordre","tornade","torpille","torrent","torse","tortue","totem","toucher","tournage","tousser","toxine","traction","trafic","tragique","trahir","train","trancher","travail","trèfle","tremper","trésor","treuil","triage","tribunal","tricoter","trilogie","triomphe","tripler","triturer","trivial","trombone","tronc","tropical","troupeau","tuile","tulipe","tumulte","tunnel","turbine","tuteur","tutoyer","tuyau","tympan","typhon","typique","tyran","ubuesque","ultime","ultrason","unanime","unifier","union","unique","unitaire","univers","uranium","urbain","urticant","usage","usine","usuel","usure","utile","utopie","vacarme","vaccin","vagabond","vague","vaillant","vaincre","vaisseau","valable","valise","vallon","valve","vampire","vanille","vapeur","varier","vaseux","vassal","vaste","vecteur","vedette","végétal","véhicule","veinard","véloce","vendredi","vénérer","venger","venimeux","ventouse","verdure","vérin","vernir","verrou","verser","vertu","veston","vétéran","vétuste","vexant","vexer","viaduc","viande","victoire","vidange","vidéo","vignette","vigueur","vilain","village","vinaigre","violon","vipère","virement","virtuose","virus","visage","viseur","vision","visqueux","visuel","vital","vitesse","viticole","vitrine","vivace","vivipare","vocation","voguer","voile","voisin","voiture","volaille","volcan","voltiger","volume","vorace","vortex","voter","vouloir","voyage","voyelle","wagon","xénon","yacht","zèbre","zénith","zeste","zoologie"]'
      );
    },
    function (e) {
      e.exports = JSON.parse(
        '["abaco","abbaglio","abbinato","abete","abisso","abolire","abrasivo","abrogato","accadere","accenno","accusato","acetone","achille","acido","acqua","acre","acrilico","acrobata","acuto","adagio","addebito","addome","adeguato","aderire","adipe","adottare","adulare","affabile","affetto","affisso","affranto","aforisma","afoso","africano","agave","agente","agevole","aggancio","agire","agitare","agonismo","agricolo","agrumeto","aguzzo","alabarda","alato","albatro","alberato","albo","albume","alce","alcolico","alettone","alfa","algebra","aliante","alibi","alimento","allagato","allegro","allievo","allodola","allusivo","almeno","alogeno","alpaca","alpestre","altalena","alterno","alticcio","altrove","alunno","alveolo","alzare","amalgama","amanita","amarena","ambito","ambrato","ameba","america","ametista","amico","ammasso","ammenda","ammirare","ammonito","amore","ampio","ampliare","amuleto","anacardo","anagrafe","analista","anarchia","anatra","anca","ancella","ancora","andare","andrea","anello","angelo","angolare","angusto","anima","annegare","annidato","anno","annuncio","anonimo","anticipo","anzi","apatico","apertura","apode","apparire","appetito","appoggio","approdo","appunto","aprile","arabica","arachide","aragosta","araldica","arancio","aratura","arazzo","arbitro","archivio","ardito","arenile","argento","argine","arguto","aria","armonia","arnese","arredato","arringa","arrosto","arsenico","arso","artefice","arzillo","asciutto","ascolto","asepsi","asettico","asfalto","asino","asola","aspirato","aspro","assaggio","asse","assoluto","assurdo","asta","astenuto","astice","astratto","atavico","ateismo","atomico","atono","attesa","attivare","attorno","attrito","attuale","ausilio","austria","autista","autonomo","autunno","avanzato","avere","avvenire","avviso","avvolgere","azione","azoto","azzimo","azzurro","babele","baccano","bacino","baco","badessa","badilata","bagnato","baita","balcone","baldo","balena","ballata","balzano","bambino","bandire","baraonda","barbaro","barca","baritono","barlume","barocco","basilico","basso","batosta","battuto","baule","bava","bavosa","becco","beffa","belgio","belva","benda","benevole","benigno","benzina","bere","berlina","beta","bibita","bici","bidone","bifido","biga","bilancia","bimbo","binocolo","biologo","bipede","bipolare","birbante","birra","biscotto","bisesto","bisnonno","bisonte","bisturi","bizzarro","blando","blatta","bollito","bonifico","bordo","bosco","botanico","bottino","bozzolo","braccio","bradipo","brama","branca","bravura","bretella","brevetto","brezza","briglia","brillante","brindare","broccolo","brodo","bronzina","brullo","bruno","bubbone","buca","budino","buffone","buio","bulbo","buono","burlone","burrasca","bussola","busta","cadetto","caduco","calamaro","calcolo","calesse","calibro","calmo","caloria","cambusa","camerata","camicia","cammino","camola","campale","canapa","candela","cane","canino","canotto","cantina","capace","capello","capitolo","capogiro","cappero","capra","capsula","carapace","carcassa","cardo","carisma","carovana","carretto","cartolina","casaccio","cascata","caserma","caso","cassone","castello","casuale","catasta","catena","catrame","cauto","cavillo","cedibile","cedrata","cefalo","celebre","cellulare","cena","cenone","centesimo","ceramica","cercare","certo","cerume","cervello","cesoia","cespo","ceto","chela","chiaro","chicca","chiedere","chimera","china","chirurgo","chitarra","ciao","ciclismo","cifrare","cigno","cilindro","ciottolo","circa","cirrosi","citrico","cittadino","ciuffo","civetta","civile","classico","clinica","cloro","cocco","codardo","codice","coerente","cognome","collare","colmato","colore","colposo","coltivato","colza","coma","cometa","commando","comodo","computer","comune","conciso","condurre","conferma","congelare","coniuge","connesso","conoscere","consumo","continuo","convegno","coperto","copione","coppia","copricapo","corazza","cordata","coricato","cornice","corolla","corpo","corredo","corsia","cortese","cosmico","costante","cottura","covato","cratere","cravatta","creato","credere","cremoso","crescita","creta","criceto","crinale","crisi","critico","croce","cronaca","crostata","cruciale","crusca","cucire","cuculo","cugino","cullato","cupola","curatore","cursore","curvo","cuscino","custode","dado","daino","dalmata","damerino","daniela","dannoso","danzare","datato","davanti","davvero","debutto","decennio","deciso","declino","decollo","decreto","dedicato","definito","deforme","degno","delegare","delfino","delirio","delta","demenza","denotato","dentro","deposito","derapata","derivare","deroga","descritto","deserto","desiderio","desumere","detersivo","devoto","diametro","dicembre","diedro","difeso","diffuso","digerire","digitale","diluvio","dinamico","dinnanzi","dipinto","diploma","dipolo","diradare","dire","dirotto","dirupo","disagio","discreto","disfare","disgelo","disposto","distanza","disumano","dito","divano","divelto","dividere","divorato","doblone","docente","doganale","dogma","dolce","domato","domenica","dominare","dondolo","dono","dormire","dote","dottore","dovuto","dozzina","drago","druido","dubbio","dubitare","ducale","duna","duomo","duplice","duraturo","ebano","eccesso","ecco","eclissi","economia","edera","edicola","edile","editoria","educare","egemonia","egli","egoismo","egregio","elaborato","elargire","elegante","elencato","eletto","elevare","elfico","elica","elmo","elsa","eluso","emanato","emblema","emesso","emiro","emotivo","emozione","empirico","emulo","endemico","enduro","energia","enfasi","enoteca","entrare","enzima","epatite","epilogo","episodio","epocale","eppure","equatore","erario","erba","erboso","erede","eremita","erigere","ermetico","eroe","erosivo","errante","esagono","esame","esanime","esaudire","esca","esempio","esercito","esibito","esigente","esistere","esito","esofago","esortato","esoso","espanso","espresso","essenza","esso","esteso","estimare","estonia","estroso","esultare","etilico","etnico","etrusco","etto","euclideo","europa","evaso","evidenza","evitato","evoluto","evviva","fabbrica","faccenda","fachiro","falco","famiglia","fanale","fanfara","fango","fantasma","fare","farfalla","farinoso","farmaco","fascia","fastoso","fasullo","faticare","fato","favoloso","febbre","fecola","fede","fegato","felpa","feltro","femmina","fendere","fenomeno","fermento","ferro","fertile","fessura","festivo","fetta","feudo","fiaba","fiducia","fifa","figurato","filo","finanza","finestra","finire","fiore","fiscale","fisico","fiume","flacone","flamenco","flebo","flemma","florido","fluente","fluoro","fobico","focaccia","focoso","foderato","foglio","folata","folclore","folgore","fondente","fonetico","fonia","fontana","forbito","forchetta","foresta","formica","fornaio","foro","fortezza","forzare","fosfato","fosso","fracasso","frana","frassino","fratello","freccetta","frenata","fresco","frigo","frollino","fronde","frugale","frutta","fucilata","fucsia","fuggente","fulmine","fulvo","fumante","fumetto","fumoso","fune","funzione","fuoco","furbo","furgone","furore","fuso","futile","gabbiano","gaffe","galateo","gallina","galoppo","gambero","gamma","garanzia","garbo","garofano","garzone","gasdotto","gasolio","gastrico","gatto","gaudio","gazebo","gazzella","geco","gelatina","gelso","gemello","gemmato","gene","genitore","gennaio","genotipo","gergo","ghepardo","ghiaccio","ghisa","giallo","gilda","ginepro","giocare","gioiello","giorno","giove","girato","girone","gittata","giudizio","giurato","giusto","globulo","glutine","gnomo","gobba","golf","gomito","gommone","gonfio","gonna","governo","gracile","grado","grafico","grammo","grande","grattare","gravoso","grazia","greca","gregge","grifone","grigio","grinza","grotta","gruppo","guadagno","guaio","guanto","guardare","gufo","guidare","ibernato","icona","identico","idillio","idolo","idra","idrico","idrogeno","igiene","ignaro","ignorato","ilare","illeso","illogico","illudere","imballo","imbevuto","imbocco","imbuto","immane","immerso","immolato","impacco","impeto","impiego","importo","impronta","inalare","inarcare","inattivo","incanto","incendio","inchino","incisivo","incluso","incontro","incrocio","incubo","indagine","india","indole","inedito","infatti","infilare","inflitto","ingaggio","ingegno","inglese","ingordo","ingrosso","innesco","inodore","inoltrare","inondato","insano","insetto","insieme","insonnia","insulina","intasato","intero","intonaco","intuito","inumidire","invalido","invece","invito","iperbole","ipnotico","ipotesi","ippica","iride","irlanda","ironico","irrigato","irrorare","isolato","isotopo","isterico","istituto","istrice","italia","iterare","labbro","labirinto","lacca","lacerato","lacrima","lacuna","laddove","lago","lampo","lancetta","lanterna","lardoso","larga","laringe","lastra","latenza","latino","lattuga","lavagna","lavoro","legale","leggero","lembo","lentezza","lenza","leone","lepre","lesivo","lessato","lesto","letterale","leva","levigato","libero","lido","lievito","lilla","limatura","limitare","limpido","lineare","lingua","liquido","lira","lirica","lisca","lite","litigio","livrea","locanda","lode","logica","lombare","londra","longevo","loquace","lorenzo","loto","lotteria","luce","lucidato","lumaca","luminoso","lungo","lupo","luppolo","lusinga","lusso","lutto","macabro","macchina","macero","macinato","madama","magico","maglia","magnete","magro","maiolica","malafede","malgrado","malinteso","malsano","malto","malumore","mana","mancia","mandorla","mangiare","manifesto","mannaro","manovra","mansarda","mantide","manubrio","mappa","maratona","marcire","maretta","marmo","marsupio","maschera","massaia","mastino","materasso","matricola","mattone","maturo","mazurca","meandro","meccanico","mecenate","medesimo","meditare","mega","melassa","melis","melodia","meninge","meno","mensola","mercurio","merenda","merlo","meschino","mese","messere","mestolo","metallo","metodo","mettere","miagolare","mica","micelio","michele","microbo","midollo","miele","migliore","milano","milite","mimosa","minerale","mini","minore","mirino","mirtillo","miscela","missiva","misto","misurare","mitezza","mitigare","mitra","mittente","mnemonico","modello","modifica","modulo","mogano","mogio","mole","molosso","monastero","monco","mondina","monetario","monile","monotono","monsone","montato","monviso","mora","mordere","morsicato","mostro","motivato","motosega","motto","movenza","movimento","mozzo","mucca","mucosa","muffa","mughetto","mugnaio","mulatto","mulinello","multiplo","mummia","munto","muovere","murale","musa","muscolo","musica","mutevole","muto","nababbo","nafta","nanometro","narciso","narice","narrato","nascere","nastrare","naturale","nautica","naviglio","nebulosa","necrosi","negativo","negozio","nemmeno","neofita","neretto","nervo","nessuno","nettuno","neutrale","neve","nevrotico","nicchia","ninfa","nitido","nobile","nocivo","nodo","nome","nomina","nordico","normale","norvegese","nostrano","notare","notizia","notturno","novella","nucleo","nulla","numero","nuovo","nutrire","nuvola","nuziale","oasi","obbedire","obbligo","obelisco","oblio","obolo","obsoleto","occasione","occhio","occidente","occorrere","occultare","ocra","oculato","odierno","odorare","offerta","offrire","offuscato","oggetto","oggi","ognuno","olandese","olfatto","oliato","oliva","ologramma","oltre","omaggio","ombelico","ombra","omega","omissione","ondoso","onere","onice","onnivoro","onorevole","onta","operato","opinione","opposto","oracolo","orafo","ordine","orecchino","orefice","orfano","organico","origine","orizzonte","orma","ormeggio","ornativo","orologio","orrendo","orribile","ortensia","ortica","orzata","orzo","osare","oscurare","osmosi","ospedale","ospite","ossa","ossidare","ostacolo","oste","otite","otre","ottagono","ottimo","ottobre","ovale","ovest","ovino","oviparo","ovocito","ovunque","ovviare","ozio","pacchetto","pace","pacifico","padella","padrone","paese","paga","pagina","palazzina","palesare","pallido","palo","palude","pandoro","pannello","paolo","paonazzo","paprica","parabola","parcella","parere","pargolo","pari","parlato","parola","partire","parvenza","parziale","passivo","pasticca","patacca","patologia","pattume","pavone","peccato","pedalare","pedonale","peggio","peloso","penare","pendice","penisola","pennuto","penombra","pensare","pentola","pepe","pepita","perbene","percorso","perdonato","perforare","pergamena","periodo","permesso","perno","perplesso","persuaso","pertugio","pervaso","pesatore","pesista","peso","pestifero","petalo","pettine","petulante","pezzo","piacere","pianta","piattino","piccino","picozza","piega","pietra","piffero","pigiama","pigolio","pigro","pila","pilifero","pillola","pilota","pimpante","pineta","pinna","pinolo","pioggia","piombo","piramide","piretico","pirite","pirolisi","pitone","pizzico","placebo","planare","plasma","platano","plenario","pochezza","poderoso","podismo","poesia","poggiare","polenta","poligono","pollice","polmonite","polpetta","polso","poltrona","polvere","pomice","pomodoro","ponte","popoloso","porfido","poroso","porpora","porre","portata","posa","positivo","possesso","postulato","potassio","potere","pranzo","prassi","pratica","precluso","predica","prefisso","pregiato","prelievo","premere","prenotare","preparato","presenza","pretesto","prevalso","prima","principe","privato","problema","procura","produrre","profumo","progetto","prolunga","promessa","pronome","proposta","proroga","proteso","prova","prudente","prugna","prurito","psiche","pubblico","pudica","pugilato","pugno","pulce","pulito","pulsante","puntare","pupazzo","pupilla","puro","quadro","qualcosa","quasi","querela","quota","raccolto","raddoppio","radicale","radunato","raffica","ragazzo","ragione","ragno","ramarro","ramingo","ramo","randagio","rantolare","rapato","rapina","rappreso","rasatura","raschiato","rasente","rassegna","rastrello","rata","ravveduto","reale","recepire","recinto","recluta","recondito","recupero","reddito","redimere","regalato","registro","regola","regresso","relazione","remare","remoto","renna","replica","reprimere","reputare","resa","residente","responso","restauro","rete","retina","retorica","rettifica","revocato","riassunto","ribadire","ribelle","ribrezzo","ricarica","ricco","ricevere","riciclato","ricordo","ricreduto","ridicolo","ridurre","rifasare","riflesso","riforma","rifugio","rigare","rigettato","righello","rilassato","rilevato","rimanere","rimbalzo","rimedio","rimorchio","rinascita","rincaro","rinforzo","rinnovo","rinomato","rinsavito","rintocco","rinuncia","rinvenire","riparato","ripetuto","ripieno","riportare","ripresa","ripulire","risata","rischio","riserva","risibile","riso","rispetto","ristoro","risultato","risvolto","ritardo","ritegno","ritmico","ritrovo","riunione","riva","riverso","rivincita","rivolto","rizoma","roba","robotico","robusto","roccia","roco","rodaggio","rodere","roditore","rogito","rollio","romantico","rompere","ronzio","rosolare","rospo","rotante","rotondo","rotula","rovescio","rubizzo","rubrica","ruga","rullino","rumine","rumoroso","ruolo","rupe","russare","rustico","sabato","sabbiare","sabotato","sagoma","salasso","saldatura","salgemma","salivare","salmone","salone","saltare","saluto","salvo","sapere","sapido","saporito","saraceno","sarcasmo","sarto","sassoso","satellite","satira","satollo","saturno","savana","savio","saziato","sbadiglio","sbalzo","sbancato","sbarra","sbattere","sbavare","sbendare","sbirciare","sbloccato","sbocciato","sbrinare","sbruffone","sbuffare","scabroso","scadenza","scala","scambiare","scandalo","scapola","scarso","scatenare","scavato","scelto","scenico","scettro","scheda","schiena","sciarpa","scienza","scindere","scippo","sciroppo","scivolo","sclerare","scodella","scolpito","scomparto","sconforto","scoprire","scorta","scossone","scozzese","scriba","scrollare","scrutinio","scuderia","scultore","scuola","scuro","scusare","sdebitare","sdoganare","seccatura","secondo","sedano","seggiola","segnalato","segregato","seguito","selciato","selettivo","sella","selvaggio","semaforo","sembrare","seme","seminato","sempre","senso","sentire","sepolto","sequenza","serata","serbato","sereno","serio","serpente","serraglio","servire","sestina","setola","settimana","sfacelo","sfaldare","sfamato","sfarzoso","sfaticato","sfera","sfida","sfilato","sfinge","sfocato","sfoderare","sfogo","sfoltire","sforzato","sfratto","sfruttato","sfuggito","sfumare","sfuso","sgabello","sgarbato","sgonfiare","sgorbio","sgrassato","sguardo","sibilo","siccome","sierra","sigla","signore","silenzio","sillaba","simbolo","simpatico","simulato","sinfonia","singolo","sinistro","sino","sintesi","sinusoide","sipario","sisma","sistole","situato","slitta","slogatura","sloveno","smarrito","smemorato","smentito","smeraldo","smilzo","smontare","smottato","smussato","snellire","snervato","snodo","sobbalzo","sobrio","soccorso","sociale","sodale","soffitto","sogno","soldato","solenne","solido","sollazzo","solo","solubile","solvente","somatico","somma","sonda","sonetto","sonnifero","sopire","soppeso","sopra","sorgere","sorpasso","sorriso","sorso","sorteggio","sorvolato","sospiro","sosta","sottile","spada","spalla","spargere","spatola","spavento","spazzola","specie","spedire","spegnere","spelatura","speranza","spessore","spettrale","spezzato","spia","spigoloso","spillato","spinoso","spirale","splendido","sportivo","sposo","spranga","sprecare","spronato","spruzzo","spuntino","squillo","sradicare","srotolato","stabile","stacco","staffa","stagnare","stampato","stantio","starnuto","stasera","statuto","stelo","steppa","sterzo","stiletto","stima","stirpe","stivale","stizzoso","stonato","storico","strappo","stregato","stridulo","strozzare","strutto","stuccare","stufo","stupendo","subentro","succoso","sudore","suggerito","sugo","sultano","suonare","superbo","supporto","surgelato","surrogato","sussurro","sutura","svagare","svedese","sveglio","svelare","svenuto","svezia","sviluppo","svista","svizzera","svolta","svuotare","tabacco","tabulato","tacciare","taciturno","tale","talismano","tampone","tannino","tara","tardivo","targato","tariffa","tarpare","tartaruga","tasto","tattico","taverna","tavolata","tazza","teca","tecnico","telefono","temerario","tempo","temuto","tendone","tenero","tensione","tentacolo","teorema","terme","terrazzo","terzetto","tesi","tesserato","testato","tetro","tettoia","tifare","tigella","timbro","tinto","tipico","tipografo","tiraggio","tiro","titanio","titolo","titubante","tizio","tizzone","toccare","tollerare","tolto","tombola","tomo","tonfo","tonsilla","topazio","topologia","toppa","torba","tornare","torrone","tortora","toscano","tossire","tostatura","totano","trabocco","trachea","trafila","tragedia","tralcio","tramonto","transito","trapano","trarre","trasloco","trattato","trave","treccia","tremolio","trespolo","tributo","tricheco","trifoglio","trillo","trincea","trio","tristezza","triturato","trivella","tromba","trono","troppo","trottola","trovare","truccato","tubatura","tuffato","tulipano","tumulto","tunisia","turbare","turchino","tuta","tutela","ubicato","uccello","uccisore","udire","uditivo","uffa","ufficio","uguale","ulisse","ultimato","umano","umile","umorismo","uncinetto","ungere","ungherese","unicorno","unificato","unisono","unitario","unte","uovo","upupa","uragano","urgenza","urlo","usanza","usato","uscito","usignolo","usuraio","utensile","utilizzo","utopia","vacante","vaccinato","vagabondo","vagliato","valanga","valgo","valico","valletta","valoroso","valutare","valvola","vampata","vangare","vanitoso","vano","vantaggio","vanvera","vapore","varano","varcato","variante","vasca","vedetta","vedova","veduto","vegetale","veicolo","velcro","velina","velluto","veloce","venato","vendemmia","vento","verace","verbale","vergogna","verifica","vero","verruca","verticale","vescica","vessillo","vestale","veterano","vetrina","vetusto","viandante","vibrante","vicenda","vichingo","vicinanza","vidimare","vigilia","vigneto","vigore","vile","villano","vimini","vincitore","viola","vipera","virgola","virologo","virulento","viscoso","visione","vispo","vissuto","visura","vita","vitello","vittima","vivanda","vivido","viziare","voce","voga","volatile","volere","volpe","voragine","vulcano","zampogna","zanna","zappato","zattera","zavorra","zefiro","zelante","zelo","zenzero","zerbino","zibetto","zinco","zircone","zitto","zolla","zotico","zucchero","zufolo","zulu","zuppa"]'
      );
    },
    function (e) {
      e.exports = JSON.parse(
        '["ábaco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","acción","aceite","acelga","acento","aceptar","ácido","aclarar","acné","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","aéreo","afectar","afición","afinar","afirmar","ágil","agitar","agonía","agosto","agotar","agregar","agrio","agua","agudo","águila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacrán","alambre","alarma","alba","álbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodón","aliado","aliento","alivio","alma","almeja","almíbar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","ámbar","ámbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","andén","anemia","ángulo","anillo","ánimo","anís","anotar","antena","antiguo","antojo","anual","anular","anuncio","añadir","añejo","año","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","araña","arar","árbitro","árbol","arbusto","archivo","arco","arder","ardilla","arduo","área","árido","aries","armonía","arnés","aroma","arpa","arpón","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","áspero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","ático","atleta","átomo","atraer","atroz","atún","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avión","aviso","ayer","ayuda","ayuno","azafrán","azar","azote","azúcar","azufre","azul","baba","babor","bache","bahía","baile","bajar","balanza","balcón","balde","bambú","banco","banda","baño","barba","barco","barniz","barro","báscula","bastón","basura","batalla","batería","batir","batuta","baúl","bazar","bebé","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsái","borde","borrar","bosque","bote","botín","bóveda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufón","búho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzón","caballo","cabeza","cabina","cabra","cacao","cadáver","cadena","caer","café","caída","caimán","caja","cajón","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","cáncer","candil","canela","canguro","canica","canto","caña","cañón","caoba","caos","capaz","capitán","capote","captar","capucha","cara","carbón","cárcel","careta","carga","cariño","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","célebre","celoso","célula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","césped","cetro","chacal","chaleco","champú","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclón","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","ciprés","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","clínica","cobre","cocción","cochino","cocina","coco","código","codo","cofre","coger","cohete","cojín","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","cómodo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazón","corbata","corcho","cordón","corona","correr","coser","cosmos","costa","cráneo","cráter","crear","crecer","creído","crema","cría","crimen","cripta","crisis","cromo","crónica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupón","cúpula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","dátil","deber","débil","década","decir","dedo","defensa","definir","dejar","delfín","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvío","detalle","detener","deuda","día","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difícil","digno","dilema","diluir","dinero","directo","dirigir","disco","diseño","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","dragón","droga","ducha","duda","duelo","dueño","dulce","dúo","duque","durar","dureza","duro","ébano","ebrio","echar","eco","ecuador","edad","edición","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","élite","elixir","elogio","eludir","embudo","emitir","emoción","empate","empeño","empleo","empresa","enano","encargo","enchufe","encía","enemigo","enero","enfado","enfermo","engaño","enigma","enlace","enorme","enredo","ensayo","enseñar","entero","entrar","envase","envío","época","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espía","esposa","espuma","esquí","estar","este","estilo","estufa","etapa","eterno","ética","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","éxito","experto","explicar","exponer","extremo","fábrica","fábula","fachada","fácil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","faraón","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fértil","fervor","festín","fiable","fianza","fiar","fibra","ficción","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flúor","fobia","foca","fogata","fogón","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","frágil","franja","frase","fraude","freír","freno","fresa","frío","frito","fruta","fuego","fuente","fuerza","fuga","fumar","función","funda","furgón","furia","fusil","fútbol","futuro","gacela","gafas","gaita","gajo","gala","galería","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavilán","gemelo","gemir","gen","género","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gráfico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","grúa","grueso","grumo","grupo","guante","guapo","guardia","guerra","guía","guiño","guion","guiso","guitarra","gusano","gustar","haber","hábil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazaña","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","héroe","hervir","hielo","hierro","hígado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","húmedo","humilde","humo","hundir","huracán","hurto","icono","ideal","idioma","ídolo","iglesia","iglú","igual","ilegal","ilusión","imagen","imán","imitar","impar","imperio","imponer","impulso","incapaz","índice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","interés","íntimo","intuir","inútil","invierno","ira","iris","ironía","isla","islote","jabalí","jabón","jamón","jarabe","jardín","jarra","jaula","jazmín","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","júpiter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladrón","lagarto","lágrima","laguna","laico","lamer","lámina","lámpara","lana","lancha","langosta","lanza","lápiz","largo","larva","lástima","lata","látex","latir","laurel","lavar","lazo","leal","lección","leche","lector","leer","legión","legumbre","lejano","lengua","lento","leña","león","leopardo","lesión","letal","letra","leve","leyenda","libertad","libro","licor","líder","lidiar","lienzo","liga","ligero","lima","límite","limón","limpio","lince","lindo","línea","lingote","lino","linterna","líquido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","loción","loco","locura","lógica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","maíz","maldad","maleta","malla","malo","mamá","mambo","mamut","manco","mando","manejar","manga","maniquí","manjar","mano","manso","manta","mañana","mapa","máquina","mar","marco","marea","marfil","margen","marido","mármol","marrón","martes","marzo","masa","máscara","masivo","matar","materia","matiz","matriz","máximo","mayor","mazorca","mecha","medalla","medio","médula","mejilla","mejor","melena","melón","memoria","menor","mensaje","mente","menú","mercado","merengue","mérito","mes","mesón","meta","meter","método","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millón","mimo","mina","minero","mínimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","moción","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","moño","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","móvil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","muñeca","mural","muro","músculo","museo","musgo","música","muslo","nácar","nación","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","náusea","naval","nave","navidad","necio","néctar","negar","negocio","negro","neón","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","niñez","niño","nítido","nivel","nobleza","noche","nómina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","núcleo","nudillo","nudo","nuera","nueve","nuez","nulo","número","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","océano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oído","oír","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opción","ópera","opinar","oponer","optar","óptica","opuesto","oración","orador","oral","órbita","orca","orden","oreja","órgano","orgía","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadía","oscuro","osezno","oso","ostra","otoño","otro","oveja","óvulo","óxido","oxígeno","oyente","ozono","pacto","padre","paella","página","pago","país","pájaro","palabra","palco","paleta","pálido","palma","paloma","palpar","pan","panal","pánico","pantera","pañuelo","papá","papel","papilla","paquete","parar","parcela","pared","parir","paro","párpado","parque","párrafo","parte","pasar","paseo","pasión","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peatón","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldaño","pelea","peligro","pellejo","pelo","peluca","pena","pensar","peñón","peón","peor","pepino","pequeño","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pésimo","pestaña","pétalo","petróleo","pez","pezuña","picar","pichón","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","piña","piojo","pipa","pirata","pisar","piscina","piso","pista","pitón","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesía","poeta","polen","policía","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porción","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","príncipe","prisión","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","próximo","prueba","público","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmón","pulpo","pulso","puma","punto","puñal","puño","pupa","pupila","puré","quedar","queja","quemar","querer","queso","quieto","química","quince","quitar","rábano","rabia","rabo","ración","radical","raíz","rama","rampa","rancho","rango","rapaz","rápido","rapto","rasgo","raspa","rato","rayo","raza","razón","reacción","realidad","rebaño","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refrán","refugio","regalo","regir","regla","regreso","rehén","reino","reír","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","revés","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","rígido","rigor","rincón","riñón","río","riqueza","risa","ritmo","rito","rizo","roble","roce","rociar","rodar","rodeo","rodilla","roer","rojizo","rojo","romero","romper","ron","ronco","ronda","ropa","ropero","rosa","rosca","rostro","rotar","rubí","rubor","rudo","rueda","rugir","ruido","ruina","ruleta","rulo","rumbo","rumor","ruptura","ruta","rutina","sábado","saber","sabio","sable","sacar","sagaz","sagrado","sala","saldo","salero","salir","salmón","salón","salsa","salto","salud","salvar","samba","sanción","sandía","sanear","sangre","sanidad","sano","santo","sapo","saque","sardina","sartén","sastre","satán","sauna","saxofón","sección","seco","secreto","secta","sed","seguir","seis","sello","selva","semana","semilla","senda","sensor","señal","señor","separar","sepia","sequía","ser","serie","sermón","servir","sesenta","sesión","seta","setenta","severo","sexo","sexto","sidra","siesta","siete","siglo","signo","sílaba","silbar","silencio","silla","símbolo","simio","sirena","sistema","sitio","situar","sobre","socio","sodio","sol","solapa","soldado","soledad","sólido","soltar","solución","sombra","sondeo","sonido","sonoro","sonrisa","sopa","soplar","soporte","sordo","sorpresa","sorteo","sostén","sótano","suave","subir","suceso","sudor","suegra","suelo","sueño","suerte","sufrir","sujeto","sultán","sumar","superar","suplir","suponer","supremo","sur","surco","sureño","surgir","susto","sutil","tabaco","tabique","tabla","tabú","taco","tacto","tajo","talar","talco","talento","talla","talón","tamaño","tambor","tango","tanque","tapa","tapete","tapia","tapón","taquilla","tarde","tarea","tarifa","tarjeta","tarot","tarro","tarta","tatuaje","tauro","taza","tazón","teatro","techo","tecla","técnica","tejado","tejer","tejido","tela","teléfono","tema","temor","templo","tenaz","tender","tener","tenis","tenso","teoría","terapia","terco","término","ternura","terror","tesis","tesoro","testigo","tetera","texto","tez","tibio","tiburón","tiempo","tienda","tierra","tieso","tigre","tijera","tilde","timbre","tímido","timo","tinta","tío","típico","tipo","tira","tirón","titán","títere","título","tiza","toalla","tobillo","tocar","tocino","todo","toga","toldo","tomar","tono","tonto","topar","tope","toque","tórax","torero","tormenta","torneo","toro","torpedo","torre","torso","tortuga","tos","tosco","toser","tóxico","trabajo","tractor","traer","tráfico","trago","traje","tramo","trance","trato","trauma","trazar","trébol","tregua","treinta","tren","trepar","tres","tribu","trigo","tripa","triste","triunfo","trofeo","trompa","tronco","tropa","trote","trozo","truco","trueno","trufa","tubería","tubo","tuerto","tumba","tumor","túnel","túnica","turbina","turismo","turno","tutor","ubicar","úlcera","umbral","unidad","unir","universo","uno","untar","uña","urbano","urbe","urgente","urna","usar","usuario","útil","utopía","uva","vaca","vacío","vacuna","vagar","vago","vaina","vajilla","vale","válido","valle","valor","válvula","vampiro","vara","variar","varón","vaso","vecino","vector","vehículo","veinte","vejez","vela","velero","veloz","vena","vencer","venda","veneno","vengar","venir","venta","venus","ver","verano","verbo","verde","vereda","verja","verso","verter","vía","viaje","vibrar","vicio","víctima","vida","vídeo","vidrio","viejo","viernes","vigor","vil","villa","vinagre","vino","viñedo","violín","viral","virgo","virtud","visor","víspera","vista","vitamina","viudo","vivaz","vivero","vivir","vivo","volcán","volumen","volver","voraz","votar","voto","voz","vuelo","vulgar","yacer","yate","yegua","yema","yerno","yeso","yodo","yoga","yogur","zafiro","zanja","zapato","zarza","zona","zorro","zumo","zurdo"]'
      );
    },
    function (e) {
      e.exports = JSON.parse(
        '["あいこくしん","あいさつ","あいだ","あおぞら","あかちゃん","あきる","あけがた","あける","あこがれる","あさい","あさひ","あしあと","あじわう","あずかる","あずき","あそぶ","あたえる","あたためる","あたりまえ","あたる","あつい","あつかう","あっしゅく","あつまり","あつめる","あてな","あてはまる","あひる","あぶら","あぶる","あふれる","あまい","あまど","あまやかす","あまり","あみもの","あめりか","あやまる","あゆむ","あらいぐま","あらし","あらすじ","あらためる","あらゆる","あらわす","ありがとう","あわせる","あわてる","あんい","あんがい","あんこ","あんぜん","あんてい","あんない","あんまり","いいだす","いおん","いがい","いがく","いきおい","いきなり","いきもの","いきる","いくじ","いくぶん","いけばな","いけん","いこう","いこく","いこつ","いさましい","いさん","いしき","いじゅう","いじょう","いじわる","いずみ","いずれ","いせい","いせえび","いせかい","いせき","いぜん","いそうろう","いそがしい","いだい","いだく","いたずら","いたみ","いたりあ","いちおう","いちじ","いちど","いちば","いちぶ","いちりゅう","いつか","いっしゅん","いっせい","いっそう","いったん","いっち","いってい","いっぽう","いてざ","いてん","いどう","いとこ","いない","いなか","いねむり","いのち","いのる","いはつ","いばる","いはん","いびき","いひん","いふく","いへん","いほう","いみん","いもうと","いもたれ","いもり","いやがる","いやす","いよかん","いよく","いらい","いらすと","いりぐち","いりょう","いれい","いれもの","いれる","いろえんぴつ","いわい","いわう","いわかん","いわば","いわゆる","いんげんまめ","いんさつ","いんしょう","いんよう","うえき","うえる","うおざ","うがい","うかぶ","うかべる","うきわ","うくらいな","うくれれ","うけたまわる","うけつけ","うけとる","うけもつ","うける","うごかす","うごく","うこん","うさぎ","うしなう","うしろがみ","うすい","うすぎ","うすぐらい","うすめる","うせつ","うちあわせ","うちがわ","うちき","うちゅう","うっかり","うつくしい","うったえる","うつる","うどん","うなぎ","うなじ","うなずく","うなる","うねる","うのう","うぶげ","うぶごえ","うまれる","うめる","うもう","うやまう","うよく","うらがえす","うらぐち","うらない","うりあげ","うりきれ","うるさい","うれしい","うれゆき","うれる","うろこ","うわき","うわさ","うんこう","うんちん","うんてん","うんどう","えいえん","えいが","えいきょう","えいご","えいせい","えいぶん","えいよう","えいわ","えおり","えがお","えがく","えきたい","えくせる","えしゃく","えすて","えつらん","えのぐ","えほうまき","えほん","えまき","えもじ","えもの","えらい","えらぶ","えりあ","えんえん","えんかい","えんぎ","えんげき","えんしゅう","えんぜつ","えんそく","えんちょう","えんとつ","おいかける","おいこす","おいしい","おいつく","おうえん","おうさま","おうじ","おうせつ","おうたい","おうふく","おうべい","おうよう","おえる","おおい","おおう","おおどおり","おおや","おおよそ","おかえり","おかず","おがむ","おかわり","おぎなう","おきる","おくさま","おくじょう","おくりがな","おくる","おくれる","おこす","おこなう","おこる","おさえる","おさない","おさめる","おしいれ","おしえる","おじぎ","おじさん","おしゃれ","おそらく","おそわる","おたがい","おたく","おだやか","おちつく","おっと","おつり","おでかけ","おとしもの","おとなしい","おどり","おどろかす","おばさん","おまいり","おめでとう","おもいで","おもう","おもたい","おもちゃ","おやつ","おやゆび","およぼす","おらんだ","おろす","おんがく","おんけい","おんしゃ","おんせん","おんだん","おんちゅう","おんどけい","かあつ","かいが","がいき","がいけん","がいこう","かいさつ","かいしゃ","かいすいよく","かいぜん","かいぞうど","かいつう","かいてん","かいとう","かいふく","がいへき","かいほう","かいよう","がいらい","かいわ","かえる","かおり","かかえる","かがく","かがし","かがみ","かくご","かくとく","かざる","がぞう","かたい","かたち","がちょう","がっきゅう","がっこう","がっさん","がっしょう","かなざわし","かのう","がはく","かぶか","かほう","かほご","かまう","かまぼこ","かめれおん","かゆい","かようび","からい","かるい","かろう","かわく","かわら","がんか","かんけい","かんこう","かんしゃ","かんそう","かんたん","かんち","がんばる","きあい","きあつ","きいろ","ぎいん","きうい","きうん","きえる","きおう","きおく","きおち","きおん","きかい","きかく","きかんしゃ","ききて","きくばり","きくらげ","きけんせい","きこう","きこえる","きこく","きさい","きさく","きさま","きさらぎ","ぎじかがく","ぎしき","ぎじたいけん","ぎじにってい","ぎじゅつしゃ","きすう","きせい","きせき","きせつ","きそう","きぞく","きぞん","きたえる","きちょう","きつえん","ぎっちり","きつつき","きつね","きてい","きどう","きどく","きない","きなが","きなこ","きぬごし","きねん","きのう","きのした","きはく","きびしい","きひん","きふく","きぶん","きぼう","きほん","きまる","きみつ","きむずかしい","きめる","きもだめし","きもち","きもの","きゃく","きやく","ぎゅうにく","きよう","きょうりゅう","きらい","きらく","きりん","きれい","きれつ","きろく","ぎろん","きわめる","ぎんいろ","きんかくじ","きんじょ","きんようび","ぐあい","くいず","くうかん","くうき","くうぐん","くうこう","ぐうせい","くうそう","ぐうたら","くうふく","くうぼ","くかん","くきょう","くげん","ぐこう","くさい","くさき","くさばな","くさる","くしゃみ","くしょう","くすのき","くすりゆび","くせげ","くせん","ぐたいてき","くださる","くたびれる","くちこみ","くちさき","くつした","ぐっすり","くつろぐ","くとうてん","くどく","くなん","くねくね","くのう","くふう","くみあわせ","くみたてる","くめる","くやくしょ","くらす","くらべる","くるま","くれる","くろう","くわしい","ぐんかん","ぐんしょく","ぐんたい","ぐんて","けあな","けいかく","けいけん","けいこ","けいさつ","げいじゅつ","けいたい","げいのうじん","けいれき","けいろ","けおとす","けおりもの","げきか","げきげん","げきだん","げきちん","げきとつ","げきは","げきやく","げこう","げこくじょう","げざい","けさき","げざん","けしき","けしごむ","けしょう","げすと","けたば","けちゃっぷ","けちらす","けつあつ","けつい","けつえき","けっこん","けつじょ","けっせき","けってい","けつまつ","げつようび","げつれい","けつろん","げどく","けとばす","けとる","けなげ","けなす","けなみ","けぬき","げねつ","けねん","けはい","げひん","けぶかい","げぼく","けまり","けみかる","けむし","けむり","けもの","けらい","けろけろ","けわしい","けんい","けんえつ","けんお","けんか","げんき","けんげん","けんこう","けんさく","けんしゅう","けんすう","げんそう","けんちく","けんてい","けんとう","けんない","けんにん","げんぶつ","けんま","けんみん","けんめい","けんらん","けんり","こあくま","こいぬ","こいびと","ごうい","こうえん","こうおん","こうかん","ごうきゅう","ごうけい","こうこう","こうさい","こうじ","こうすい","ごうせい","こうそく","こうたい","こうちゃ","こうつう","こうてい","こうどう","こうない","こうはい","ごうほう","ごうまん","こうもく","こうりつ","こえる","こおり","ごかい","ごがつ","ごかん","こくご","こくさい","こくとう","こくない","こくはく","こぐま","こけい","こける","ここのか","こころ","こさめ","こしつ","こすう","こせい","こせき","こぜん","こそだて","こたい","こたえる","こたつ","こちょう","こっか","こつこつ","こつばん","こつぶ","こてい","こてん","ことがら","ことし","ことば","ことり","こなごな","こねこね","このまま","このみ","このよ","ごはん","こひつじ","こふう","こふん","こぼれる","ごまあぶら","こまかい","ごますり","こまつな","こまる","こむぎこ","こもじ","こもち","こもの","こもん","こやく","こやま","こゆう","こゆび","こよい","こよう","こりる","これくしょん","ころっけ","こわもて","こわれる","こんいん","こんかい","こんき","こんしゅう","こんすい","こんだて","こんとん","こんなん","こんびに","こんぽん","こんまけ","こんや","こんれい","こんわく","ざいえき","さいかい","さいきん","ざいげん","ざいこ","さいしょ","さいせい","ざいたく","ざいちゅう","さいてき","ざいりょう","さうな","さかいし","さがす","さかな","さかみち","さがる","さぎょう","さくし","さくひん","さくら","さこく","さこつ","さずかる","ざせき","さたん","さつえい","ざつおん","ざっか","ざつがく","さっきょく","ざっし","さつじん","ざっそう","さつたば","さつまいも","さてい","さといも","さとう","さとおや","さとし","さとる","さのう","さばく","さびしい","さべつ","さほう","さほど","さます","さみしい","さみだれ","さむけ","さめる","さやえんどう","さゆう","さよう","さよく","さらだ","ざるそば","さわやか","さわる","さんいん","さんか","さんきゃく","さんこう","さんさい","ざんしょ","さんすう","さんせい","さんそ","さんち","さんま","さんみ","さんらん","しあい","しあげ","しあさって","しあわせ","しいく","しいん","しうち","しえい","しおけ","しかい","しかく","じかん","しごと","しすう","じだい","したうけ","したぎ","したて","したみ","しちょう","しちりん","しっかり","しつじ","しつもん","してい","してき","してつ","じてん","じどう","しなぎれ","しなもの","しなん","しねま","しねん","しのぐ","しのぶ","しはい","しばかり","しはつ","しはらい","しはん","しひょう","しふく","じぶん","しへい","しほう","しほん","しまう","しまる","しみん","しむける","じむしょ","しめい","しめる","しもん","しゃいん","しゃうん","しゃおん","じゃがいも","しやくしょ","しゃくほう","しゃけん","しゃこ","しゃざい","しゃしん","しゃせん","しゃそう","しゃたい","しゃちょう","しゃっきん","じゃま","しゃりん","しゃれい","じゆう","じゅうしょ","しゅくはく","じゅしん","しゅっせき","しゅみ","しゅらば","じゅんばん","しょうかい","しょくたく","しょっけん","しょどう","しょもつ","しらせる","しらべる","しんか","しんこう","じんじゃ","しんせいじ","しんちく","しんりん","すあげ","すあし","すあな","ずあん","すいえい","すいか","すいとう","ずいぶん","すいようび","すうがく","すうじつ","すうせん","すおどり","すきま","すくう","すくない","すける","すごい","すこし","ずさん","すずしい","すすむ","すすめる","すっかり","ずっしり","ずっと","すてき","すてる","すねる","すのこ","すはだ","すばらしい","ずひょう","ずぶぬれ","すぶり","すふれ","すべて","すべる","ずほう","すぼん","すまい","すめし","すもう","すやき","すらすら","するめ","すれちがう","すろっと","すわる","すんぜん","すんぽう","せあぶら","せいかつ","せいげん","せいじ","せいよう","せおう","せかいかん","せきにん","せきむ","せきゆ","せきらんうん","せけん","せこう","せすじ","せたい","せたけ","せっかく","せっきゃく","ぜっく","せっけん","せっこつ","せっさたくま","せつぞく","せつだん","せつでん","せっぱん","せつび","せつぶん","せつめい","せつりつ","せなか","せのび","せはば","せびろ","せぼね","せまい","せまる","せめる","せもたれ","せりふ","ぜんあく","せんい","せんえい","せんか","せんきょ","せんく","せんげん","ぜんご","せんさい","せんしゅ","せんすい","せんせい","せんぞ","せんたく","せんちょう","せんてい","せんとう","せんぬき","せんねん","せんぱい","ぜんぶ","ぜんぽう","せんむ","せんめんじょ","せんもん","せんやく","せんゆう","せんよう","ぜんら","ぜんりゃく","せんれい","せんろ","そあく","そいとげる","そいね","そうがんきょう","そうき","そうご","そうしん","そうだん","そうなん","そうび","そうめん","そうり","そえもの","そえん","そがい","そげき","そこう","そこそこ","そざい","そしな","そせい","そせん","そそぐ","そだてる","そつう","そつえん","そっかん","そつぎょう","そっけつ","そっこう","そっせん","そっと","そとがわ","そとづら","そなえる","そなた","そふぼ","そぼく","そぼろ","そまつ","そまる","そむく","そむりえ","そめる","そもそも","そよかぜ","そらまめ","そろう","そんかい","そんけい","そんざい","そんしつ","そんぞく","そんちょう","ぞんび","ぞんぶん","そんみん","たあい","たいいん","たいうん","たいえき","たいおう","だいがく","たいき","たいぐう","たいけん","たいこ","たいざい","だいじょうぶ","だいすき","たいせつ","たいそう","だいたい","たいちょう","たいてい","だいどころ","たいない","たいねつ","たいのう","たいはん","だいひょう","たいふう","たいへん","たいほ","たいまつばな","たいみんぐ","たいむ","たいめん","たいやき","たいよう","たいら","たいりょく","たいる","たいわん","たうえ","たえる","たおす","たおる","たおれる","たかい","たかね","たきび","たくさん","たこく","たこやき","たさい","たしざん","だじゃれ","たすける","たずさわる","たそがれ","たたかう","たたく","ただしい","たたみ","たちばな","だっかい","だっきゃく","だっこ","だっしゅつ","だったい","たてる","たとえる","たなばた","たにん","たぬき","たのしみ","たはつ","たぶん","たべる","たぼう","たまご","たまる","だむる","ためいき","ためす","ためる","たもつ","たやすい","たよる","たらす","たりきほんがん","たりょう","たりる","たると","たれる","たれんと","たろっと","たわむれる","だんあつ","たんい","たんおん","たんか","たんき","たんけん","たんご","たんさん","たんじょうび","だんせい","たんそく","たんたい","だんち","たんてい","たんとう","だんな","たんにん","だんねつ","たんのう","たんぴん","だんぼう","たんまつ","たんめい","だんれつ","だんろ","だんわ","ちあい","ちあん","ちいき","ちいさい","ちえん","ちかい","ちから","ちきゅう","ちきん","ちけいず","ちけん","ちこく","ちさい","ちしき","ちしりょう","ちせい","ちそう","ちたい","ちたん","ちちおや","ちつじょ","ちてき","ちてん","ちぬき","ちぬり","ちのう","ちひょう","ちへいせん","ちほう","ちまた","ちみつ","ちみどろ","ちめいど","ちゃんこなべ","ちゅうい","ちゆりょく","ちょうし","ちょさくけん","ちらし","ちらみ","ちりがみ","ちりょう","ちるど","ちわわ","ちんたい","ちんもく","ついか","ついたち","つうか","つうじょう","つうはん","つうわ","つかう","つかれる","つくね","つくる","つけね","つける","つごう","つたえる","つづく","つつじ","つつむ","つとめる","つながる","つなみ","つねづね","つのる","つぶす","つまらない","つまる","つみき","つめたい","つもり","つもる","つよい","つるぼ","つるみく","つわもの","つわり","てあし","てあて","てあみ","ていおん","ていか","ていき","ていけい","ていこく","ていさつ","ていし","ていせい","ていたい","ていど","ていねい","ていひょう","ていへん","ていぼう","てうち","ておくれ","てきとう","てくび","でこぼこ","てさぎょう","てさげ","てすり","てそう","てちがい","てちょう","てつがく","てつづき","でっぱ","てつぼう","てつや","でぬかえ","てぬき","てぬぐい","てのひら","てはい","てぶくろ","てふだ","てほどき","てほん","てまえ","てまきずし","てみじか","てみやげ","てらす","てれび","てわけ","てわたし","でんあつ","てんいん","てんかい","てんき","てんぐ","てんけん","てんごく","てんさい","てんし","てんすう","でんち","てんてき","てんとう","てんない","てんぷら","てんぼうだい","てんめつ","てんらんかい","でんりょく","でんわ","どあい","といれ","どうかん","とうきゅう","どうぐ","とうし","とうむぎ","とおい","とおか","とおく","とおす","とおる","とかい","とかす","ときおり","ときどき","とくい","とくしゅう","とくてん","とくに","とくべつ","とけい","とける","とこや","とさか","としょかん","とそう","とたん","とちゅう","とっきゅう","とっくん","とつぜん","とつにゅう","とどける","ととのえる","とない","となえる","となり","とのさま","とばす","どぶがわ","とほう","とまる","とめる","ともだち","ともる","どようび","とらえる","とんかつ","どんぶり","ないかく","ないこう","ないしょ","ないす","ないせん","ないそう","なおす","ながい","なくす","なげる","なこうど","なさけ","なたでここ","なっとう","なつやすみ","ななおし","なにごと","なにもの","なにわ","なのか","なふだ","なまいき","なまえ","なまみ","なみだ","なめらか","なめる","なやむ","ならう","ならび","ならぶ","なれる","なわとび","なわばり","にあう","にいがた","にうけ","におい","にかい","にがて","にきび","にくしみ","にくまん","にげる","にさんかたんそ","にしき","にせもの","にちじょう","にちようび","にっか","にっき","にっけい","にっこう","にっさん","にっしょく","にっすう","にっせき","にってい","になう","にほん","にまめ","にもつ","にやり","にゅういん","にりんしゃ","にわとり","にんい","にんか","にんき","にんげん","にんしき","にんずう","にんそう","にんたい","にんち","にんてい","にんにく","にんぷ","にんまり","にんむ","にんめい","にんよう","ぬいくぎ","ぬかす","ぬぐいとる","ぬぐう","ぬくもり","ぬすむ","ぬまえび","ぬめり","ぬらす","ぬんちゃく","ねあげ","ねいき","ねいる","ねいろ","ねぐせ","ねくたい","ねくら","ねこぜ","ねこむ","ねさげ","ねすごす","ねそべる","ねだん","ねつい","ねっしん","ねつぞう","ねったいぎょ","ねぶそく","ねふだ","ねぼう","ねほりはほり","ねまき","ねまわし","ねみみ","ねむい","ねむたい","ねもと","ねらう","ねわざ","ねんいり","ねんおし","ねんかん","ねんきん","ねんぐ","ねんざ","ねんし","ねんちゃく","ねんど","ねんぴ","ねんぶつ","ねんまつ","ねんりょう","ねんれい","のいず","のおづま","のがす","のきなみ","のこぎり","のこす","のこる","のせる","のぞく","のぞむ","のたまう","のちほど","のっく","のばす","のはら","のべる","のぼる","のみもの","のやま","のらいぬ","のらねこ","のりもの","のりゆき","のれん","のんき","ばあい","はあく","ばあさん","ばいか","ばいく","はいけん","はいご","はいしん","はいすい","はいせん","はいそう","はいち","ばいばい","はいれつ","はえる","はおる","はかい","ばかり","はかる","はくしゅ","はけん","はこぶ","はさみ","はさん","はしご","ばしょ","はしる","はせる","ぱそこん","はそん","はたん","はちみつ","はつおん","はっかく","はづき","はっきり","はっくつ","はっけん","はっこう","はっさん","はっしん","はったつ","はっちゅう","はってん","はっぴょう","はっぽう","はなす","はなび","はにかむ","はぶらし","はみがき","はむかう","はめつ","はやい","はやし","はらう","はろうぃん","はわい","はんい","はんえい","はんおん","はんかく","はんきょう","ばんぐみ","はんこ","はんしゃ","はんすう","はんだん","ぱんち","ぱんつ","はんてい","はんとし","はんのう","はんぱ","はんぶん","はんぺん","はんぼうき","はんめい","はんらん","はんろん","ひいき","ひうん","ひえる","ひかく","ひかり","ひかる","ひかん","ひくい","ひけつ","ひこうき","ひこく","ひさい","ひさしぶり","ひさん","びじゅつかん","ひしょ","ひそか","ひそむ","ひたむき","ひだり","ひたる","ひつぎ","ひっこし","ひっし","ひつじゅひん","ひっす","ひつぜん","ぴったり","ぴっちり","ひつよう","ひてい","ひとごみ","ひなまつり","ひなん","ひねる","ひはん","ひびく","ひひょう","ひほう","ひまわり","ひまん","ひみつ","ひめい","ひめじし","ひやけ","ひやす","ひよう","びょうき","ひらがな","ひらく","ひりつ","ひりょう","ひるま","ひるやすみ","ひれい","ひろい","ひろう","ひろき","ひろゆき","ひんかく","ひんけつ","ひんこん","ひんしゅ","ひんそう","ぴんち","ひんぱん","びんぼう","ふあん","ふいうち","ふうけい","ふうせん","ぷうたろう","ふうとう","ふうふ","ふえる","ふおん","ふかい","ふきん","ふくざつ","ふくぶくろ","ふこう","ふさい","ふしぎ","ふじみ","ふすま","ふせい","ふせぐ","ふそく","ぶたにく","ふたん","ふちょう","ふつう","ふつか","ふっかつ","ふっき","ふっこく","ぶどう","ふとる","ふとん","ふのう","ふはい","ふひょう","ふへん","ふまん","ふみん","ふめつ","ふめん","ふよう","ふりこ","ふりる","ふるい","ふんいき","ぶんがく","ぶんぐ","ふんしつ","ぶんせき","ふんそう","ぶんぽう","へいあん","へいおん","へいがい","へいき","へいげん","へいこう","へいさ","へいしゃ","へいせつ","へいそ","へいたく","へいてん","へいねつ","へいわ","へきが","へこむ","べにいろ","べにしょうが","へらす","へんかん","べんきょう","べんごし","へんさい","へんたい","べんり","ほあん","ほいく","ぼうぎょ","ほうこく","ほうそう","ほうほう","ほうもん","ほうりつ","ほえる","ほおん","ほかん","ほきょう","ぼきん","ほくろ","ほけつ","ほけん","ほこう","ほこる","ほしい","ほしつ","ほしゅ","ほしょう","ほせい","ほそい","ほそく","ほたて","ほたる","ぽちぶくろ","ほっきょく","ほっさ","ほったん","ほとんど","ほめる","ほんい","ほんき","ほんけ","ほんしつ","ほんやく","まいにち","まかい","まかせる","まがる","まける","まこと","まさつ","まじめ","ますく","まぜる","まつり","まとめ","まなぶ","まぬけ","まねく","まほう","まもる","まゆげ","まよう","まろやか","まわす","まわり","まわる","まんが","まんきつ","まんぞく","まんなか","みいら","みうち","みえる","みがく","みかた","みかん","みけん","みこん","みじかい","みすい","みすえる","みせる","みっか","みつかる","みつける","みてい","みとめる","みなと","みなみかさい","みねらる","みのう","みのがす","みほん","みもと","みやげ","みらい","みりょく","みわく","みんか","みんぞく","むいか","むえき","むえん","むかい","むかう","むかえ","むかし","むぎちゃ","むける","むげん","むさぼる","むしあつい","むしば","むじゅん","むしろ","むすう","むすこ","むすぶ","むすめ","むせる","むせん","むちゅう","むなしい","むのう","むやみ","むよう","むらさき","むりょう","むろん","めいあん","めいうん","めいえん","めいかく","めいきょく","めいさい","めいし","めいそう","めいぶつ","めいれい","めいわく","めぐまれる","めざす","めした","めずらしい","めだつ","めまい","めやす","めんきょ","めんせき","めんどう","もうしあげる","もうどうけん","もえる","もくし","もくてき","もくようび","もちろん","もどる","もらう","もんく","もんだい","やおや","やける","やさい","やさしい","やすい","やすたろう","やすみ","やせる","やそう","やたい","やちん","やっと","やっぱり","やぶる","やめる","ややこしい","やよい","やわらかい","ゆうき","ゆうびんきょく","ゆうべ","ゆうめい","ゆけつ","ゆしゅつ","ゆせん","ゆそう","ゆたか","ゆちゃく","ゆでる","ゆにゅう","ゆびわ","ゆらい","ゆれる","ようい","ようか","ようきゅう","ようじ","ようす","ようちえん","よかぜ","よかん","よきん","よくせい","よくぼう","よけい","よごれる","よさん","よしゅう","よそう","よそく","よっか","よてい","よどがわく","よねつ","よやく","よゆう","よろこぶ","よろしい","らいう","らくがき","らくご","らくさつ","らくだ","らしんばん","らせん","らぞく","らたい","らっか","られつ","りえき","りかい","りきさく","りきせつ","りくぐん","りくつ","りけん","りこう","りせい","りそう","りそく","りてん","りねん","りゆう","りゅうがく","りよう","りょうり","りょかん","りょくちゃ","りょこう","りりく","りれき","りろん","りんご","るいけい","るいさい","るいじ","るいせき","るすばん","るりがわら","れいかん","れいぎ","れいせい","れいぞうこ","れいとう","れいぼう","れきし","れきだい","れんあい","れんけい","れんこん","れんさい","れんしゅう","れんぞく","れんらく","ろうか","ろうご","ろうじん","ろうそく","ろくが","ろこつ","ろじうら","ろしゅつ","ろせん","ろてん","ろめん","ろれつ","ろんぎ","ろんぱ","ろんぶん","ろんり","わかす","わかめ","わかやま","わかれる","わしつ","わじまし","わすれもの","わらう","われる"]'
      );
    },
    function (e) {
      e.exports = JSON.parse(
        '["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"]'
      );
    },
    function (e, t, r) {
      'use strict';
      global.fetch || (global.fetch = r(62).default);
      const n = r(120),
        i = r(69),
        o = r(36),
        a = r(158),
        s = r(4),
        u = r(165);
      let c = function (e, t) {
        if (
          ((this.url = e),
          (this.chainId = t),
          (this.path = "m/44'/118'/0'/0/0"),
          (this.bech32MainPrefix = 'cosmos'),
          !this.url)
        )
          throw new Error('url object was not set or invalid');
        if (!this.chainId)
          throw new Error('chainId object was not set or invalid');
      };
      function f(e) {
        const t = a.publicKeyCreate(e);
        return Buffer.from(t, 'binary').toString('base64');
      }
      function l(e) {
        if (null === e) return null;
        if ('object' != typeof e) return e;
        if (Array.isArray(e)) return e.map(l);
        const t = Object.keys(e).sort(),
          r = {};
        return (
          t.forEach((t) => {
            r[t] = l(e[t]);
          }),
          r
        );
      }
      (c.prototype.setBech32MainPrefix = function (e) {
        if (((this.bech32MainPrefix = e), !this.bech32MainPrefix))
          throw new Error('bech32MainPrefix object was not set or invalid');
      }),
        (c.prototype.setPath = function (e) {
          if (((this.path = e), !this.path))
            throw new Error('path object was not set or invalid');
        }),
        (c.prototype.getAccounts = function (e) {
          let t = '';
          return (
            (t =
              -1 != this.chainId.indexOf('irishub')
                ? '/bank/accounts/'
                : '/auth/accounts/'),
            fetch(this.url + t + e).then((e) => e.json())
          );
        }),
        (c.prototype.getAddress = function (e, t = !0) {
          if ('string' != typeof e)
            throw new Error('mnemonic expects a string');
          if (t && !n.validateMnemonic(e))
            throw new Error('mnemonic phrases have invalid checksums');
          const r = n.mnemonicToSeed(e),
            a = i.fromSeed(r).derivePath(this.path),
            s = o.toWords(a.identifier);
          return o.encode(this.bech32MainPrefix, s);
        }),
        (c.prototype.getECPairPriv = function (e) {
          if ('string' != typeof e)
            throw new Error('mnemonic expects a string');
          const t = n.mnemonicToSeed(e),
            r = i.fromSeed(t).derivePath(this.path);
          return u.ECPair.fromPrivateKey(r.privateKey, { compressed: !1 })
            .privateKey;
        }),
        (c.prototype.newStdMsg = function (e) {
          const t = new Object();
          return (
            (t.json = e),
            'irishub/bank/Send' == e.msgs[0].type
              ? (t.jsonForSigningIrisTx = {
                  msgs: [
                    {
                      inputs: [
                        {
                          address: e.msgs[0].value.inputs[0].address,
                          coins: [
                            {
                              denom: e.msgs[0].value.inputs[0].coins[0].denom,
                              amount: e.msgs[0].value.inputs[0].coins[0].amount,
                            },
                          ],
                        },
                      ],
                      outputs: [
                        {
                          address: e.msgs[0].value.outputs[0].address,
                          coins: [
                            {
                              denom: e.msgs[0].value.outputs[0].coins[0].denom,
                              amount:
                                e.msgs[0].value.outputs[0].coins[0].amount,
                            },
                          ],
                        },
                      ],
                    },
                  ],
                  chain_id: e.chain_id,
                  fee: {
                    amount: [
                      {
                        amount: e.fee.amount[0].amount,
                        denom: e.fee.amount[0].denom,
                      },
                    ],
                    gas: e.fee.gas,
                  },
                  memo: e.memo,
                  account_number: e.account_number,
                  sequence: e.sequence,
                })
              : 'irishub/stake/BeginUnbonding' == e.msgs[0].type
              ? (t.jsonForSigningIrisTx = {
                  msgs: [
                    {
                      shares_amount: String(e.msgs[0].value.shares_amount),
                      delegator_addr: e.msgs[0].value.delegator_addr,
                      validator_addr: e.msgs[0].value.validator_addr,
                    },
                  ],
                  chain_id: e.chain_id,
                  fee: {
                    amount: [
                      {
                        amount: e.fee.amount[0].amount,
                        denom: e.fee.amount[0].denom,
                      },
                    ],
                    gas: e.fee.gas,
                  },
                  memo: e.memo,
                  account_number: e.account_number,
                  sequence: e.sequence,
                })
              : 'irishub/stake/BeginRedelegate' == e.msgs[0].type &&
                (t.jsonForSigningIrisTx = {
                  msgs: [
                    {
                      delegator_addr: e.msgs[0].value.delegator_addr,
                      validator_src_addr: e.msgs[0].value.validator_src_addr,
                      validator_dst_addr: e.msgs[0].value.validator_dst_addr,
                      shares:
                        String(e.msgs[0].value.shares_amount) + '.0000000000',
                    },
                  ],
                  chain_id: e.chain_id,
                  fee: {
                    amount: [
                      {
                        amount: e.fee.amount[0].amount,
                        denom: e.fee.amount[0].denom,
                      },
                    ],
                    gas: e.fee.gas,
                  },
                  memo: e.memo,
                  account_number: e.account_number,
                  sequence: e.sequence,
                }),
            (t.bytes = (function (e) {
              if ('string' != typeof e) throw new Error('str expects a string');
              for (
                var t = [], r = Buffer.from(e, 'utf8'), n = 0;
                n < r.length;
                n++
              )
                t.push(r[n]);
              return t;
            })(JSON.stringify(l(t.json)))),
            t
          );
        }),
        (c.prototype.sign = function (e, t, r = 'sync') {
          let n = new Object();
          n =
            'irishub/bank/Send' == e.json.msgs[0].type ||
            'irishub/stake/BeginUnbonding' == e.json.msgs[0].type ||
            'irishub/stake/BeginRedelegate' == e.json.msgs[0].type
              ? e.jsonForSigningIrisTx
              : e.json;
          const i = s
              .createHash('sha256')
              .update(JSON.stringify(l(n)))
              .digest('hex'),
            o = Buffer.from(i, 'hex');
          let u = a.sign(o, t);
          var c = Buffer.from(u.signature, 'binary').toString('base64');
          let d = new Object();
          if (-1 != this.chainId.indexOf('irishub')) {
            if (
              ((d = {
                tx: {
                  msg: e.json.msgs,
                  fee: e.json.fee,
                  signatures: [
                    {
                      signature: c,
                      account_number: e.json.account_number,
                      sequence: e.json.sequence,
                      pub_key: {
                        type: 'tendermint/PubKeySecp256k1',
                        value: f(t),
                      },
                    },
                  ],
                  memo: e.json.memo,
                },
                mode: r,
              }),
              'irishub/stake/BeginRedelegate' == e.json.msgs[0].type)
            ) {
              var p = JSON.stringify(d);
              (p = p.replace('"shares', '"shares_amount')), (d = JSON.parse(p));
            }
          } else
            d = {
              tx: {
                msg: e.json.msgs,
                fee: e.json.fee,
                signatures: [
                  {
                    account_number: e.json.account_number,
                    sequence: e.json.sequence,
                    signature: c,
                    pub_key: {
                      type: 'tendermint/PubKeySecp256k1',
                      value: f(t),
                    },
                  },
                ],
                memo: e.json.memo,
              },
              mode: r,
            };
          return d;
        }),
        (c.prototype.broadcast = function (e) {
          let t = '';
          return (
            (t =
              -1 != this.chainId.indexOf('irishub') ? '/tx/broadcast' : '/txs'),
            fetch(this.url + t, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify(e),
            }).then((e) => e.json())
          );
        }),
        (e.exports = {
          network: function (e, t) {
            return new c(e, t);
          },
        });
    },
    function (e, t, r) {
      var n = r(2).Buffer,
        i = r(26),
        o = r(65),
        a = o.pbkdf2Sync,
        s = o.pbkdf2,
        u = r(47),
        c = r(121),
        f = r(122),
        l = r(123),
        d = r(124),
        p = r(125),
        h = r(126),
        m = r(127),
        b = r(128),
        g = r(129),
        v = d;
      function y(e, t, r) {
        for (; e.length < r; ) e = t + e;
        return e;
      }
      function w(e) {
        return parseInt(e, 2);
      }
      function _(e) {
        return e
          .map(function (e) {
            return y(e.toString(2), '0', 8);
          })
          .join('');
      }
      function E(e) {
        var t = (8 * e.length) / 32,
          r = i('sha256').update(e).digest();
        return _([].slice.call(r)).slice(0, t);
      }
      function S(e) {
        return 'mnemonic' + (e || '');
      }
      function x(e, t) {
        var r = n.from(c.nfkd(e), 'utf8'),
          i = n.from(S(c.nfkd(t)), 'utf8');
        return a(r, i, 2048, 64, 'sha512');
      }
      function I(e, t) {
        return new Promise(function (r, i) {
          try {
            var o = n.from(c.nfkd(e), 'utf8'),
              a = n.from(S(c.nfkd(t)), 'utf8');
          } catch (e) {
            return i(e);
          }
          s(o, a, 2048, 64, 'sha512', function (e, t) {
            return e ? i(e) : r(t);
          });
        });
      }
      function A(e, t) {
        t = t || v;
        var r = c.nfkd(e).split(' ');
        if (r.length % 3 != 0) throw new Error('Invalid mnemonic');
        var i = r
            .map(function (e) {
              var r = t.indexOf(e);
              if (-1 === r) throw new Error('Invalid mnemonic');
              return y(r.toString(2), '0', 11);
            })
            .join(''),
          o = 32 * Math.floor(i.length / 33),
          a = i.slice(0, o),
          s = i.slice(o),
          u = a.match(/(.{1,8})/g).map(w);
        if (u.length < 16) throw new Error('Invalid entropy');
        if (u.length > 32) throw new Error('Invalid entropy');
        if (u.length % 4 != 0) throw new Error('Invalid entropy');
        var f = n.from(u);
        if (E(f) !== s) throw new Error('Invalid mnemonic checksum');
        return f.toString('hex');
      }
      function k(e, t) {
        if (
          (n.isBuffer(e) || (e = n.from(e, 'hex')), (t = t || v), e.length < 16)
        )
          throw new TypeError('Invalid entropy');
        if (e.length > 32) throw new TypeError('Invalid entropy');
        if (e.length % 4 != 0) throw new TypeError('Invalid entropy');
        var r = (_([].slice.call(e)) + E(e))
          .match(/(.{1,11})/g)
          .map(function (e) {
            var r = w(e);
            return t[r];
          });
        return t === m ? r.join('　') : r.join(' ');
      }
      e.exports = {
        mnemonicToSeed: x,
        mnemonicToSeedAsync: I,
        mnemonicToSeedHex: function (e, t) {
          return x(e, t).toString('hex');
        },
        mnemonicToSeedHexAsync: function (e, t) {
          return I(e, t).then(function (e) {
            return e.toString('hex');
          });
        },
        mnemonicToEntropy: A,
        entropyToMnemonic: k,
        generateMnemonic: function (e, t, r) {
          if ((e = e || 128) % 32 != 0) throw new TypeError('Invalid entropy');
          return k((t = t || u)(e / 8), r);
        },
        validateMnemonic: function (e, t) {
          try {
            A(e, t);
          } catch (e) {
            return !1;
          }
          return !0;
        },
        wordlists: {
          EN: d,
          JA: m,
          chinese_simplified: f,
          chinese_traditional: l,
          english: d,
          french: p,
          italian: h,
          japanese: m,
          korean: b,
          spanish: g,
        },
      };
    },
    function (e, t, r) {
      !(function (t) {
        'use strict';
        for (
          var r = [null, 0, {}],
            n = function (e, t) {
              (this.codepoint = e), (this.feature = t);
            },
            i = {},
            o = [],
            a = 0;
          a <= 255;
          ++a
        )
          o[a] = 0;
        var s = [
          function (e, t, i) {
            return t < 60 || (13311 < t && t < 42607) ? new n(t, r) : e(t, i);
          },
          function (e, t, r) {
            var n = i[t];
            return (
              n ||
                ((n = e(t, r)).feature &&
                  ++o[(t >> 8) & 255] > 10 &&
                  (i[t] = n)),
              n
            );
          },
          function (e, t, r) {
            return r ? e(t, r) : new n(t, null);
          },
          function (e, t, r) {
            var i;
            if (t < 4352 || (4371 <= t && t < 44032) || 55204 < t)
              return e(t, r);
            if (4352 <= t && t < 4371) {
              var o = {},
                a = 21 * (t - 4352);
              for (i = 0; i < 21; ++i) o[4449 + i] = 44032 + 28 * (i + a);
              return new n(t, [, , o]);
            }
            var s = t - 44032,
              u = s % 28,
              c = [];
            if (0 !== u) c[0] = [44032 + s - u, 4519 + u];
            else
              for (
                c[0] = [
                  4352 + Math.floor(s / 588),
                  4449 + Math.floor((s % 588) / 28),
                ],
                  c[2] = {},
                  i = 1;
                i < 28;
                ++i
              )
                c[2][4519 + i] = t + i;
            return new n(t, c);
          },
          function (e, t, i) {
            var o = (n.udata[65280 & t] || {})[t];
            return new n(t, o || r);
          },
        ];
        (n.fromCharCode = s.reduceRight(function (e, t) {
          return function (r, n) {
            return t(e, r, n);
          };
        }, null)),
          (n.isHighSurrogate = function (e) {
            return e >= 55296 && e <= 56319;
          }),
          (n.isLowSurrogate = function (e) {
            return e >= 56320 && e <= 57343;
          }),
          (n.prototype.prepFeature = function () {
            this.feature ||
              (this.feature = n.fromCharCode(this.codepoint, !0).feature);
          }),
          (n.prototype.toString = function () {
            if (this.codepoint < 65536)
              return String.fromCharCode(this.codepoint);
            var e = this.codepoint - 65536;
            return String.fromCharCode(
              Math.floor(e / 1024) + 55296,
              (e % 1024) + 56320
            );
          }),
          (n.prototype.getDecomp = function () {
            return this.prepFeature(), this.feature[0] || null;
          }),
          (n.prototype.isCompatibility = function () {
            return (
              this.prepFeature(), !!this.feature[1] && 256 & this.feature[1]
            );
          }),
          (n.prototype.isExclude = function () {
            return (
              this.prepFeature(), !!this.feature[1] && 512 & this.feature[1]
            );
          }),
          (n.prototype.getCanonicalClass = function () {
            return (
              this.prepFeature(), this.feature[1] ? 255 & this.feature[1] : 0
            );
          }),
          (n.prototype.getComposite = function (e) {
            if ((this.prepFeature(), !this.feature[2])) return null;
            var t = this.feature[2][e.codepoint];
            return t ? n.fromCharCode(t) : null;
          });
        var u = function (e) {
          (this.str = e), (this.cursor = 0);
        };
        u.prototype.next = function () {
          if (this.str && this.cursor < this.str.length) {
            var e,
              t = this.str.charCodeAt(this.cursor++);
            return (
              n.isHighSurrogate(t) &&
                this.cursor < this.str.length &&
                n.isLowSurrogate((e = this.str.charCodeAt(this.cursor))) &&
                ((t = 1024 * (t - 55296) + (e - 56320) + 65536), ++this.cursor),
              n.fromCharCode(t)
            );
          }
          return (this.str = null), null;
        };
        var c = function (e, t) {
          (this.it = e), (this.canonical = t), (this.resBuf = []);
        };
        c.prototype.next = function () {
          if (0 === this.resBuf.length) {
            var e = this.it.next();
            if (!e) return null;
            this.resBuf = (function e(t, r) {
              var i = r.getDecomp();
              if (!i || (t && r.isCompatibility())) return [r];
              for (var o = [], a = 0; a < i.length; ++a) {
                var s = e(t, n.fromCharCode(i[a]));
                o = o.concat(s);
              }
              return o;
            })(this.canonical, e);
          }
          return this.resBuf.shift();
        };
        var f = function (e) {
          (this.it = e), (this.resBuf = []);
        };
        f.prototype.next = function () {
          var e;
          if (0 === this.resBuf.length)
            do {
              var t = this.it.next();
              if (!t) break;
              e = t.getCanonicalClass();
              var r = this.resBuf.length;
              if (0 !== e)
                for (; r > 0; --r) {
                  if (this.resBuf[r - 1].getCanonicalClass() <= e) break;
                }
              this.resBuf.splice(r, 0, t);
            } while (0 !== e);
          return this.resBuf.shift();
        };
        var l = function (e) {
          (this.it = e),
            (this.procBuf = []),
            (this.resBuf = []),
            (this.lastClass = null);
        };
        l.prototype.next = function () {
          for (; 0 === this.resBuf.length; ) {
            var e = this.it.next();
            if (!e) {
              (this.resBuf = this.procBuf), (this.procBuf = []);
              break;
            }
            if (0 === this.procBuf.length)
              (this.lastClass = e.getCanonicalClass()), this.procBuf.push(e);
            else {
              var t = this.procBuf[0].getComposite(e),
                r = e.getCanonicalClass();
              t && (this.lastClass < r || 0 === this.lastClass)
                ? (this.procBuf[0] = t)
                : (0 === r &&
                    ((this.resBuf = this.procBuf), (this.procBuf = [])),
                  (this.lastClass = r),
                  this.procBuf.push(e));
            }
          }
          return this.resBuf.shift();
        };
        var d = function (e, t) {
          for (
            var r,
              n = (function (e, t) {
                switch (e) {
                  case 'NFD':
                    return new f(new c(new u(t), !0));
                  case 'NFKD':
                    return new f(new c(new u(t), !1));
                  case 'NFC':
                    return new l(new f(new c(new u(t), !0)));
                  case 'NFKC':
                    return new l(new f(new c(new u(t), !1)));
                }
                throw e + ' is invalid';
              })(e, t),
              i = '';
            (r = n.next());

          )
            i += r.toString();
          return i;
        };
        n.udata = {
          0: {
            60: [, , { 824: 8814 }],
            61: [, , { 824: 8800 }],
            62: [, , { 824: 8815 }],
            65: [
              ,
              ,
              {
                768: 192,
                769: 193,
                770: 194,
                771: 195,
                772: 256,
                774: 258,
                775: 550,
                776: 196,
                777: 7842,
                778: 197,
                780: 461,
                783: 512,
                785: 514,
                803: 7840,
                805: 7680,
                808: 260,
              },
            ],
            66: [, , { 775: 7682, 803: 7684, 817: 7686 }],
            67: [, , { 769: 262, 770: 264, 775: 266, 780: 268, 807: 199 }],
            68: [
              ,
              ,
              {
                775: 7690,
                780: 270,
                803: 7692,
                807: 7696,
                813: 7698,
                817: 7694,
              },
            ],
            69: [
              ,
              ,
              {
                768: 200,
                769: 201,
                770: 202,
                771: 7868,
                772: 274,
                774: 276,
                775: 278,
                776: 203,
                777: 7866,
                780: 282,
                783: 516,
                785: 518,
                803: 7864,
                807: 552,
                808: 280,
                813: 7704,
                816: 7706,
              },
            ],
            70: [, , { 775: 7710 }],
            71: [
              ,
              ,
              {
                769: 500,
                770: 284,
                772: 7712,
                774: 286,
                775: 288,
                780: 486,
                807: 290,
              },
            ],
            72: [
              ,
              ,
              {
                770: 292,
                775: 7714,
                776: 7718,
                780: 542,
                803: 7716,
                807: 7720,
                814: 7722,
              },
            ],
            73: [
              ,
              ,
              {
                768: 204,
                769: 205,
                770: 206,
                771: 296,
                772: 298,
                774: 300,
                775: 304,
                776: 207,
                777: 7880,
                780: 463,
                783: 520,
                785: 522,
                803: 7882,
                808: 302,
                816: 7724,
              },
            ],
            74: [, , { 770: 308 }],
            75: [, , { 769: 7728, 780: 488, 803: 7730, 807: 310, 817: 7732 }],
            76: [
              ,
              ,
              { 769: 313, 780: 317, 803: 7734, 807: 315, 813: 7740, 817: 7738 },
            ],
            77: [, , { 769: 7742, 775: 7744, 803: 7746 }],
            78: [
              ,
              ,
              {
                768: 504,
                769: 323,
                771: 209,
                775: 7748,
                780: 327,
                803: 7750,
                807: 325,
                813: 7754,
                817: 7752,
              },
            ],
            79: [
              ,
              ,
              {
                768: 210,
                769: 211,
                770: 212,
                771: 213,
                772: 332,
                774: 334,
                775: 558,
                776: 214,
                777: 7886,
                779: 336,
                780: 465,
                783: 524,
                785: 526,
                795: 416,
                803: 7884,
                808: 490,
              },
            ],
            80: [, , { 769: 7764, 775: 7766 }],
            82: [
              ,
              ,
              {
                769: 340,
                775: 7768,
                780: 344,
                783: 528,
                785: 530,
                803: 7770,
                807: 342,
                817: 7774,
              },
            ],
            83: [
              ,
              ,
              {
                769: 346,
                770: 348,
                775: 7776,
                780: 352,
                803: 7778,
                806: 536,
                807: 350,
              },
            ],
            84: [
              ,
              ,
              {
                775: 7786,
                780: 356,
                803: 7788,
                806: 538,
                807: 354,
                813: 7792,
                817: 7790,
              },
            ],
            85: [
              ,
              ,
              {
                768: 217,
                769: 218,
                770: 219,
                771: 360,
                772: 362,
                774: 364,
                776: 220,
                777: 7910,
                778: 366,
                779: 368,
                780: 467,
                783: 532,
                785: 534,
                795: 431,
                803: 7908,
                804: 7794,
                808: 370,
                813: 7798,
                816: 7796,
              },
            ],
            86: [, , { 771: 7804, 803: 7806 }],
            87: [
              ,
              ,
              {
                768: 7808,
                769: 7810,
                770: 372,
                775: 7814,
                776: 7812,
                803: 7816,
              },
            ],
            88: [, , { 775: 7818, 776: 7820 }],
            89: [
              ,
              ,
              {
                768: 7922,
                769: 221,
                770: 374,
                771: 7928,
                772: 562,
                775: 7822,
                776: 376,
                777: 7926,
                803: 7924,
              },
            ],
            90: [
              ,
              ,
              { 769: 377, 770: 7824, 775: 379, 780: 381, 803: 7826, 817: 7828 },
            ],
            97: [
              ,
              ,
              {
                768: 224,
                769: 225,
                770: 226,
                771: 227,
                772: 257,
                774: 259,
                775: 551,
                776: 228,
                777: 7843,
                778: 229,
                780: 462,
                783: 513,
                785: 515,
                803: 7841,
                805: 7681,
                808: 261,
              },
            ],
            98: [, , { 775: 7683, 803: 7685, 817: 7687 }],
            99: [, , { 769: 263, 770: 265, 775: 267, 780: 269, 807: 231 }],
            100: [
              ,
              ,
              {
                775: 7691,
                780: 271,
                803: 7693,
                807: 7697,
                813: 7699,
                817: 7695,
              },
            ],
            101: [
              ,
              ,
              {
                768: 232,
                769: 233,
                770: 234,
                771: 7869,
                772: 275,
                774: 277,
                775: 279,
                776: 235,
                777: 7867,
                780: 283,
                783: 517,
                785: 519,
                803: 7865,
                807: 553,
                808: 281,
                813: 7705,
                816: 7707,
              },
            ],
            102: [, , { 775: 7711 }],
            103: [
              ,
              ,
              {
                769: 501,
                770: 285,
                772: 7713,
                774: 287,
                775: 289,
                780: 487,
                807: 291,
              },
            ],
            104: [
              ,
              ,
              {
                770: 293,
                775: 7715,
                776: 7719,
                780: 543,
                803: 7717,
                807: 7721,
                814: 7723,
                817: 7830,
              },
            ],
            105: [
              ,
              ,
              {
                768: 236,
                769: 237,
                770: 238,
                771: 297,
                772: 299,
                774: 301,
                776: 239,
                777: 7881,
                780: 464,
                783: 521,
                785: 523,
                803: 7883,
                808: 303,
                816: 7725,
              },
            ],
            106: [, , { 770: 309, 780: 496 }],
            107: [, , { 769: 7729, 780: 489, 803: 7731, 807: 311, 817: 7733 }],
            108: [
              ,
              ,
              { 769: 314, 780: 318, 803: 7735, 807: 316, 813: 7741, 817: 7739 },
            ],
            109: [, , { 769: 7743, 775: 7745, 803: 7747 }],
            110: [
              ,
              ,
              {
                768: 505,
                769: 324,
                771: 241,
                775: 7749,
                780: 328,
                803: 7751,
                807: 326,
                813: 7755,
                817: 7753,
              },
            ],
            111: [
              ,
              ,
              {
                768: 242,
                769: 243,
                770: 244,
                771: 245,
                772: 333,
                774: 335,
                775: 559,
                776: 246,
                777: 7887,
                779: 337,
                780: 466,
                783: 525,
                785: 527,
                795: 417,
                803: 7885,
                808: 491,
              },
            ],
            112: [, , { 769: 7765, 775: 7767 }],
            114: [
              ,
              ,
              {
                769: 341,
                775: 7769,
                780: 345,
                783: 529,
                785: 531,
                803: 7771,
                807: 343,
                817: 7775,
              },
            ],
            115: [
              ,
              ,
              {
                769: 347,
                770: 349,
                775: 7777,
                780: 353,
                803: 7779,
                806: 537,
                807: 351,
              },
            ],
            116: [
              ,
              ,
              {
                775: 7787,
                776: 7831,
                780: 357,
                803: 7789,
                806: 539,
                807: 355,
                813: 7793,
                817: 7791,
              },
            ],
            117: [
              ,
              ,
              {
                768: 249,
                769: 250,
                770: 251,
                771: 361,
                772: 363,
                774: 365,
                776: 252,
                777: 7911,
                778: 367,
                779: 369,
                780: 468,
                783: 533,
                785: 535,
                795: 432,
                803: 7909,
                804: 7795,
                808: 371,
                813: 7799,
                816: 7797,
              },
            ],
            118: [, , { 771: 7805, 803: 7807 }],
            119: [
              ,
              ,
              {
                768: 7809,
                769: 7811,
                770: 373,
                775: 7815,
                776: 7813,
                778: 7832,
                803: 7817,
              },
            ],
            120: [, , { 775: 7819, 776: 7821 }],
            121: [
              ,
              ,
              {
                768: 7923,
                769: 253,
                770: 375,
                771: 7929,
                772: 563,
                775: 7823,
                776: 255,
                777: 7927,
                778: 7833,
                803: 7925,
              },
            ],
            122: [
              ,
              ,
              { 769: 378, 770: 7825, 775: 380, 780: 382, 803: 7827, 817: 7829 },
            ],
            160: [[32], 256],
            168: [[32, 776], 256, { 768: 8173, 769: 901, 834: 8129 }],
            170: [[97], 256],
            175: [[32, 772], 256],
            178: [[50], 256],
            179: [[51], 256],
            180: [[32, 769], 256],
            181: [[956], 256],
            184: [[32, 807], 256],
            185: [[49], 256],
            186: [[111], 256],
            188: [[49, 8260, 52], 256],
            189: [[49, 8260, 50], 256],
            190: [[51, 8260, 52], 256],
            192: [[65, 768]],
            193: [[65, 769]],
            194: [[65, 770], , { 768: 7846, 769: 7844, 771: 7850, 777: 7848 }],
            195: [[65, 771]],
            196: [[65, 776], , { 772: 478 }],
            197: [[65, 778], , { 769: 506 }],
            198: [, , { 769: 508, 772: 482 }],
            199: [[67, 807], , { 769: 7688 }],
            200: [[69, 768]],
            201: [[69, 769]],
            202: [[69, 770], , { 768: 7872, 769: 7870, 771: 7876, 777: 7874 }],
            203: [[69, 776]],
            204: [[73, 768]],
            205: [[73, 769]],
            206: [[73, 770]],
            207: [[73, 776], , { 769: 7726 }],
            209: [[78, 771]],
            210: [[79, 768]],
            211: [[79, 769]],
            212: [[79, 770], , { 768: 7890, 769: 7888, 771: 7894, 777: 7892 }],
            213: [[79, 771], , { 769: 7756, 772: 556, 776: 7758 }],
            214: [[79, 776], , { 772: 554 }],
            216: [, , { 769: 510 }],
            217: [[85, 768]],
            218: [[85, 769]],
            219: [[85, 770]],
            220: [[85, 776], , { 768: 475, 769: 471, 772: 469, 780: 473 }],
            221: [[89, 769]],
            224: [[97, 768]],
            225: [[97, 769]],
            226: [[97, 770], , { 768: 7847, 769: 7845, 771: 7851, 777: 7849 }],
            227: [[97, 771]],
            228: [[97, 776], , { 772: 479 }],
            229: [[97, 778], , { 769: 507 }],
            230: [, , { 769: 509, 772: 483 }],
            231: [[99, 807], , { 769: 7689 }],
            232: [[101, 768]],
            233: [[101, 769]],
            234: [[101, 770], , { 768: 7873, 769: 7871, 771: 7877, 777: 7875 }],
            235: [[101, 776]],
            236: [[105, 768]],
            237: [[105, 769]],
            238: [[105, 770]],
            239: [[105, 776], , { 769: 7727 }],
            241: [[110, 771]],
            242: [[111, 768]],
            243: [[111, 769]],
            244: [[111, 770], , { 768: 7891, 769: 7889, 771: 7895, 777: 7893 }],
            245: [[111, 771], , { 769: 7757, 772: 557, 776: 7759 }],
            246: [[111, 776], , { 772: 555 }],
            248: [, , { 769: 511 }],
            249: [[117, 768]],
            250: [[117, 769]],
            251: [[117, 770]],
            252: [[117, 776], , { 768: 476, 769: 472, 772: 470, 780: 474 }],
            253: [[121, 769]],
            255: [[121, 776]],
          },
          256: {
            256: [[65, 772]],
            257: [[97, 772]],
            258: [[65, 774], , { 768: 7856, 769: 7854, 771: 7860, 777: 7858 }],
            259: [[97, 774], , { 768: 7857, 769: 7855, 771: 7861, 777: 7859 }],
            260: [[65, 808]],
            261: [[97, 808]],
            262: [[67, 769]],
            263: [[99, 769]],
            264: [[67, 770]],
            265: [[99, 770]],
            266: [[67, 775]],
            267: [[99, 775]],
            268: [[67, 780]],
            269: [[99, 780]],
            270: [[68, 780]],
            271: [[100, 780]],
            274: [[69, 772], , { 768: 7700, 769: 7702 }],
            275: [[101, 772], , { 768: 7701, 769: 7703 }],
            276: [[69, 774]],
            277: [[101, 774]],
            278: [[69, 775]],
            279: [[101, 775]],
            280: [[69, 808]],
            281: [[101, 808]],
            282: [[69, 780]],
            283: [[101, 780]],
            284: [[71, 770]],
            285: [[103, 770]],
            286: [[71, 774]],
            287: [[103, 774]],
            288: [[71, 775]],
            289: [[103, 775]],
            290: [[71, 807]],
            291: [[103, 807]],
            292: [[72, 770]],
            293: [[104, 770]],
            296: [[73, 771]],
            297: [[105, 771]],
            298: [[73, 772]],
            299: [[105, 772]],
            300: [[73, 774]],
            301: [[105, 774]],
            302: [[73, 808]],
            303: [[105, 808]],
            304: [[73, 775]],
            306: [[73, 74], 256],
            307: [[105, 106], 256],
            308: [[74, 770]],
            309: [[106, 770]],
            310: [[75, 807]],
            311: [[107, 807]],
            313: [[76, 769]],
            314: [[108, 769]],
            315: [[76, 807]],
            316: [[108, 807]],
            317: [[76, 780]],
            318: [[108, 780]],
            319: [[76, 183], 256],
            320: [[108, 183], 256],
            323: [[78, 769]],
            324: [[110, 769]],
            325: [[78, 807]],
            326: [[110, 807]],
            327: [[78, 780]],
            328: [[110, 780]],
            329: [[700, 110], 256],
            332: [[79, 772], , { 768: 7760, 769: 7762 }],
            333: [[111, 772], , { 768: 7761, 769: 7763 }],
            334: [[79, 774]],
            335: [[111, 774]],
            336: [[79, 779]],
            337: [[111, 779]],
            340: [[82, 769]],
            341: [[114, 769]],
            342: [[82, 807]],
            343: [[114, 807]],
            344: [[82, 780]],
            345: [[114, 780]],
            346: [[83, 769], , { 775: 7780 }],
            347: [[115, 769], , { 775: 7781 }],
            348: [[83, 770]],
            349: [[115, 770]],
            350: [[83, 807]],
            351: [[115, 807]],
            352: [[83, 780], , { 775: 7782 }],
            353: [[115, 780], , { 775: 7783 }],
            354: [[84, 807]],
            355: [[116, 807]],
            356: [[84, 780]],
            357: [[116, 780]],
            360: [[85, 771], , { 769: 7800 }],
            361: [[117, 771], , { 769: 7801 }],
            362: [[85, 772], , { 776: 7802 }],
            363: [[117, 772], , { 776: 7803 }],
            364: [[85, 774]],
            365: [[117, 774]],
            366: [[85, 778]],
            367: [[117, 778]],
            368: [[85, 779]],
            369: [[117, 779]],
            370: [[85, 808]],
            371: [[117, 808]],
            372: [[87, 770]],
            373: [[119, 770]],
            374: [[89, 770]],
            375: [[121, 770]],
            376: [[89, 776]],
            377: [[90, 769]],
            378: [[122, 769]],
            379: [[90, 775]],
            380: [[122, 775]],
            381: [[90, 780]],
            382: [[122, 780]],
            383: [[115], 256, { 775: 7835 }],
            416: [
              [79, 795],
              ,
              { 768: 7900, 769: 7898, 771: 7904, 777: 7902, 803: 7906 },
            ],
            417: [
              [111, 795],
              ,
              { 768: 7901, 769: 7899, 771: 7905, 777: 7903, 803: 7907 },
            ],
            431: [
              [85, 795],
              ,
              { 768: 7914, 769: 7912, 771: 7918, 777: 7916, 803: 7920 },
            ],
            432: [
              [117, 795],
              ,
              { 768: 7915, 769: 7913, 771: 7919, 777: 7917, 803: 7921 },
            ],
            439: [, , { 780: 494 }],
            452: [[68, 381], 256],
            453: [[68, 382], 256],
            454: [[100, 382], 256],
            455: [[76, 74], 256],
            456: [[76, 106], 256],
            457: [[108, 106], 256],
            458: [[78, 74], 256],
            459: [[78, 106], 256],
            460: [[110, 106], 256],
            461: [[65, 780]],
            462: [[97, 780]],
            463: [[73, 780]],
            464: [[105, 780]],
            465: [[79, 780]],
            466: [[111, 780]],
            467: [[85, 780]],
            468: [[117, 780]],
            469: [[220, 772]],
            470: [[252, 772]],
            471: [[220, 769]],
            472: [[252, 769]],
            473: [[220, 780]],
            474: [[252, 780]],
            475: [[220, 768]],
            476: [[252, 768]],
            478: [[196, 772]],
            479: [[228, 772]],
            480: [[550, 772]],
            481: [[551, 772]],
            482: [[198, 772]],
            483: [[230, 772]],
            486: [[71, 780]],
            487: [[103, 780]],
            488: [[75, 780]],
            489: [[107, 780]],
            490: [[79, 808], , { 772: 492 }],
            491: [[111, 808], , { 772: 493 }],
            492: [[490, 772]],
            493: [[491, 772]],
            494: [[439, 780]],
            495: [[658, 780]],
            496: [[106, 780]],
            497: [[68, 90], 256],
            498: [[68, 122], 256],
            499: [[100, 122], 256],
            500: [[71, 769]],
            501: [[103, 769]],
            504: [[78, 768]],
            505: [[110, 768]],
            506: [[197, 769]],
            507: [[229, 769]],
            508: [[198, 769]],
            509: [[230, 769]],
            510: [[216, 769]],
            511: [[248, 769]],
            66045: [, 220],
          },
          512: {
            512: [[65, 783]],
            513: [[97, 783]],
            514: [[65, 785]],
            515: [[97, 785]],
            516: [[69, 783]],
            517: [[101, 783]],
            518: [[69, 785]],
            519: [[101, 785]],
            520: [[73, 783]],
            521: [[105, 783]],
            522: [[73, 785]],
            523: [[105, 785]],
            524: [[79, 783]],
            525: [[111, 783]],
            526: [[79, 785]],
            527: [[111, 785]],
            528: [[82, 783]],
            529: [[114, 783]],
            530: [[82, 785]],
            531: [[114, 785]],
            532: [[85, 783]],
            533: [[117, 783]],
            534: [[85, 785]],
            535: [[117, 785]],
            536: [[83, 806]],
            537: [[115, 806]],
            538: [[84, 806]],
            539: [[116, 806]],
            542: [[72, 780]],
            543: [[104, 780]],
            550: [[65, 775], , { 772: 480 }],
            551: [[97, 775], , { 772: 481 }],
            552: [[69, 807], , { 774: 7708 }],
            553: [[101, 807], , { 774: 7709 }],
            554: [[214, 772]],
            555: [[246, 772]],
            556: [[213, 772]],
            557: [[245, 772]],
            558: [[79, 775], , { 772: 560 }],
            559: [[111, 775], , { 772: 561 }],
            560: [[558, 772]],
            561: [[559, 772]],
            562: [[89, 772]],
            563: [[121, 772]],
            658: [, , { 780: 495 }],
            688: [[104], 256],
            689: [[614], 256],
            690: [[106], 256],
            691: [[114], 256],
            692: [[633], 256],
            693: [[635], 256],
            694: [[641], 256],
            695: [[119], 256],
            696: [[121], 256],
            728: [[32, 774], 256],
            729: [[32, 775], 256],
            730: [[32, 778], 256],
            731: [[32, 808], 256],
            732: [[32, 771], 256],
            733: [[32, 779], 256],
            736: [[611], 256],
            737: [[108], 256],
            738: [[115], 256],
            739: [[120], 256],
            740: [[661], 256],
            66272: [, 220],
          },
          768: {
            768: [, 230],
            769: [, 230],
            770: [, 230],
            771: [, 230],
            772: [, 230],
            773: [, 230],
            774: [, 230],
            775: [, 230],
            776: [, 230, { 769: 836 }],
            777: [, 230],
            778: [, 230],
            779: [, 230],
            780: [, 230],
            781: [, 230],
            782: [, 230],
            783: [, 230],
            784: [, 230],
            785: [, 230],
            786: [, 230],
            787: [, 230],
            788: [, 230],
            789: [, 232],
            790: [, 220],
            791: [, 220],
            792: [, 220],
            793: [, 220],
            794: [, 232],
            795: [, 216],
            796: [, 220],
            797: [, 220],
            798: [, 220],
            799: [, 220],
            800: [, 220],
            801: [, 202],
            802: [, 202],
            803: [, 220],
            804: [, 220],
            805: [, 220],
            806: [, 220],
            807: [, 202],
            808: [, 202],
            809: [, 220],
            810: [, 220],
            811: [, 220],
            812: [, 220],
            813: [, 220],
            814: [, 220],
            815: [, 220],
            816: [, 220],
            817: [, 220],
            818: [, 220],
            819: [, 220],
            820: [, 1],
            821: [, 1],
            822: [, 1],
            823: [, 1],
            824: [, 1],
            825: [, 220],
            826: [, 220],
            827: [, 220],
            828: [, 220],
            829: [, 230],
            830: [, 230],
            831: [, 230],
            832: [[768], 230],
            833: [[769], 230],
            834: [, 230],
            835: [[787], 230],
            836: [[776, 769], 230],
            837: [, 240],
            838: [, 230],
            839: [, 220],
            840: [, 220],
            841: [, 220],
            842: [, 230],
            843: [, 230],
            844: [, 230],
            845: [, 220],
            846: [, 220],
            848: [, 230],
            849: [, 230],
            850: [, 230],
            851: [, 220],
            852: [, 220],
            853: [, 220],
            854: [, 220],
            855: [, 230],
            856: [, 232],
            857: [, 220],
            858: [, 220],
            859: [, 230],
            860: [, 233],
            861: [, 234],
            862: [, 234],
            863: [, 233],
            864: [, 234],
            865: [, 234],
            866: [, 233],
            867: [, 230],
            868: [, 230],
            869: [, 230],
            870: [, 230],
            871: [, 230],
            872: [, 230],
            873: [, 230],
            874: [, 230],
            875: [, 230],
            876: [, 230],
            877: [, 230],
            878: [, 230],
            879: [, 230],
            884: [[697]],
            890: [[32, 837], 256],
            894: [[59]],
            900: [[32, 769], 256],
            901: [[168, 769]],
            902: [[913, 769]],
            903: [[183]],
            904: [[917, 769]],
            905: [[919, 769]],
            906: [[921, 769]],
            908: [[927, 769]],
            910: [[933, 769]],
            911: [[937, 769]],
            912: [[970, 769]],
            913: [
              ,
              ,
              {
                768: 8122,
                769: 902,
                772: 8121,
                774: 8120,
                787: 7944,
                788: 7945,
                837: 8124,
              },
            ],
            917: [, , { 768: 8136, 769: 904, 787: 7960, 788: 7961 }],
            919: [, , { 768: 8138, 769: 905, 787: 7976, 788: 7977, 837: 8140 }],
            921: [
              ,
              ,
              {
                768: 8154,
                769: 906,
                772: 8153,
                774: 8152,
                776: 938,
                787: 7992,
                788: 7993,
              },
            ],
            927: [, , { 768: 8184, 769: 908, 787: 8008, 788: 8009 }],
            929: [, , { 788: 8172 }],
            933: [
              ,
              ,
              {
                768: 8170,
                769: 910,
                772: 8169,
                774: 8168,
                776: 939,
                788: 8025,
              },
            ],
            937: [, , { 768: 8186, 769: 911, 787: 8040, 788: 8041, 837: 8188 }],
            938: [[921, 776]],
            939: [[933, 776]],
            940: [[945, 769], , { 837: 8116 }],
            941: [[949, 769]],
            942: [[951, 769], , { 837: 8132 }],
            943: [[953, 769]],
            944: [[971, 769]],
            945: [
              ,
              ,
              {
                768: 8048,
                769: 940,
                772: 8113,
                774: 8112,
                787: 7936,
                788: 7937,
                834: 8118,
                837: 8115,
              },
            ],
            949: [, , { 768: 8050, 769: 941, 787: 7952, 788: 7953 }],
            951: [
              ,
              ,
              {
                768: 8052,
                769: 942,
                787: 7968,
                788: 7969,
                834: 8134,
                837: 8131,
              },
            ],
            953: [
              ,
              ,
              {
                768: 8054,
                769: 943,
                772: 8145,
                774: 8144,
                776: 970,
                787: 7984,
                788: 7985,
                834: 8150,
              },
            ],
            959: [, , { 768: 8056, 769: 972, 787: 8e3, 788: 8001 }],
            961: [, , { 787: 8164, 788: 8165 }],
            965: [
              ,
              ,
              {
                768: 8058,
                769: 973,
                772: 8161,
                774: 8160,
                776: 971,
                787: 8016,
                788: 8017,
                834: 8166,
              },
            ],
            969: [
              ,
              ,
              {
                768: 8060,
                769: 974,
                787: 8032,
                788: 8033,
                834: 8182,
                837: 8179,
              },
            ],
            970: [[953, 776], , { 768: 8146, 769: 912, 834: 8151 }],
            971: [[965, 776], , { 768: 8162, 769: 944, 834: 8167 }],
            972: [[959, 769]],
            973: [[965, 769]],
            974: [[969, 769], , { 837: 8180 }],
            976: [[946], 256],
            977: [[952], 256],
            978: [[933], 256, { 769: 979, 776: 980 }],
            979: [[978, 769]],
            980: [[978, 776]],
            981: [[966], 256],
            982: [[960], 256],
            1008: [[954], 256],
            1009: [[961], 256],
            1010: [[962], 256],
            1012: [[920], 256],
            1013: [[949], 256],
            1017: [[931], 256],
            66422: [, 230],
            66423: [, 230],
            66424: [, 230],
            66425: [, 230],
            66426: [, 230],
          },
          1024: {
            1024: [[1045, 768]],
            1025: [[1045, 776]],
            1027: [[1043, 769]],
            1030: [, , { 776: 1031 }],
            1031: [[1030, 776]],
            1036: [[1050, 769]],
            1037: [[1048, 768]],
            1038: [[1059, 774]],
            1040: [, , { 774: 1232, 776: 1234 }],
            1043: [, , { 769: 1027 }],
            1045: [, , { 768: 1024, 774: 1238, 776: 1025 }],
            1046: [, , { 774: 1217, 776: 1244 }],
            1047: [, , { 776: 1246 }],
            1048: [, , { 768: 1037, 772: 1250, 774: 1049, 776: 1252 }],
            1049: [[1048, 774]],
            1050: [, , { 769: 1036 }],
            1054: [, , { 776: 1254 }],
            1059: [, , { 772: 1262, 774: 1038, 776: 1264, 779: 1266 }],
            1063: [, , { 776: 1268 }],
            1067: [, , { 776: 1272 }],
            1069: [, , { 776: 1260 }],
            1072: [, , { 774: 1233, 776: 1235 }],
            1075: [, , { 769: 1107 }],
            1077: [, , { 768: 1104, 774: 1239, 776: 1105 }],
            1078: [, , { 774: 1218, 776: 1245 }],
            1079: [, , { 776: 1247 }],
            1080: [, , { 768: 1117, 772: 1251, 774: 1081, 776: 1253 }],
            1081: [[1080, 774]],
            1082: [, , { 769: 1116 }],
            1086: [, , { 776: 1255 }],
            1091: [, , { 772: 1263, 774: 1118, 776: 1265, 779: 1267 }],
            1095: [, , { 776: 1269 }],
            1099: [, , { 776: 1273 }],
            1101: [, , { 776: 1261 }],
            1104: [[1077, 768]],
            1105: [[1077, 776]],
            1107: [[1075, 769]],
            1110: [, , { 776: 1111 }],
            1111: [[1110, 776]],
            1116: [[1082, 769]],
            1117: [[1080, 768]],
            1118: [[1091, 774]],
            1140: [, , { 783: 1142 }],
            1141: [, , { 783: 1143 }],
            1142: [[1140, 783]],
            1143: [[1141, 783]],
            1155: [, 230],
            1156: [, 230],
            1157: [, 230],
            1158: [, 230],
            1159: [, 230],
            1217: [[1046, 774]],
            1218: [[1078, 774]],
            1232: [[1040, 774]],
            1233: [[1072, 774]],
            1234: [[1040, 776]],
            1235: [[1072, 776]],
            1238: [[1045, 774]],
            1239: [[1077, 774]],
            1240: [, , { 776: 1242 }],
            1241: [, , { 776: 1243 }],
            1242: [[1240, 776]],
            1243: [[1241, 776]],
            1244: [[1046, 776]],
            1245: [[1078, 776]],
            1246: [[1047, 776]],
            1247: [[1079, 776]],
            1250: [[1048, 772]],
            1251: [[1080, 772]],
            1252: [[1048, 776]],
            1253: [[1080, 776]],
            1254: [[1054, 776]],
            1255: [[1086, 776]],
            1256: [, , { 776: 1258 }],
            1257: [, , { 776: 1259 }],
            1258: [[1256, 776]],
            1259: [[1257, 776]],
            1260: [[1069, 776]],
            1261: [[1101, 776]],
            1262: [[1059, 772]],
            1263: [[1091, 772]],
            1264: [[1059, 776]],
            1265: [[1091, 776]],
            1266: [[1059, 779]],
            1267: [[1091, 779]],
            1268: [[1063, 776]],
            1269: [[1095, 776]],
            1272: [[1067, 776]],
            1273: [[1099, 776]],
          },
          1280: {
            1415: [[1381, 1410], 256],
            1425: [, 220],
            1426: [, 230],
            1427: [, 230],
            1428: [, 230],
            1429: [, 230],
            1430: [, 220],
            1431: [, 230],
            1432: [, 230],
            1433: [, 230],
            1434: [, 222],
            1435: [, 220],
            1436: [, 230],
            1437: [, 230],
            1438: [, 230],
            1439: [, 230],
            1440: [, 230],
            1441: [, 230],
            1442: [, 220],
            1443: [, 220],
            1444: [, 220],
            1445: [, 220],
            1446: [, 220],
            1447: [, 220],
            1448: [, 230],
            1449: [, 230],
            1450: [, 220],
            1451: [, 230],
            1452: [, 230],
            1453: [, 222],
            1454: [, 228],
            1455: [, 230],
            1456: [, 10],
            1457: [, 11],
            1458: [, 12],
            1459: [, 13],
            1460: [, 14],
            1461: [, 15],
            1462: [, 16],
            1463: [, 17],
            1464: [, 18],
            1465: [, 19],
            1466: [, 19],
            1467: [, 20],
            1468: [, 21],
            1469: [, 22],
            1471: [, 23],
            1473: [, 24],
            1474: [, 25],
            1476: [, 230],
            1477: [, 220],
            1479: [, 18],
          },
          1536: {
            1552: [, 230],
            1553: [, 230],
            1554: [, 230],
            1555: [, 230],
            1556: [, 230],
            1557: [, 230],
            1558: [, 230],
            1559: [, 230],
            1560: [, 30],
            1561: [, 31],
            1562: [, 32],
            1570: [[1575, 1619]],
            1571: [[1575, 1620]],
            1572: [[1608, 1620]],
            1573: [[1575, 1621]],
            1574: [[1610, 1620]],
            1575: [, , { 1619: 1570, 1620: 1571, 1621: 1573 }],
            1608: [, , { 1620: 1572 }],
            1610: [, , { 1620: 1574 }],
            1611: [, 27],
            1612: [, 28],
            1613: [, 29],
            1614: [, 30],
            1615: [, 31],
            1616: [, 32],
            1617: [, 33],
            1618: [, 34],
            1619: [, 230],
            1620: [, 230],
            1621: [, 220],
            1622: [, 220],
            1623: [, 230],
            1624: [, 230],
            1625: [, 230],
            1626: [, 230],
            1627: [, 230],
            1628: [, 220],
            1629: [, 230],
            1630: [, 230],
            1631: [, 220],
            1648: [, 35],
            1653: [[1575, 1652], 256],
            1654: [[1608, 1652], 256],
            1655: [[1735, 1652], 256],
            1656: [[1610, 1652], 256],
            1728: [[1749, 1620]],
            1729: [, , { 1620: 1730 }],
            1730: [[1729, 1620]],
            1746: [, , { 1620: 1747 }],
            1747: [[1746, 1620]],
            1749: [, , { 1620: 1728 }],
            1750: [, 230],
            1751: [, 230],
            1752: [, 230],
            1753: [, 230],
            1754: [, 230],
            1755: [, 230],
            1756: [, 230],
            1759: [, 230],
            1760: [, 230],
            1761: [, 230],
            1762: [, 230],
            1763: [, 220],
            1764: [, 230],
            1767: [, 230],
            1768: [, 230],
            1770: [, 220],
            1771: [, 230],
            1772: [, 230],
            1773: [, 220],
          },
          1792: {
            1809: [, 36],
            1840: [, 230],
            1841: [, 220],
            1842: [, 230],
            1843: [, 230],
            1844: [, 220],
            1845: [, 230],
            1846: [, 230],
            1847: [, 220],
            1848: [, 220],
            1849: [, 220],
            1850: [, 230],
            1851: [, 220],
            1852: [, 220],
            1853: [, 230],
            1854: [, 220],
            1855: [, 230],
            1856: [, 230],
            1857: [, 230],
            1858: [, 220],
            1859: [, 230],
            1860: [, 220],
            1861: [, 230],
            1862: [, 220],
            1863: [, 230],
            1864: [, 220],
            1865: [, 230],
            1866: [, 230],
            2027: [, 230],
            2028: [, 230],
            2029: [, 230],
            2030: [, 230],
            2031: [, 230],
            2032: [, 230],
            2033: [, 230],
            2034: [, 220],
            2035: [, 230],
          },
          2048: {
            2070: [, 230],
            2071: [, 230],
            2072: [, 230],
            2073: [, 230],
            2075: [, 230],
            2076: [, 230],
            2077: [, 230],
            2078: [, 230],
            2079: [, 230],
            2080: [, 230],
            2081: [, 230],
            2082: [, 230],
            2083: [, 230],
            2085: [, 230],
            2086: [, 230],
            2087: [, 230],
            2089: [, 230],
            2090: [, 230],
            2091: [, 230],
            2092: [, 230],
            2093: [, 230],
            2137: [, 220],
            2138: [, 220],
            2139: [, 220],
            2276: [, 230],
            2277: [, 230],
            2278: [, 220],
            2279: [, 230],
            2280: [, 230],
            2281: [, 220],
            2282: [, 230],
            2283: [, 230],
            2284: [, 230],
            2285: [, 220],
            2286: [, 220],
            2287: [, 220],
            2288: [, 27],
            2289: [, 28],
            2290: [, 29],
            2291: [, 230],
            2292: [, 230],
            2293: [, 230],
            2294: [, 220],
            2295: [, 230],
            2296: [, 230],
            2297: [, 220],
            2298: [, 220],
            2299: [, 230],
            2300: [, 230],
            2301: [, 230],
            2302: [, 230],
            2303: [, 230],
          },
          2304: {
            2344: [, , { 2364: 2345 }],
            2345: [[2344, 2364]],
            2352: [, , { 2364: 2353 }],
            2353: [[2352, 2364]],
            2355: [, , { 2364: 2356 }],
            2356: [[2355, 2364]],
            2364: [, 7],
            2381: [, 9],
            2385: [, 230],
            2386: [, 220],
            2387: [, 230],
            2388: [, 230],
            2392: [[2325, 2364], 512],
            2393: [[2326, 2364], 512],
            2394: [[2327, 2364], 512],
            2395: [[2332, 2364], 512],
            2396: [[2337, 2364], 512],
            2397: [[2338, 2364], 512],
            2398: [[2347, 2364], 512],
            2399: [[2351, 2364], 512],
            2492: [, 7],
            2503: [, , { 2494: 2507, 2519: 2508 }],
            2507: [[2503, 2494]],
            2508: [[2503, 2519]],
            2509: [, 9],
            2524: [[2465, 2492], 512],
            2525: [[2466, 2492], 512],
            2527: [[2479, 2492], 512],
          },
          2560: {
            2611: [[2610, 2620], 512],
            2614: [[2616, 2620], 512],
            2620: [, 7],
            2637: [, 9],
            2649: [[2582, 2620], 512],
            2650: [[2583, 2620], 512],
            2651: [[2588, 2620], 512],
            2654: [[2603, 2620], 512],
            2748: [, 7],
            2765: [, 9],
            68109: [, 220],
            68111: [, 230],
            68152: [, 230],
            68153: [, 1],
            68154: [, 220],
            68159: [, 9],
            68325: [, 230],
            68326: [, 220],
          },
          2816: {
            2876: [, 7],
            2887: [, , { 2878: 2891, 2902: 2888, 2903: 2892 }],
            2888: [[2887, 2902]],
            2891: [[2887, 2878]],
            2892: [[2887, 2903]],
            2893: [, 9],
            2908: [[2849, 2876], 512],
            2909: [[2850, 2876], 512],
            2962: [, , { 3031: 2964 }],
            2964: [[2962, 3031]],
            3014: [, , { 3006: 3018, 3031: 3020 }],
            3015: [, , { 3006: 3019 }],
            3018: [[3014, 3006]],
            3019: [[3015, 3006]],
            3020: [[3014, 3031]],
            3021: [, 9],
          },
          3072: {
            3142: [, , { 3158: 3144 }],
            3144: [[3142, 3158]],
            3149: [, 9],
            3157: [, 84],
            3158: [, 91],
            3260: [, 7],
            3263: [, , { 3285: 3264 }],
            3264: [[3263, 3285]],
            3270: [, , { 3266: 3274, 3285: 3271, 3286: 3272 }],
            3271: [[3270, 3285]],
            3272: [[3270, 3286]],
            3274: [[3270, 3266], , { 3285: 3275 }],
            3275: [[3274, 3285]],
            3277: [, 9],
          },
          3328: {
            3398: [, , { 3390: 3402, 3415: 3404 }],
            3399: [, , { 3390: 3403 }],
            3402: [[3398, 3390]],
            3403: [[3399, 3390]],
            3404: [[3398, 3415]],
            3405: [, 9],
            3530: [, 9],
            3545: [, , { 3530: 3546, 3535: 3548, 3551: 3550 }],
            3546: [[3545, 3530]],
            3548: [[3545, 3535], , { 3530: 3549 }],
            3549: [[3548, 3530]],
            3550: [[3545, 3551]],
          },
          3584: {
            3635: [[3661, 3634], 256],
            3640: [, 103],
            3641: [, 103],
            3642: [, 9],
            3656: [, 107],
            3657: [, 107],
            3658: [, 107],
            3659: [, 107],
            3763: [[3789, 3762], 256],
            3768: [, 118],
            3769: [, 118],
            3784: [, 122],
            3785: [, 122],
            3786: [, 122],
            3787: [, 122],
            3804: [[3755, 3737], 256],
            3805: [[3755, 3745], 256],
          },
          3840: {
            3852: [[3851], 256],
            3864: [, 220],
            3865: [, 220],
            3893: [, 220],
            3895: [, 220],
            3897: [, 216],
            3907: [[3906, 4023], 512],
            3917: [[3916, 4023], 512],
            3922: [[3921, 4023], 512],
            3927: [[3926, 4023], 512],
            3932: [[3931, 4023], 512],
            3945: [[3904, 4021], 512],
            3953: [, 129],
            3954: [, 130],
            3955: [[3953, 3954], 512],
            3956: [, 132],
            3957: [[3953, 3956], 512],
            3958: [[4018, 3968], 512],
            3959: [[4018, 3969], 256],
            3960: [[4019, 3968], 512],
            3961: [[4019, 3969], 256],
            3962: [, 130],
            3963: [, 130],
            3964: [, 130],
            3965: [, 130],
            3968: [, 130],
            3969: [[3953, 3968], 512],
            3970: [, 230],
            3971: [, 230],
            3972: [, 9],
            3974: [, 230],
            3975: [, 230],
            3987: [[3986, 4023], 512],
            3997: [[3996, 4023], 512],
            4002: [[4001, 4023], 512],
            4007: [[4006, 4023], 512],
            4012: [[4011, 4023], 512],
            4025: [[3984, 4021], 512],
            4038: [, 220],
          },
          4096: {
            4133: [, , { 4142: 4134 }],
            4134: [[4133, 4142]],
            4151: [, 7],
            4153: [, 9],
            4154: [, 9],
            4237: [, 220],
            4348: [[4316], 256],
            69702: [, 9],
            69759: [, 9],
            69785: [, , { 69818: 69786 }],
            69786: [[69785, 69818]],
            69787: [, , { 69818: 69788 }],
            69788: [[69787, 69818]],
            69797: [, , { 69818: 69803 }],
            69803: [[69797, 69818]],
            69817: [, 9],
            69818: [, 7],
          },
          4352: {
            69888: [, 230],
            69889: [, 230],
            69890: [, 230],
            69934: [[69937, 69927]],
            69935: [[69938, 69927]],
            69937: [, , { 69927: 69934 }],
            69938: [, , { 69927: 69935 }],
            69939: [, 9],
            69940: [, 9],
            70003: [, 7],
            70080: [, 9],
          },
          4608: { 70197: [, 9], 70198: [, 7], 70377: [, 7], 70378: [, 9] },
          4864: {
            4957: [, 230],
            4958: [, 230],
            4959: [, 230],
            70460: [, 7],
            70471: [, , { 70462: 70475, 70487: 70476 }],
            70475: [[70471, 70462]],
            70476: [[70471, 70487]],
            70477: [, 9],
            70502: [, 230],
            70503: [, 230],
            70504: [, 230],
            70505: [, 230],
            70506: [, 230],
            70507: [, 230],
            70508: [, 230],
            70512: [, 230],
            70513: [, 230],
            70514: [, 230],
            70515: [, 230],
            70516: [, 230],
          },
          5120: {
            70841: [, , { 70832: 70844, 70842: 70843, 70845: 70846 }],
            70843: [[70841, 70842]],
            70844: [[70841, 70832]],
            70846: [[70841, 70845]],
            70850: [, 9],
            70851: [, 7],
          },
          5376: {
            71096: [, , { 71087: 71098 }],
            71097: [, , { 71087: 71099 }],
            71098: [[71096, 71087]],
            71099: [[71097, 71087]],
            71103: [, 9],
            71104: [, 7],
          },
          5632: { 71231: [, 9], 71350: [, 9], 71351: [, 7] },
          5888: { 5908: [, 9], 5940: [, 9], 6098: [, 9], 6109: [, 230] },
          6144: { 6313: [, 228] },
          6400: { 6457: [, 222], 6458: [, 230], 6459: [, 220] },
          6656: {
            6679: [, 230],
            6680: [, 220],
            6752: [, 9],
            6773: [, 230],
            6774: [, 230],
            6775: [, 230],
            6776: [, 230],
            6777: [, 230],
            6778: [, 230],
            6779: [, 230],
            6780: [, 230],
            6783: [, 220],
            6832: [, 230],
            6833: [, 230],
            6834: [, 230],
            6835: [, 230],
            6836: [, 230],
            6837: [, 220],
            6838: [, 220],
            6839: [, 220],
            6840: [, 220],
            6841: [, 220],
            6842: [, 220],
            6843: [, 230],
            6844: [, 230],
            6845: [, 220],
          },
          6912: {
            6917: [, , { 6965: 6918 }],
            6918: [[6917, 6965]],
            6919: [, , { 6965: 6920 }],
            6920: [[6919, 6965]],
            6921: [, , { 6965: 6922 }],
            6922: [[6921, 6965]],
            6923: [, , { 6965: 6924 }],
            6924: [[6923, 6965]],
            6925: [, , { 6965: 6926 }],
            6926: [[6925, 6965]],
            6929: [, , { 6965: 6930 }],
            6930: [[6929, 6965]],
            6964: [, 7],
            6970: [, , { 6965: 6971 }],
            6971: [[6970, 6965]],
            6972: [, , { 6965: 6973 }],
            6973: [[6972, 6965]],
            6974: [, , { 6965: 6976 }],
            6975: [, , { 6965: 6977 }],
            6976: [[6974, 6965]],
            6977: [[6975, 6965]],
            6978: [, , { 6965: 6979 }],
            6979: [[6978, 6965]],
            6980: [, 9],
            7019: [, 230],
            7020: [, 220],
            7021: [, 230],
            7022: [, 230],
            7023: [, 230],
            7024: [, 230],
            7025: [, 230],
            7026: [, 230],
            7027: [, 230],
            7082: [, 9],
            7083: [, 9],
            7142: [, 7],
            7154: [, 9],
            7155: [, 9],
          },
          7168: {
            7223: [, 7],
            7376: [, 230],
            7377: [, 230],
            7378: [, 230],
            7380: [, 1],
            7381: [, 220],
            7382: [, 220],
            7383: [, 220],
            7384: [, 220],
            7385: [, 220],
            7386: [, 230],
            7387: [, 230],
            7388: [, 220],
            7389: [, 220],
            7390: [, 220],
            7391: [, 220],
            7392: [, 230],
            7394: [, 1],
            7395: [, 1],
            7396: [, 1],
            7397: [, 1],
            7398: [, 1],
            7399: [, 1],
            7400: [, 1],
            7405: [, 220],
            7412: [, 230],
            7416: [, 230],
            7417: [, 230],
          },
          7424: {
            7468: [[65], 256],
            7469: [[198], 256],
            7470: [[66], 256],
            7472: [[68], 256],
            7473: [[69], 256],
            7474: [[398], 256],
            7475: [[71], 256],
            7476: [[72], 256],
            7477: [[73], 256],
            7478: [[74], 256],
            7479: [[75], 256],
            7480: [[76], 256],
            7481: [[77], 256],
            7482: [[78], 256],
            7484: [[79], 256],
            7485: [[546], 256],
            7486: [[80], 256],
            7487: [[82], 256],
            7488: [[84], 256],
            7489: [[85], 256],
            7490: [[87], 256],
            7491: [[97], 256],
            7492: [[592], 256],
            7493: [[593], 256],
            7494: [[7426], 256],
            7495: [[98], 256],
            7496: [[100], 256],
            7497: [[101], 256],
            7498: [[601], 256],
            7499: [[603], 256],
            7500: [[604], 256],
            7501: [[103], 256],
            7503: [[107], 256],
            7504: [[109], 256],
            7505: [[331], 256],
            7506: [[111], 256],
            7507: [[596], 256],
            7508: [[7446], 256],
            7509: [[7447], 256],
            7510: [[112], 256],
            7511: [[116], 256],
            7512: [[117], 256],
            7513: [[7453], 256],
            7514: [[623], 256],
            7515: [[118], 256],
            7516: [[7461], 256],
            7517: [[946], 256],
            7518: [[947], 256],
            7519: [[948], 256],
            7520: [[966], 256],
            7521: [[967], 256],
            7522: [[105], 256],
            7523: [[114], 256],
            7524: [[117], 256],
            7525: [[118], 256],
            7526: [[946], 256],
            7527: [[947], 256],
            7528: [[961], 256],
            7529: [[966], 256],
            7530: [[967], 256],
            7544: [[1085], 256],
            7579: [[594], 256],
            7580: [[99], 256],
            7581: [[597], 256],
            7582: [[240], 256],
            7583: [[604], 256],
            7584: [[102], 256],
            7585: [[607], 256],
            7586: [[609], 256],
            7587: [[613], 256],
            7588: [[616], 256],
            7589: [[617], 256],
            7590: [[618], 256],
            7591: [[7547], 256],
            7592: [[669], 256],
            7593: [[621], 256],
            7594: [[7557], 256],
            7595: [[671], 256],
            7596: [[625], 256],
            7597: [[624], 256],
            7598: [[626], 256],
            7599: [[627], 256],
            7600: [[628], 256],
            7601: [[629], 256],
            7602: [[632], 256],
            7603: [[642], 256],
            7604: [[643], 256],
            7605: [[427], 256],
            7606: [[649], 256],
            7607: [[650], 256],
            7608: [[7452], 256],
            7609: [[651], 256],
            7610: [[652], 256],
            7611: [[122], 256],
            7612: [[656], 256],
            7613: [[657], 256],
            7614: [[658], 256],
            7615: [[952], 256],
            7616: [, 230],
            7617: [, 230],
            7618: [, 220],
            7619: [, 230],
            7620: [, 230],
            7621: [, 230],
            7622: [, 230],
            7623: [, 230],
            7624: [, 230],
            7625: [, 230],
            7626: [, 220],
            7627: [, 230],
            7628: [, 230],
            7629: [, 234],
            7630: [, 214],
            7631: [, 220],
            7632: [, 202],
            7633: [, 230],
            7634: [, 230],
            7635: [, 230],
            7636: [, 230],
            7637: [, 230],
            7638: [, 230],
            7639: [, 230],
            7640: [, 230],
            7641: [, 230],
            7642: [, 230],
            7643: [, 230],
            7644: [, 230],
            7645: [, 230],
            7646: [, 230],
            7647: [, 230],
            7648: [, 230],
            7649: [, 230],
            7650: [, 230],
            7651: [, 230],
            7652: [, 230],
            7653: [, 230],
            7654: [, 230],
            7655: [, 230],
            7656: [, 230],
            7657: [, 230],
            7658: [, 230],
            7659: [, 230],
            7660: [, 230],
            7661: [, 230],
            7662: [, 230],
            7663: [, 230],
            7664: [, 230],
            7665: [, 230],
            7666: [, 230],
            7667: [, 230],
            7668: [, 230],
            7669: [, 230],
            7676: [, 233],
            7677: [, 220],
            7678: [, 230],
            7679: [, 220],
          },
          7680: {
            7680: [[65, 805]],
            7681: [[97, 805]],
            7682: [[66, 775]],
            7683: [[98, 775]],
            7684: [[66, 803]],
            7685: [[98, 803]],
            7686: [[66, 817]],
            7687: [[98, 817]],
            7688: [[199, 769]],
            7689: [[231, 769]],
            7690: [[68, 775]],
            7691: [[100, 775]],
            7692: [[68, 803]],
            7693: [[100, 803]],
            7694: [[68, 817]],
            7695: [[100, 817]],
            7696: [[68, 807]],
            7697: [[100, 807]],
            7698: [[68, 813]],
            7699: [[100, 813]],
            7700: [[274, 768]],
            7701: [[275, 768]],
            7702: [[274, 769]],
            7703: [[275, 769]],
            7704: [[69, 813]],
            7705: [[101, 813]],
            7706: [[69, 816]],
            7707: [[101, 816]],
            7708: [[552, 774]],
            7709: [[553, 774]],
            7710: [[70, 775]],
            7711: [[102, 775]],
            7712: [[71, 772]],
            7713: [[103, 772]],
            7714: [[72, 775]],
            7715: [[104, 775]],
            7716: [[72, 803]],
            7717: [[104, 803]],
            7718: [[72, 776]],
            7719: [[104, 776]],
            7720: [[72, 807]],
            7721: [[104, 807]],
            7722: [[72, 814]],
            7723: [[104, 814]],
            7724: [[73, 816]],
            7725: [[105, 816]],
            7726: [[207, 769]],
            7727: [[239, 769]],
            7728: [[75, 769]],
            7729: [[107, 769]],
            7730: [[75, 803]],
            7731: [[107, 803]],
            7732: [[75, 817]],
            7733: [[107, 817]],
            7734: [[76, 803], , { 772: 7736 }],
            7735: [[108, 803], , { 772: 7737 }],
            7736: [[7734, 772]],
            7737: [[7735, 772]],
            7738: [[76, 817]],
            7739: [[108, 817]],
            7740: [[76, 813]],
            7741: [[108, 813]],
            7742: [[77, 769]],
            7743: [[109, 769]],
            7744: [[77, 775]],
            7745: [[109, 775]],
            7746: [[77, 803]],
            7747: [[109, 803]],
            7748: [[78, 775]],
            7749: [[110, 775]],
            7750: [[78, 803]],
            7751: [[110, 803]],
            7752: [[78, 817]],
            7753: [[110, 817]],
            7754: [[78, 813]],
            7755: [[110, 813]],
            7756: [[213, 769]],
            7757: [[245, 769]],
            7758: [[213, 776]],
            7759: [[245, 776]],
            7760: [[332, 768]],
            7761: [[333, 768]],
            7762: [[332, 769]],
            7763: [[333, 769]],
            7764: [[80, 769]],
            7765: [[112, 769]],
            7766: [[80, 775]],
            7767: [[112, 775]],
            7768: [[82, 775]],
            7769: [[114, 775]],
            7770: [[82, 803], , { 772: 7772 }],
            7771: [[114, 803], , { 772: 7773 }],
            7772: [[7770, 772]],
            7773: [[7771, 772]],
            7774: [[82, 817]],
            7775: [[114, 817]],
            7776: [[83, 775]],
            7777: [[115, 775]],
            7778: [[83, 803], , { 775: 7784 }],
            7779: [[115, 803], , { 775: 7785 }],
            7780: [[346, 775]],
            7781: [[347, 775]],
            7782: [[352, 775]],
            7783: [[353, 775]],
            7784: [[7778, 775]],
            7785: [[7779, 775]],
            7786: [[84, 775]],
            7787: [[116, 775]],
            7788: [[84, 803]],
            7789: [[116, 803]],
            7790: [[84, 817]],
            7791: [[116, 817]],
            7792: [[84, 813]],
            7793: [[116, 813]],
            7794: [[85, 804]],
            7795: [[117, 804]],
            7796: [[85, 816]],
            7797: [[117, 816]],
            7798: [[85, 813]],
            7799: [[117, 813]],
            7800: [[360, 769]],
            7801: [[361, 769]],
            7802: [[362, 776]],
            7803: [[363, 776]],
            7804: [[86, 771]],
            7805: [[118, 771]],
            7806: [[86, 803]],
            7807: [[118, 803]],
            7808: [[87, 768]],
            7809: [[119, 768]],
            7810: [[87, 769]],
            7811: [[119, 769]],
            7812: [[87, 776]],
            7813: [[119, 776]],
            7814: [[87, 775]],
            7815: [[119, 775]],
            7816: [[87, 803]],
            7817: [[119, 803]],
            7818: [[88, 775]],
            7819: [[120, 775]],
            7820: [[88, 776]],
            7821: [[120, 776]],
            7822: [[89, 775]],
            7823: [[121, 775]],
            7824: [[90, 770]],
            7825: [[122, 770]],
            7826: [[90, 803]],
            7827: [[122, 803]],
            7828: [[90, 817]],
            7829: [[122, 817]],
            7830: [[104, 817]],
            7831: [[116, 776]],
            7832: [[119, 778]],
            7833: [[121, 778]],
            7834: [[97, 702], 256],
            7835: [[383, 775]],
            7840: [[65, 803], , { 770: 7852, 774: 7862 }],
            7841: [[97, 803], , { 770: 7853, 774: 7863 }],
            7842: [[65, 777]],
            7843: [[97, 777]],
            7844: [[194, 769]],
            7845: [[226, 769]],
            7846: [[194, 768]],
            7847: [[226, 768]],
            7848: [[194, 777]],
            7849: [[226, 777]],
            7850: [[194, 771]],
            7851: [[226, 771]],
            7852: [[7840, 770]],
            7853: [[7841, 770]],
            7854: [[258, 769]],
            7855: [[259, 769]],
            7856: [[258, 768]],
            7857: [[259, 768]],
            7858: [[258, 777]],
            7859: [[259, 777]],
            7860: [[258, 771]],
            7861: [[259, 771]],
            7862: [[7840, 774]],
            7863: [[7841, 774]],
            7864: [[69, 803], , { 770: 7878 }],
            7865: [[101, 803], , { 770: 7879 }],
            7866: [[69, 777]],
            7867: [[101, 777]],
            7868: [[69, 771]],
            7869: [[101, 771]],
            7870: [[202, 769]],
            7871: [[234, 769]],
            7872: [[202, 768]],
            7873: [[234, 768]],
            7874: [[202, 777]],
            7875: [[234, 777]],
            7876: [[202, 771]],
            7877: [[234, 771]],
            7878: [[7864, 770]],
            7879: [[7865, 770]],
            7880: [[73, 777]],
            7881: [[105, 777]],
            7882: [[73, 803]],
            7883: [[105, 803]],
            7884: [[79, 803], , { 770: 7896 }],
            7885: [[111, 803], , { 770: 7897 }],
            7886: [[79, 777]],
            7887: [[111, 777]],
            7888: [[212, 769]],
            7889: [[244, 769]],
            7890: [[212, 768]],
            7891: [[244, 768]],
            7892: [[212, 777]],
            7893: [[244, 777]],
            7894: [[212, 771]],
            7895: [[244, 771]],
            7896: [[7884, 770]],
            7897: [[7885, 770]],
            7898: [[416, 769]],
            7899: [[417, 769]],
            7900: [[416, 768]],
            7901: [[417, 768]],
            7902: [[416, 777]],
            7903: [[417, 777]],
            7904: [[416, 771]],
            7905: [[417, 771]],
            7906: [[416, 803]],
            7907: [[417, 803]],
            7908: [[85, 803]],
            7909: [[117, 803]],
            7910: [[85, 777]],
            7911: [[117, 777]],
            7912: [[431, 769]],
            7913: [[432, 769]],
            7914: [[431, 768]],
            7915: [[432, 768]],
            7916: [[431, 777]],
            7917: [[432, 777]],
            7918: [[431, 771]],
            7919: [[432, 771]],
            7920: [[431, 803]],
            7921: [[432, 803]],
            7922: [[89, 768]],
            7923: [[121, 768]],
            7924: [[89, 803]],
            7925: [[121, 803]],
            7926: [[89, 777]],
            7927: [[121, 777]],
            7928: [[89, 771]],
            7929: [[121, 771]],
          },
          7936: {
            7936: [
              [945, 787],
              ,
              { 768: 7938, 769: 7940, 834: 7942, 837: 8064 },
            ],
            7937: [
              [945, 788],
              ,
              { 768: 7939, 769: 7941, 834: 7943, 837: 8065 },
            ],
            7938: [[7936, 768], , { 837: 8066 }],
            7939: [[7937, 768], , { 837: 8067 }],
            7940: [[7936, 769], , { 837: 8068 }],
            7941: [[7937, 769], , { 837: 8069 }],
            7942: [[7936, 834], , { 837: 8070 }],
            7943: [[7937, 834], , { 837: 8071 }],
            7944: [
              [913, 787],
              ,
              { 768: 7946, 769: 7948, 834: 7950, 837: 8072 },
            ],
            7945: [
              [913, 788],
              ,
              { 768: 7947, 769: 7949, 834: 7951, 837: 8073 },
            ],
            7946: [[7944, 768], , { 837: 8074 }],
            7947: [[7945, 768], , { 837: 8075 }],
            7948: [[7944, 769], , { 837: 8076 }],
            7949: [[7945, 769], , { 837: 8077 }],
            7950: [[7944, 834], , { 837: 8078 }],
            7951: [[7945, 834], , { 837: 8079 }],
            7952: [[949, 787], , { 768: 7954, 769: 7956 }],
            7953: [[949, 788], , { 768: 7955, 769: 7957 }],
            7954: [[7952, 768]],
            7955: [[7953, 768]],
            7956: [[7952, 769]],
            7957: [[7953, 769]],
            7960: [[917, 787], , { 768: 7962, 769: 7964 }],
            7961: [[917, 788], , { 768: 7963, 769: 7965 }],
            7962: [[7960, 768]],
            7963: [[7961, 768]],
            7964: [[7960, 769]],
            7965: [[7961, 769]],
            7968: [
              [951, 787],
              ,
              { 768: 7970, 769: 7972, 834: 7974, 837: 8080 },
            ],
            7969: [
              [951, 788],
              ,
              { 768: 7971, 769: 7973, 834: 7975, 837: 8081 },
            ],
            7970: [[7968, 768], , { 837: 8082 }],
            7971: [[7969, 768], , { 837: 8083 }],
            7972: [[7968, 769], , { 837: 8084 }],
            7973: [[7969, 769], , { 837: 8085 }],
            7974: [[7968, 834], , { 837: 8086 }],
            7975: [[7969, 834], , { 837: 8087 }],
            7976: [
              [919, 787],
              ,
              { 768: 7978, 769: 7980, 834: 7982, 837: 8088 },
            ],
            7977: [
              [919, 788],
              ,
              { 768: 7979, 769: 7981, 834: 7983, 837: 8089 },
            ],
            7978: [[7976, 768], , { 837: 8090 }],
            7979: [[7977, 768], , { 837: 8091 }],
            7980: [[7976, 769], , { 837: 8092 }],
            7981: [[7977, 769], , { 837: 8093 }],
            7982: [[7976, 834], , { 837: 8094 }],
            7983: [[7977, 834], , { 837: 8095 }],
            7984: [[953, 787], , { 768: 7986, 769: 7988, 834: 7990 }],
            7985: [[953, 788], , { 768: 7987, 769: 7989, 834: 7991 }],
            7986: [[7984, 768]],
            7987: [[7985, 768]],
            7988: [[7984, 769]],
            7989: [[7985, 769]],
            7990: [[7984, 834]],
            7991: [[7985, 834]],
            7992: [[921, 787], , { 768: 7994, 769: 7996, 834: 7998 }],
            7993: [[921, 788], , { 768: 7995, 769: 7997, 834: 7999 }],
            7994: [[7992, 768]],
            7995: [[7993, 768]],
            7996: [[7992, 769]],
            7997: [[7993, 769]],
            7998: [[7992, 834]],
            7999: [[7993, 834]],
            8e3: [[959, 787], , { 768: 8002, 769: 8004 }],
            8001: [[959, 788], , { 768: 8003, 769: 8005 }],
            8002: [[8e3, 768]],
            8003: [[8001, 768]],
            8004: [[8e3, 769]],
            8005: [[8001, 769]],
            8008: [[927, 787], , { 768: 8010, 769: 8012 }],
            8009: [[927, 788], , { 768: 8011, 769: 8013 }],
            8010: [[8008, 768]],
            8011: [[8009, 768]],
            8012: [[8008, 769]],
            8013: [[8009, 769]],
            8016: [[965, 787], , { 768: 8018, 769: 8020, 834: 8022 }],
            8017: [[965, 788], , { 768: 8019, 769: 8021, 834: 8023 }],
            8018: [[8016, 768]],
            8019: [[8017, 768]],
            8020: [[8016, 769]],
            8021: [[8017, 769]],
            8022: [[8016, 834]],
            8023: [[8017, 834]],
            8025: [[933, 788], , { 768: 8027, 769: 8029, 834: 8031 }],
            8027: [[8025, 768]],
            8029: [[8025, 769]],
            8031: [[8025, 834]],
            8032: [
              [969, 787],
              ,
              { 768: 8034, 769: 8036, 834: 8038, 837: 8096 },
            ],
            8033: [
              [969, 788],
              ,
              { 768: 8035, 769: 8037, 834: 8039, 837: 8097 },
            ],
            8034: [[8032, 768], , { 837: 8098 }],
            8035: [[8033, 768], , { 837: 8099 }],
            8036: [[8032, 769], , { 837: 8100 }],
            8037: [[8033, 769], , { 837: 8101 }],
            8038: [[8032, 834], , { 837: 8102 }],
            8039: [[8033, 834], , { 837: 8103 }],
            8040: [
              [937, 787],
              ,
              { 768: 8042, 769: 8044, 834: 8046, 837: 8104 },
            ],
            8041: [
              [937, 788],
              ,
              { 768: 8043, 769: 8045, 834: 8047, 837: 8105 },
            ],
            8042: [[8040, 768], , { 837: 8106 }],
            8043: [[8041, 768], , { 837: 8107 }],
            8044: [[8040, 769], , { 837: 8108 }],
            8045: [[8041, 769], , { 837: 8109 }],
            8046: [[8040, 834], , { 837: 8110 }],
            8047: [[8041, 834], , { 837: 8111 }],
            8048: [[945, 768], , { 837: 8114 }],
            8049: [[940]],
            8050: [[949, 768]],
            8051: [[941]],
            8052: [[951, 768], , { 837: 8130 }],
            8053: [[942]],
            8054: [[953, 768]],
            8055: [[943]],
            8056: [[959, 768]],
            8057: [[972]],
            8058: [[965, 768]],
            8059: [[973]],
            8060: [[969, 768], , { 837: 8178 }],
            8061: [[974]],
            8064: [[7936, 837]],
            8065: [[7937, 837]],
            8066: [[7938, 837]],
            8067: [[7939, 837]],
            8068: [[7940, 837]],
            8069: [[7941, 837]],
            8070: [[7942, 837]],
            8071: [[7943, 837]],
            8072: [[7944, 837]],
            8073: [[7945, 837]],
            8074: [[7946, 837]],
            8075: [[7947, 837]],
            8076: [[7948, 837]],
            8077: [[7949, 837]],
            8078: [[7950, 837]],
            8079: [[7951, 837]],
            8080: [[7968, 837]],
            8081: [[7969, 837]],
            8082: [[7970, 837]],
            8083: [[7971, 837]],
            8084: [[7972, 837]],
            8085: [[7973, 837]],
            8086: [[7974, 837]],
            8087: [[7975, 837]],
            8088: [[7976, 837]],
            8089: [[7977, 837]],
            8090: [[7978, 837]],
            8091: [[7979, 837]],
            8092: [[7980, 837]],
            8093: [[7981, 837]],
            8094: [[7982, 837]],
            8095: [[7983, 837]],
            8096: [[8032, 837]],
            8097: [[8033, 837]],
            8098: [[8034, 837]],
            8099: [[8035, 837]],
            8100: [[8036, 837]],
            8101: [[8037, 837]],
            8102: [[8038, 837]],
            8103: [[8039, 837]],
            8104: [[8040, 837]],
            8105: [[8041, 837]],
            8106: [[8042, 837]],
            8107: [[8043, 837]],
            8108: [[8044, 837]],
            8109: [[8045, 837]],
            8110: [[8046, 837]],
            8111: [[8047, 837]],
            8112: [[945, 774]],
            8113: [[945, 772]],
            8114: [[8048, 837]],
            8115: [[945, 837]],
            8116: [[940, 837]],
            8118: [[945, 834], , { 837: 8119 }],
            8119: [[8118, 837]],
            8120: [[913, 774]],
            8121: [[913, 772]],
            8122: [[913, 768]],
            8123: [[902]],
            8124: [[913, 837]],
            8125: [[32, 787], 256],
            8126: [[953]],
            8127: [[32, 787], 256, { 768: 8141, 769: 8142, 834: 8143 }],
            8128: [[32, 834], 256],
            8129: [[168, 834]],
            8130: [[8052, 837]],
            8131: [[951, 837]],
            8132: [[942, 837]],
            8134: [[951, 834], , { 837: 8135 }],
            8135: [[8134, 837]],
            8136: [[917, 768]],
            8137: [[904]],
            8138: [[919, 768]],
            8139: [[905]],
            8140: [[919, 837]],
            8141: [[8127, 768]],
            8142: [[8127, 769]],
            8143: [[8127, 834]],
            8144: [[953, 774]],
            8145: [[953, 772]],
            8146: [[970, 768]],
            8147: [[912]],
            8150: [[953, 834]],
            8151: [[970, 834]],
            8152: [[921, 774]],
            8153: [[921, 772]],
            8154: [[921, 768]],
            8155: [[906]],
            8157: [[8190, 768]],
            8158: [[8190, 769]],
            8159: [[8190, 834]],
            8160: [[965, 774]],
            8161: [[965, 772]],
            8162: [[971, 768]],
            8163: [[944]],
            8164: [[961, 787]],
            8165: [[961, 788]],
            8166: [[965, 834]],
            8167: [[971, 834]],
            8168: [[933, 774]],
            8169: [[933, 772]],
            8170: [[933, 768]],
            8171: [[910]],
            8172: [[929, 788]],
            8173: [[168, 768]],
            8174: [[901]],
            8175: [[96]],
            8178: [[8060, 837]],
            8179: [[969, 837]],
            8180: [[974, 837]],
            8182: [[969, 834], , { 837: 8183 }],
            8183: [[8182, 837]],
            8184: [[927, 768]],
            8185: [[908]],
            8186: [[937, 768]],
            8187: [[911]],
            8188: [[937, 837]],
            8189: [[180]],
            8190: [[32, 788], 256, { 768: 8157, 769: 8158, 834: 8159 }],
          },
          8192: {
            8192: [[8194]],
            8193: [[8195]],
            8194: [[32], 256],
            8195: [[32], 256],
            8196: [[32], 256],
            8197: [[32], 256],
            8198: [[32], 256],
            8199: [[32], 256],
            8200: [[32], 256],
            8201: [[32], 256],
            8202: [[32], 256],
            8209: [[8208], 256],
            8215: [[32, 819], 256],
            8228: [[46], 256],
            8229: [[46, 46], 256],
            8230: [[46, 46, 46], 256],
            8239: [[32], 256],
            8243: [[8242, 8242], 256],
            8244: [[8242, 8242, 8242], 256],
            8246: [[8245, 8245], 256],
            8247: [[8245, 8245, 8245], 256],
            8252: [[33, 33], 256],
            8254: [[32, 773], 256],
            8263: [[63, 63], 256],
            8264: [[63, 33], 256],
            8265: [[33, 63], 256],
            8279: [[8242, 8242, 8242, 8242], 256],
            8287: [[32], 256],
            8304: [[48], 256],
            8305: [[105], 256],
            8308: [[52], 256],
            8309: [[53], 256],
            8310: [[54], 256],
            8311: [[55], 256],
            8312: [[56], 256],
            8313: [[57], 256],
            8314: [[43], 256],
            8315: [[8722], 256],
            8316: [[61], 256],
            8317: [[40], 256],
            8318: [[41], 256],
            8319: [[110], 256],
            8320: [[48], 256],
            8321: [[49], 256],
            8322: [[50], 256],
            8323: [[51], 256],
            8324: [[52], 256],
            8325: [[53], 256],
            8326: [[54], 256],
            8327: [[55], 256],
            8328: [[56], 256],
            8329: [[57], 256],
            8330: [[43], 256],
            8331: [[8722], 256],
            8332: [[61], 256],
            8333: [[40], 256],
            8334: [[41], 256],
            8336: [[97], 256],
            8337: [[101], 256],
            8338: [[111], 256],
            8339: [[120], 256],
            8340: [[601], 256],
            8341: [[104], 256],
            8342: [[107], 256],
            8343: [[108], 256],
            8344: [[109], 256],
            8345: [[110], 256],
            8346: [[112], 256],
            8347: [[115], 256],
            8348: [[116], 256],
            8360: [[82, 115], 256],
            8400: [, 230],
            8401: [, 230],
            8402: [, 1],
            8403: [, 1],
            8404: [, 230],
            8405: [, 230],
            8406: [, 230],
            8407: [, 230],
            8408: [, 1],
            8409: [, 1],
            8410: [, 1],
            8411: [, 230],
            8412: [, 230],
            8417: [, 230],
            8421: [, 1],
            8422: [, 1],
            8423: [, 230],
            8424: [, 220],
            8425: [, 230],
            8426: [, 1],
            8427: [, 1],
            8428: [, 220],
            8429: [, 220],
            8430: [, 220],
            8431: [, 220],
            8432: [, 230],
          },
          8448: {
            8448: [[97, 47, 99], 256],
            8449: [[97, 47, 115], 256],
            8450: [[67], 256],
            8451: [[176, 67], 256],
            8453: [[99, 47, 111], 256],
            8454: [[99, 47, 117], 256],
            8455: [[400], 256],
            8457: [[176, 70], 256],
            8458: [[103], 256],
            8459: [[72], 256],
            8460: [[72], 256],
            8461: [[72], 256],
            8462: [[104], 256],
            8463: [[295], 256],
            8464: [[73], 256],
            8465: [[73], 256],
            8466: [[76], 256],
            8467: [[108], 256],
            8469: [[78], 256],
            8470: [[78, 111], 256],
            8473: [[80], 256],
            8474: [[81], 256],
            8475: [[82], 256],
            8476: [[82], 256],
            8477: [[82], 256],
            8480: [[83, 77], 256],
            8481: [[84, 69, 76], 256],
            8482: [[84, 77], 256],
            8484: [[90], 256],
            8486: [[937]],
            8488: [[90], 256],
            8490: [[75]],
            8491: [[197]],
            8492: [[66], 256],
            8493: [[67], 256],
            8495: [[101], 256],
            8496: [[69], 256],
            8497: [[70], 256],
            8499: [[77], 256],
            8500: [[111], 256],
            8501: [[1488], 256],
            8502: [[1489], 256],
            8503: [[1490], 256],
            8504: [[1491], 256],
            8505: [[105], 256],
            8507: [[70, 65, 88], 256],
            8508: [[960], 256],
            8509: [[947], 256],
            8510: [[915], 256],
            8511: [[928], 256],
            8512: [[8721], 256],
            8517: [[68], 256],
            8518: [[100], 256],
            8519: [[101], 256],
            8520: [[105], 256],
            8521: [[106], 256],
            8528: [[49, 8260, 55], 256],
            8529: [[49, 8260, 57], 256],
            8530: [[49, 8260, 49, 48], 256],
            8531: [[49, 8260, 51], 256],
            8532: [[50, 8260, 51], 256],
            8533: [[49, 8260, 53], 256],
            8534: [[50, 8260, 53], 256],
            8535: [[51, 8260, 53], 256],
            8536: [[52, 8260, 53], 256],
            8537: [[49, 8260, 54], 256],
            8538: [[53, 8260, 54], 256],
            8539: [[49, 8260, 56], 256],
            8540: [[51, 8260, 56], 256],
            8541: [[53, 8260, 56], 256],
            8542: [[55, 8260, 56], 256],
            8543: [[49, 8260], 256],
            8544: [[73], 256],
            8545: [[73, 73], 256],
            8546: [[73, 73, 73], 256],
            8547: [[73, 86], 256],
            8548: [[86], 256],
            8549: [[86, 73], 256],
            8550: [[86, 73, 73], 256],
            8551: [[86, 73, 73, 73], 256],
            8552: [[73, 88], 256],
            8553: [[88], 256],
            8554: [[88, 73], 256],
            8555: [[88, 73, 73], 256],
            8556: [[76], 256],
            8557: [[67], 256],
            8558: [[68], 256],
            8559: [[77], 256],
            8560: [[105], 256],
            8561: [[105, 105], 256],
            8562: [[105, 105, 105], 256],
            8563: [[105, 118], 256],
            8564: [[118], 256],
            8565: [[118, 105], 256],
            8566: [[118, 105, 105], 256],
            8567: [[118, 105, 105, 105], 256],
            8568: [[105, 120], 256],
            8569: [[120], 256],
            8570: [[120, 105], 256],
            8571: [[120, 105, 105], 256],
            8572: [[108], 256],
            8573: [[99], 256],
            8574: [[100], 256],
            8575: [[109], 256],
            8585: [[48, 8260, 51], 256],
            8592: [, , { 824: 8602 }],
            8594: [, , { 824: 8603 }],
            8596: [, , { 824: 8622 }],
            8602: [[8592, 824]],
            8603: [[8594, 824]],
            8622: [[8596, 824]],
            8653: [[8656, 824]],
            8654: [[8660, 824]],
            8655: [[8658, 824]],
            8656: [, , { 824: 8653 }],
            8658: [, , { 824: 8655 }],
            8660: [, , { 824: 8654 }],
          },
          8704: {
            8707: [, , { 824: 8708 }],
            8708: [[8707, 824]],
            8712: [, , { 824: 8713 }],
            8713: [[8712, 824]],
            8715: [, , { 824: 8716 }],
            8716: [[8715, 824]],
            8739: [, , { 824: 8740 }],
            8740: [[8739, 824]],
            8741: [, , { 824: 8742 }],
            8742: [[8741, 824]],
            8748: [[8747, 8747], 256],
            8749: [[8747, 8747, 8747], 256],
            8751: [[8750, 8750], 256],
            8752: [[8750, 8750, 8750], 256],
            8764: [, , { 824: 8769 }],
            8769: [[8764, 824]],
            8771: [, , { 824: 8772 }],
            8772: [[8771, 824]],
            8773: [, , { 824: 8775 }],
            8775: [[8773, 824]],
            8776: [, , { 824: 8777 }],
            8777: [[8776, 824]],
            8781: [, , { 824: 8813 }],
            8800: [[61, 824]],
            8801: [, , { 824: 8802 }],
            8802: [[8801, 824]],
            8804: [, , { 824: 8816 }],
            8805: [, , { 824: 8817 }],
            8813: [[8781, 824]],
            8814: [[60, 824]],
            8815: [[62, 824]],
            8816: [[8804, 824]],
            8817: [[8805, 824]],
            8818: [, , { 824: 8820 }],
            8819: [, , { 824: 8821 }],
            8820: [[8818, 824]],
            8821: [[8819, 824]],
            8822: [, , { 824: 8824 }],
            8823: [, , { 824: 8825 }],
            8824: [[8822, 824]],
            8825: [[8823, 824]],
            8826: [, , { 824: 8832 }],
            8827: [, , { 824: 8833 }],
            8828: [, , { 824: 8928 }],
            8829: [, , { 824: 8929 }],
            8832: [[8826, 824]],
            8833: [[8827, 824]],
            8834: [, , { 824: 8836 }],
            8835: [, , { 824: 8837 }],
            8836: [[8834, 824]],
            8837: [[8835, 824]],
            8838: [, , { 824: 8840 }],
            8839: [, , { 824: 8841 }],
            8840: [[8838, 824]],
            8841: [[8839, 824]],
            8849: [, , { 824: 8930 }],
            8850: [, , { 824: 8931 }],
            8866: [, , { 824: 8876 }],
            8872: [, , { 824: 8877 }],
            8873: [, , { 824: 8878 }],
            8875: [, , { 824: 8879 }],
            8876: [[8866, 824]],
            8877: [[8872, 824]],
            8878: [[8873, 824]],
            8879: [[8875, 824]],
            8882: [, , { 824: 8938 }],
            8883: [, , { 824: 8939 }],
            8884: [, , { 824: 8940 }],
            8885: [, , { 824: 8941 }],
            8928: [[8828, 824]],
            8929: [[8829, 824]],
            8930: [[8849, 824]],
            8931: [[8850, 824]],
            8938: [[8882, 824]],
            8939: [[8883, 824]],
            8940: [[8884, 824]],
            8941: [[8885, 824]],
          },
          8960: { 9001: [[12296]], 9002: [[12297]] },
          9216: {
            9312: [[49], 256],
            9313: [[50], 256],
            9314: [[51], 256],
            9315: [[52], 256],
            9316: [[53], 256],
            9317: [[54], 256],
            9318: [[55], 256],
            9319: [[56], 256],
            9320: [[57], 256],
            9321: [[49, 48], 256],
            9322: [[49, 49], 256],
            9323: [[49, 50], 256],
            9324: [[49, 51], 256],
            9325: [[49, 52], 256],
            9326: [[49, 53], 256],
            9327: [[49, 54], 256],
            9328: [[49, 55], 256],
            9329: [[49, 56], 256],
            9330: [[49, 57], 256],
            9331: [[50, 48], 256],
            9332: [[40, 49, 41], 256],
            9333: [[40, 50, 41], 256],
            9334: [[40, 51, 41], 256],
            9335: [[40, 52, 41], 256],
            9336: [[40, 53, 41], 256],
            9337: [[40, 54, 41], 256],
            9338: [[40, 55, 41], 256],
            9339: [[40, 56, 41], 256],
            9340: [[40, 57, 41], 256],
            9341: [[40, 49, 48, 41], 256],
            9342: [[40, 49, 49, 41], 256],
            9343: [[40, 49, 50, 41], 256],
            9344: [[40, 49, 51, 41], 256],
            9345: [[40, 49, 52, 41], 256],
            9346: [[40, 49, 53, 41], 256],
            9347: [[40, 49, 54, 41], 256],
            9348: [[40, 49, 55, 41], 256],
            9349: [[40, 49, 56, 41], 256],
            9350: [[40, 49, 57, 41], 256],
            9351: [[40, 50, 48, 41], 256],
            9352: [[49, 46], 256],
            9353: [[50, 46], 256],
            9354: [[51, 46], 256],
            9355: [[52, 46], 256],
            9356: [[53, 46], 256],
            9357: [[54, 46], 256],
            9358: [[55, 46], 256],
            9359: [[56, 46], 256],
            9360: [[57, 46], 256],
            9361: [[49, 48, 46], 256],
            9362: [[49, 49, 46], 256],
            9363: [[49, 50, 46], 256],
            9364: [[49, 51, 46], 256],
            9365: [[49, 52, 46], 256],
            9366: [[49, 53, 46], 256],
            9367: [[49, 54, 46], 256],
            9368: [[49, 55, 46], 256],
            9369: [[49, 56, 46], 256],
            9370: [[49, 57, 46], 256],
            9371: [[50, 48, 46], 256],
            9372: [[40, 97, 41], 256],
            9373: [[40, 98, 41], 256],
            9374: [[40, 99, 41], 256],
            9375: [[40, 100, 41], 256],
            9376: [[40, 101, 41], 256],
            9377: [[40, 102, 41], 256],
            9378: [[40, 103, 41], 256],
            9379: [[40, 104, 41], 256],
            9380: [[40, 105, 41], 256],
            9381: [[40, 106, 41], 256],
            9382: [[40, 107, 41], 256],
            9383: [[40, 108, 41], 256],
            9384: [[40, 109, 41], 256],
            9385: [[40, 110, 41], 256],
            9386: [[40, 111, 41], 256],
            9387: [[40, 112, 41], 256],
            9388: [[40, 113, 41], 256],
            9389: [[40, 114, 41], 256],
            9390: [[40, 115, 41], 256],
            9391: [[40, 116, 41], 256],
            9392: [[40, 117, 41], 256],
            9393: [[40, 118, 41], 256],
            9394: [[40, 119, 41], 256],
            9395: [[40, 120, 41], 256],
            9396: [[40, 121, 41], 256],
            9397: [[40, 122, 41], 256],
            9398: [[65], 256],
            9399: [[66], 256],
            9400: [[67], 256],
            9401: [[68], 256],
            9402: [[69], 256],
            9403: [[70], 256],
            9404: [[71], 256],
            9405: [[72], 256],
            9406: [[73], 256],
            9407: [[74], 256],
            9408: [[75], 256],
            9409: [[76], 256],
            9410: [[77], 256],
            9411: [[78], 256],
            9412: [[79], 256],
            9413: [[80], 256],
            9414: [[81], 256],
            9415: [[82], 256],
            9416: [[83], 256],
            9417: [[84], 256],
            9418: [[85], 256],
            9419: [[86], 256],
            9420: [[87], 256],
            9421: [[88], 256],
            9422: [[89], 256],
            9423: [[90], 256],
            9424: [[97], 256],
            9425: [[98], 256],
            9426: [[99], 256],
            9427: [[100], 256],
            9428: [[101], 256],
            9429: [[102], 256],
            9430: [[103], 256],
            9431: [[104], 256],
            9432: [[105], 256],
            9433: [[106], 256],
            9434: [[107], 256],
            9435: [[108], 256],
            9436: [[109], 256],
            9437: [[110], 256],
            9438: [[111], 256],
            9439: [[112], 256],
            9440: [[113], 256],
            9441: [[114], 256],
            9442: [[115], 256],
            9443: [[116], 256],
            9444: [[117], 256],
            9445: [[118], 256],
            9446: [[119], 256],
            9447: [[120], 256],
            9448: [[121], 256],
            9449: [[122], 256],
            9450: [[48], 256],
          },
          10752: {
            10764: [[8747, 8747, 8747, 8747], 256],
            10868: [[58, 58, 61], 256],
            10869: [[61, 61], 256],
            10870: [[61, 61, 61], 256],
            10972: [[10973, 824], 512],
          },
          11264: {
            11388: [[106], 256],
            11389: [[86], 256],
            11503: [, 230],
            11504: [, 230],
            11505: [, 230],
          },
          11520: {
            11631: [[11617], 256],
            11647: [, 9],
            11744: [, 230],
            11745: [, 230],
            11746: [, 230],
            11747: [, 230],
            11748: [, 230],
            11749: [, 230],
            11750: [, 230],
            11751: [, 230],
            11752: [, 230],
            11753: [, 230],
            11754: [, 230],
            11755: [, 230],
            11756: [, 230],
            11757: [, 230],
            11758: [, 230],
            11759: [, 230],
            11760: [, 230],
            11761: [, 230],
            11762: [, 230],
            11763: [, 230],
            11764: [, 230],
            11765: [, 230],
            11766: [, 230],
            11767: [, 230],
            11768: [, 230],
            11769: [, 230],
            11770: [, 230],
            11771: [, 230],
            11772: [, 230],
            11773: [, 230],
            11774: [, 230],
            11775: [, 230],
          },
          11776: { 11935: [[27597], 256], 12019: [[40863], 256] },
          12032: {
            12032: [[19968], 256],
            12033: [[20008], 256],
            12034: [[20022], 256],
            12035: [[20031], 256],
            12036: [[20057], 256],
            12037: [[20101], 256],
            12038: [[20108], 256],
            12039: [[20128], 256],
            12040: [[20154], 256],
            12041: [[20799], 256],
            12042: [[20837], 256],
            12043: [[20843], 256],
            12044: [[20866], 256],
            12045: [[20886], 256],
            12046: [[20907], 256],
            12047: [[20960], 256],
            12048: [[20981], 256],
            12049: [[20992], 256],
            12050: [[21147], 256],
            12051: [[21241], 256],
            12052: [[21269], 256],
            12053: [[21274], 256],
            12054: [[21304], 256],
            12055: [[21313], 256],
            12056: [[21340], 256],
            12057: [[21353], 256],
            12058: [[21378], 256],
            12059: [[21430], 256],
            12060: [[21448], 256],
            12061: [[21475], 256],
            12062: [[22231], 256],
            12063: [[22303], 256],
            12064: [[22763], 256],
            12065: [[22786], 256],
            12066: [[22794], 256],
            12067: [[22805], 256],
            12068: [[22823], 256],
            12069: [[22899], 256],
            12070: [[23376], 256],
            12071: [[23424], 256],
            12072: [[23544], 256],
            12073: [[23567], 256],
            12074: [[23586], 256],
            12075: [[23608], 256],
            12076: [[23662], 256],
            12077: [[23665], 256],
            12078: [[24027], 256],
            12079: [[24037], 256],
            12080: [[24049], 256],
            12081: [[24062], 256],
            12082: [[24178], 256],
            12083: [[24186], 256],
            12084: [[24191], 256],
            12085: [[24308], 256],
            12086: [[24318], 256],
            12087: [[24331], 256],
            12088: [[24339], 256],
            12089: [[24400], 256],
            12090: [[24417], 256],
            12091: [[24435], 256],
            12092: [[24515], 256],
            12093: [[25096], 256],
            12094: [[25142], 256],
            12095: [[25163], 256],
            12096: [[25903], 256],
            12097: [[25908], 256],
            12098: [[25991], 256],
            12099: [[26007], 256],
            12100: [[26020], 256],
            12101: [[26041], 256],
            12102: [[26080], 256],
            12103: [[26085], 256],
            12104: [[26352], 256],
            12105: [[26376], 256],
            12106: [[26408], 256],
            12107: [[27424], 256],
            12108: [[27490], 256],
            12109: [[27513], 256],
            12110: [[27571], 256],
            12111: [[27595], 256],
            12112: [[27604], 256],
            12113: [[27611], 256],
            12114: [[27663], 256],
            12115: [[27668], 256],
            12116: [[27700], 256],
            12117: [[28779], 256],
            12118: [[29226], 256],
            12119: [[29238], 256],
            12120: [[29243], 256],
            12121: [[29247], 256],
            12122: [[29255], 256],
            12123: [[29273], 256],
            12124: [[29275], 256],
            12125: [[29356], 256],
            12126: [[29572], 256],
            12127: [[29577], 256],
            12128: [[29916], 256],
            12129: [[29926], 256],
            12130: [[29976], 256],
            12131: [[29983], 256],
            12132: [[29992], 256],
            12133: [[3e4], 256],
            12134: [[30091], 256],
            12135: [[30098], 256],
            12136: [[30326], 256],
            12137: [[30333], 256],
            12138: [[30382], 256],
            12139: [[30399], 256],
            12140: [[30446], 256],
            12141: [[30683], 256],
            12142: [[30690], 256],
            12143: [[30707], 256],
            12144: [[31034], 256],
            12145: [[31160], 256],
            12146: [[31166], 256],
            12147: [[31348], 256],
            12148: [[31435], 256],
            12149: [[31481], 256],
            12150: [[31859], 256],
            12151: [[31992], 256],
            12152: [[32566], 256],
            12153: [[32593], 256],
            12154: [[32650], 256],
            12155: [[32701], 256],
            12156: [[32769], 256],
            12157: [[32780], 256],
            12158: [[32786], 256],
            12159: [[32819], 256],
            12160: [[32895], 256],
            12161: [[32905], 256],
            12162: [[33251], 256],
            12163: [[33258], 256],
            12164: [[33267], 256],
            12165: [[33276], 256],
            12166: [[33292], 256],
            12167: [[33307], 256],
            12168: [[33311], 256],
            12169: [[33390], 256],
            12170: [[33394], 256],
            12171: [[33400], 256],
            12172: [[34381], 256],
            12173: [[34411], 256],
            12174: [[34880], 256],
            12175: [[34892], 256],
            12176: [[34915], 256],
            12177: [[35198], 256],
            12178: [[35211], 256],
            12179: [[35282], 256],
            12180: [[35328], 256],
            12181: [[35895], 256],
            12182: [[35910], 256],
            12183: [[35925], 256],
            12184: [[35960], 256],
            12185: [[35997], 256],
            12186: [[36196], 256],
            12187: [[36208], 256],
            12188: [[36275], 256],
            12189: [[36523], 256],
            12190: [[36554], 256],
            12191: [[36763], 256],
            12192: [[36784], 256],
            12193: [[36789], 256],
            12194: [[37009], 256],
            12195: [[37193], 256],
            12196: [[37318], 256],
            12197: [[37324], 256],
            12198: [[37329], 256],
            12199: [[38263], 256],
            12200: [[38272], 256],
            12201: [[38428], 256],
            12202: [[38582], 256],
            12203: [[38585], 256],
            12204: [[38632], 256],
            12205: [[38737], 256],
            12206: [[38750], 256],
            12207: [[38754], 256],
            12208: [[38761], 256],
            12209: [[38859], 256],
            12210: [[38893], 256],
            12211: [[38899], 256],
            12212: [[38913], 256],
            12213: [[39080], 256],
            12214: [[39131], 256],
            12215: [[39135], 256],
            12216: [[39318], 256],
            12217: [[39321], 256],
            12218: [[39340], 256],
            12219: [[39592], 256],
            12220: [[39640], 256],
            12221: [[39647], 256],
            12222: [[39717], 256],
            12223: [[39727], 256],
            12224: [[39730], 256],
            12225: [[39740], 256],
            12226: [[39770], 256],
            12227: [[40165], 256],
            12228: [[40565], 256],
            12229: [[40575], 256],
            12230: [[40613], 256],
            12231: [[40635], 256],
            12232: [[40643], 256],
            12233: [[40653], 256],
            12234: [[40657], 256],
            12235: [[40697], 256],
            12236: [[40701], 256],
            12237: [[40718], 256],
            12238: [[40723], 256],
            12239: [[40736], 256],
            12240: [[40763], 256],
            12241: [[40778], 256],
            12242: [[40786], 256],
            12243: [[40845], 256],
            12244: [[40860], 256],
            12245: [[40864], 256],
          },
          12288: {
            12288: [[32], 256],
            12330: [, 218],
            12331: [, 228],
            12332: [, 232],
            12333: [, 222],
            12334: [, 224],
            12335: [, 224],
            12342: [[12306], 256],
            12344: [[21313], 256],
            12345: [[21316], 256],
            12346: [[21317], 256],
            12358: [, , { 12441: 12436 }],
            12363: [, , { 12441: 12364 }],
            12364: [[12363, 12441]],
            12365: [, , { 12441: 12366 }],
            12366: [[12365, 12441]],
            12367: [, , { 12441: 12368 }],
            12368: [[12367, 12441]],
            12369: [, , { 12441: 12370 }],
            12370: [[12369, 12441]],
            12371: [, , { 12441: 12372 }],
            12372: [[12371, 12441]],
            12373: [, , { 12441: 12374 }],
            12374: [[12373, 12441]],
            12375: [, , { 12441: 12376 }],
            12376: [[12375, 12441]],
            12377: [, , { 12441: 12378 }],
            12378: [[12377, 12441]],
            12379: [, , { 12441: 12380 }],
            12380: [[12379, 12441]],
            12381: [, , { 12441: 12382 }],
            12382: [[12381, 12441]],
            12383: [, , { 12441: 12384 }],
            12384: [[12383, 12441]],
            12385: [, , { 12441: 12386 }],
            12386: [[12385, 12441]],
            12388: [, , { 12441: 12389 }],
            12389: [[12388, 12441]],
            12390: [, , { 12441: 12391 }],
            12391: [[12390, 12441]],
            12392: [, , { 12441: 12393 }],
            12393: [[12392, 12441]],
            12399: [, , { 12441: 12400, 12442: 12401 }],
            12400: [[12399, 12441]],
            12401: [[12399, 12442]],
            12402: [, , { 12441: 12403, 12442: 12404 }],
            12403: [[12402, 12441]],
            12404: [[12402, 12442]],
            12405: [, , { 12441: 12406, 12442: 12407 }],
            12406: [[12405, 12441]],
            12407: [[12405, 12442]],
            12408: [, , { 12441: 12409, 12442: 12410 }],
            12409: [[12408, 12441]],
            12410: [[12408, 12442]],
            12411: [, , { 12441: 12412, 12442: 12413 }],
            12412: [[12411, 12441]],
            12413: [[12411, 12442]],
            12436: [[12358, 12441]],
            12441: [, 8],
            12442: [, 8],
            12443: [[32, 12441], 256],
            12444: [[32, 12442], 256],
            12445: [, , { 12441: 12446 }],
            12446: [[12445, 12441]],
            12447: [[12424, 12426], 256],
            12454: [, , { 12441: 12532 }],
            12459: [, , { 12441: 12460 }],
            12460: [[12459, 12441]],
            12461: [, , { 12441: 12462 }],
            12462: [[12461, 12441]],
            12463: [, , { 12441: 12464 }],
            12464: [[12463, 12441]],
            12465: [, , { 12441: 12466 }],
            12466: [[12465, 12441]],
            12467: [, , { 12441: 12468 }],
            12468: [[12467, 12441]],
            12469: [, , { 12441: 12470 }],
            12470: [[12469, 12441]],
            12471: [, , { 12441: 12472 }],
            12472: [[12471, 12441]],
            12473: [, , { 12441: 12474 }],
            12474: [[12473, 12441]],
            12475: [, , { 12441: 12476 }],
            12476: [[12475, 12441]],
            12477: [, , { 12441: 12478 }],
            12478: [[12477, 12441]],
            12479: [, , { 12441: 12480 }],
            12480: [[12479, 12441]],
            12481: [, , { 12441: 12482 }],
            12482: [[12481, 12441]],
            12484: [, , { 12441: 12485 }],
            12485: [[12484, 12441]],
            12486: [, , { 12441: 12487 }],
            12487: [[12486, 12441]],
            12488: [, , { 12441: 12489 }],
            12489: [[12488, 12441]],
            12495: [, , { 12441: 12496, 12442: 12497 }],
            12496: [[12495, 12441]],
            12497: [[12495, 12442]],
            12498: [, , { 12441: 12499, 12442: 12500 }],
            12499: [[12498, 12441]],
            12500: [[12498, 12442]],
            12501: [, , { 12441: 12502, 12442: 12503 }],
            12502: [[12501, 12441]],
            12503: [[12501, 12442]],
            12504: [, , { 12441: 12505, 12442: 12506 }],
            12505: [[12504, 12441]],
            12506: [[12504, 12442]],
            12507: [, , { 12441: 12508, 12442: 12509 }],
            12508: [[12507, 12441]],
            12509: [[12507, 12442]],
            12527: [, , { 12441: 12535 }],
            12528: [, , { 12441: 12536 }],
            12529: [, , { 12441: 12537 }],
            12530: [, , { 12441: 12538 }],
            12532: [[12454, 12441]],
            12535: [[12527, 12441]],
            12536: [[12528, 12441]],
            12537: [[12529, 12441]],
            12538: [[12530, 12441]],
            12541: [, , { 12441: 12542 }],
            12542: [[12541, 12441]],
            12543: [[12467, 12488], 256],
          },
          12544: {
            12593: [[4352], 256],
            12594: [[4353], 256],
            12595: [[4522], 256],
            12596: [[4354], 256],
            12597: [[4524], 256],
            12598: [[4525], 256],
            12599: [[4355], 256],
            12600: [[4356], 256],
            12601: [[4357], 256],
            12602: [[4528], 256],
            12603: [[4529], 256],
            12604: [[4530], 256],
            12605: [[4531], 256],
            12606: [[4532], 256],
            12607: [[4533], 256],
            12608: [[4378], 256],
            12609: [[4358], 256],
            12610: [[4359], 256],
            12611: [[4360], 256],
            12612: [[4385], 256],
            12613: [[4361], 256],
            12614: [[4362], 256],
            12615: [[4363], 256],
            12616: [[4364], 256],
            12617: [[4365], 256],
            12618: [[4366], 256],
            12619: [[4367], 256],
            12620: [[4368], 256],
            12621: [[4369], 256],
            12622: [[4370], 256],
            12623: [[4449], 256],
            12624: [[4450], 256],
            12625: [[4451], 256],
            12626: [[4452], 256],
            12627: [[4453], 256],
            12628: [[4454], 256],
            12629: [[4455], 256],
            12630: [[4456], 256],
            12631: [[4457], 256],
            12632: [[4458], 256],
            12633: [[4459], 256],
            12634: [[4460], 256],
            12635: [[4461], 256],
            12636: [[4462], 256],
            12637: [[4463], 256],
            12638: [[4464], 256],
            12639: [[4465], 256],
            12640: [[4466], 256],
            12641: [[4467], 256],
            12642: [[4468], 256],
            12643: [[4469], 256],
            12644: [[4448], 256],
            12645: [[4372], 256],
            12646: [[4373], 256],
            12647: [[4551], 256],
            12648: [[4552], 256],
            12649: [[4556], 256],
            12650: [[4558], 256],
            12651: [[4563], 256],
            12652: [[4567], 256],
            12653: [[4569], 256],
            12654: [[4380], 256],
            12655: [[4573], 256],
            12656: [[4575], 256],
            12657: [[4381], 256],
            12658: [[4382], 256],
            12659: [[4384], 256],
            12660: [[4386], 256],
            12661: [[4387], 256],
            12662: [[4391], 256],
            12663: [[4393], 256],
            12664: [[4395], 256],
            12665: [[4396], 256],
            12666: [[4397], 256],
            12667: [[4398], 256],
            12668: [[4399], 256],
            12669: [[4402], 256],
            12670: [[4406], 256],
            12671: [[4416], 256],
            12672: [[4423], 256],
            12673: [[4428], 256],
            12674: [[4593], 256],
            12675: [[4594], 256],
            12676: [[4439], 256],
            12677: [[4440], 256],
            12678: [[4441], 256],
            12679: [[4484], 256],
            12680: [[4485], 256],
            12681: [[4488], 256],
            12682: [[4497], 256],
            12683: [[4498], 256],
            12684: [[4500], 256],
            12685: [[4510], 256],
            12686: [[4513], 256],
            12690: [[19968], 256],
            12691: [[20108], 256],
            12692: [[19977], 256],
            12693: [[22235], 256],
            12694: [[19978], 256],
            12695: [[20013], 256],
            12696: [[19979], 256],
            12697: [[30002], 256],
            12698: [[20057], 256],
            12699: [[19993], 256],
            12700: [[19969], 256],
            12701: [[22825], 256],
            12702: [[22320], 256],
            12703: [[20154], 256],
          },
          12800: {
            12800: [[40, 4352, 41], 256],
            12801: [[40, 4354, 41], 256],
            12802: [[40, 4355, 41], 256],
            12803: [[40, 4357, 41], 256],
            12804: [[40, 4358, 41], 256],
            12805: [[40, 4359, 41], 256],
            12806: [[40, 4361, 41], 256],
            12807: [[40, 4363, 41], 256],
            12808: [[40, 4364, 41], 256],
            12809: [[40, 4366, 41], 256],
            12810: [[40, 4367, 41], 256],
            12811: [[40, 4368, 41], 256],
            12812: [[40, 4369, 41], 256],
            12813: [[40, 4370, 41], 256],
            12814: [[40, 4352, 4449, 41], 256],
            12815: [[40, 4354, 4449, 41], 256],
            12816: [[40, 4355, 4449, 41], 256],
            12817: [[40, 4357, 4449, 41], 256],
            12818: [[40, 4358, 4449, 41], 256],
            12819: [[40, 4359, 4449, 41], 256],
            12820: [[40, 4361, 4449, 41], 256],
            12821: [[40, 4363, 4449, 41], 256],
            12822: [[40, 4364, 4449, 41], 256],
            12823: [[40, 4366, 4449, 41], 256],
            12824: [[40, 4367, 4449, 41], 256],
            12825: [[40, 4368, 4449, 41], 256],
            12826: [[40, 4369, 4449, 41], 256],
            12827: [[40, 4370, 4449, 41], 256],
            12828: [[40, 4364, 4462, 41], 256],
            12829: [[40, 4363, 4457, 4364, 4453, 4523, 41], 256],
            12830: [[40, 4363, 4457, 4370, 4462, 41], 256],
            12832: [[40, 19968, 41], 256],
            12833: [[40, 20108, 41], 256],
            12834: [[40, 19977, 41], 256],
            12835: [[40, 22235, 41], 256],
            12836: [[40, 20116, 41], 256],
            12837: [[40, 20845, 41], 256],
            12838: [[40, 19971, 41], 256],
            12839: [[40, 20843, 41], 256],
            12840: [[40, 20061, 41], 256],
            12841: [[40, 21313, 41], 256],
            12842: [[40, 26376, 41], 256],
            12843: [[40, 28779, 41], 256],
            12844: [[40, 27700, 41], 256],
            12845: [[40, 26408, 41], 256],
            12846: [[40, 37329, 41], 256],
            12847: [[40, 22303, 41], 256],
            12848: [[40, 26085, 41], 256],
            12849: [[40, 26666, 41], 256],
            12850: [[40, 26377, 41], 256],
            12851: [[40, 31038, 41], 256],
            12852: [[40, 21517, 41], 256],
            12853: [[40, 29305, 41], 256],
            12854: [[40, 36001, 41], 256],
            12855: [[40, 31069, 41], 256],
            12856: [[40, 21172, 41], 256],
            12857: [[40, 20195, 41], 256],
            12858: [[40, 21628, 41], 256],
            12859: [[40, 23398, 41], 256],
            12860: [[40, 30435, 41], 256],
            12861: [[40, 20225, 41], 256],
            12862: [[40, 36039, 41], 256],
            12863: [[40, 21332, 41], 256],
            12864: [[40, 31085, 41], 256],
            12865: [[40, 20241, 41], 256],
            12866: [[40, 33258, 41], 256],
            12867: [[40, 33267, 41], 256],
            12868: [[21839], 256],
            12869: [[24188], 256],
            12870: [[25991], 256],
            12871: [[31631], 256],
            12880: [[80, 84, 69], 256],
            12881: [[50, 49], 256],
            12882: [[50, 50], 256],
            12883: [[50, 51], 256],
            12884: [[50, 52], 256],
            12885: [[50, 53], 256],
            12886: [[50, 54], 256],
            12887: [[50, 55], 256],
            12888: [[50, 56], 256],
            12889: [[50, 57], 256],
            12890: [[51, 48], 256],
            12891: [[51, 49], 256],
            12892: [[51, 50], 256],
            12893: [[51, 51], 256],
            12894: [[51, 52], 256],
            12895: [[51, 53], 256],
            12896: [[4352], 256],
            12897: [[4354], 256],
            12898: [[4355], 256],
            12899: [[4357], 256],
            12900: [[4358], 256],
            12901: [[4359], 256],
            12902: [[4361], 256],
            12903: [[4363], 256],
            12904: [[4364], 256],
            12905: [[4366], 256],
            12906: [[4367], 256],
            12907: [[4368], 256],
            12908: [[4369], 256],
            12909: [[4370], 256],
            12910: [[4352, 4449], 256],
            12911: [[4354, 4449], 256],
            12912: [[4355, 4449], 256],
            12913: [[4357, 4449], 256],
            12914: [[4358, 4449], 256],
            12915: [[4359, 4449], 256],
            12916: [[4361, 4449], 256],
            12917: [[4363, 4449], 256],
            12918: [[4364, 4449], 256],
            12919: [[4366, 4449], 256],
            12920: [[4367, 4449], 256],
            12921: [[4368, 4449], 256],
            12922: [[4369, 4449], 256],
            12923: [[4370, 4449], 256],
            12924: [[4366, 4449, 4535, 4352, 4457], 256],
            12925: [[4364, 4462, 4363, 4468], 256],
            12926: [[4363, 4462], 256],
            12928: [[19968], 256],
            12929: [[20108], 256],
            12930: [[19977], 256],
            12931: [[22235], 256],
            12932: [[20116], 256],
            12933: [[20845], 256],
            12934: [[19971], 256],
            12935: [[20843], 256],
            12936: [[20061], 256],
            12937: [[21313], 256],
            12938: [[26376], 256],
            12939: [[28779], 256],
            12940: [[27700], 256],
            12941: [[26408], 256],
            12942: [[37329], 256],
            12943: [[22303], 256],
            12944: [[26085], 256],
            12945: [[26666], 256],
            12946: [[26377], 256],
            12947: [[31038], 256],
            12948: [[21517], 256],
            12949: [[29305], 256],
            12950: [[36001], 256],
            12951: [[31069], 256],
            12952: [[21172], 256],
            12953: [[31192], 256],
            12954: [[30007], 256],
            12955: [[22899], 256],
            12956: [[36969], 256],
            12957: [[20778], 256],
            12958: [[21360], 256],
            12959: [[27880], 256],
            12960: [[38917], 256],
            12961: [[20241], 256],
            12962: [[20889], 256],
            12963: [[27491], 256],
            12964: [[19978], 256],
            12965: [[20013], 256],
            12966: [[19979], 256],
            12967: [[24038], 256],
            12968: [[21491], 256],
            12969: [[21307], 256],
            12970: [[23447], 256],
            12971: [[23398], 256],
            12972: [[30435], 256],
            12973: [[20225], 256],
            12974: [[36039], 256],
            12975: [[21332], 256],
            12976: [[22812], 256],
            12977: [[51, 54], 256],
            12978: [[51, 55], 256],
            12979: [[51, 56], 256],
            12980: [[51, 57], 256],
            12981: [[52, 48], 256],
            12982: [[52, 49], 256],
            12983: [[52, 50], 256],
            12984: [[52, 51], 256],
            12985: [[52, 52], 256],
            12986: [[52, 53], 256],
            12987: [[52, 54], 256],
            12988: [[52, 55], 256],
            12989: [[52, 56], 256],
            12990: [[52, 57], 256],
            12991: [[53, 48], 256],
            12992: [[49, 26376], 256],
            12993: [[50, 26376], 256],
            12994: [[51, 26376], 256],
            12995: [[52, 26376], 256],
            12996: [[53, 26376], 256],
            12997: [[54, 26376], 256],
            12998: [[55, 26376], 256],
            12999: [[56, 26376], 256],
            13e3: [[57, 26376], 256],
            13001: [[49, 48, 26376], 256],
            13002: [[49, 49, 26376], 256],
            13003: [[49, 50, 26376], 256],
            13004: [[72, 103], 256],
            13005: [[101, 114, 103], 256],
            13006: [[101, 86], 256],
            13007: [[76, 84, 68], 256],
            13008: [[12450], 256],
            13009: [[12452], 256],
            13010: [[12454], 256],
            13011: [[12456], 256],
            13012: [[12458], 256],
            13013: [[12459], 256],
            13014: [[12461], 256],
            13015: [[12463], 256],
            13016: [[12465], 256],
            13017: [[12467], 256],
            13018: [[12469], 256],
            13019: [[12471], 256],
            13020: [[12473], 256],
            13021: [[12475], 256],
            13022: [[12477], 256],
            13023: [[12479], 256],
            13024: [[12481], 256],
            13025: [[12484], 256],
            13026: [[12486], 256],
            13027: [[12488], 256],
            13028: [[12490], 256],
            13029: [[12491], 256],
            13030: [[12492], 256],
            13031: [[12493], 256],
            13032: [[12494], 256],
            13033: [[12495], 256],
            13034: [[12498], 256],
            13035: [[12501], 256],
            13036: [[12504], 256],
            13037: [[12507], 256],
            13038: [[12510], 256],
            13039: [[12511], 256],
            13040: [[12512], 256],
            13041: [[12513], 256],
            13042: [[12514], 256],
            13043: [[12516], 256],
            13044: [[12518], 256],
            13045: [[12520], 256],
            13046: [[12521], 256],
            13047: [[12522], 256],
            13048: [[12523], 256],
            13049: [[12524], 256],
            13050: [[12525], 256],
            13051: [[12527], 256],
            13052: [[12528], 256],
            13053: [[12529], 256],
            13054: [[12530], 256],
          },
          13056: {
            13056: [[12450, 12497, 12540, 12488], 256],
            13057: [[12450, 12523, 12501, 12449], 256],
            13058: [[12450, 12531, 12506, 12450], 256],
            13059: [[12450, 12540, 12523], 256],
            13060: [[12452, 12491, 12531, 12464], 256],
            13061: [[12452, 12531, 12481], 256],
            13062: [[12454, 12457, 12531], 256],
            13063: [[12456, 12473, 12463, 12540, 12489], 256],
            13064: [[12456, 12540, 12459, 12540], 256],
            13065: [[12458, 12531, 12473], 256],
            13066: [[12458, 12540, 12512], 256],
            13067: [[12459, 12452, 12522], 256],
            13068: [[12459, 12521, 12483, 12488], 256],
            13069: [[12459, 12525, 12522, 12540], 256],
            13070: [[12460, 12525, 12531], 256],
            13071: [[12460, 12531, 12510], 256],
            13072: [[12462, 12460], 256],
            13073: [[12462, 12491, 12540], 256],
            13074: [[12461, 12517, 12522, 12540], 256],
            13075: [[12462, 12523, 12480, 12540], 256],
            13076: [[12461, 12525], 256],
            13077: [[12461, 12525, 12464, 12521, 12512], 256],
            13078: [[12461, 12525, 12513, 12540, 12488, 12523], 256],
            13079: [[12461, 12525, 12527, 12483, 12488], 256],
            13080: [[12464, 12521, 12512], 256],
            13081: [[12464, 12521, 12512, 12488, 12531], 256],
            13082: [[12463, 12523, 12476, 12452, 12525], 256],
            13083: [[12463, 12525, 12540, 12493], 256],
            13084: [[12465, 12540, 12473], 256],
            13085: [[12467, 12523, 12490], 256],
            13086: [[12467, 12540, 12509], 256],
            13087: [[12469, 12452, 12463, 12523], 256],
            13088: [[12469, 12531, 12481, 12540, 12512], 256],
            13089: [[12471, 12522, 12531, 12464], 256],
            13090: [[12475, 12531, 12481], 256],
            13091: [[12475, 12531, 12488], 256],
            13092: [[12480, 12540, 12473], 256],
            13093: [[12487, 12471], 256],
            13094: [[12489, 12523], 256],
            13095: [[12488, 12531], 256],
            13096: [[12490, 12494], 256],
            13097: [[12494, 12483, 12488], 256],
            13098: [[12495, 12452, 12484], 256],
            13099: [[12497, 12540, 12475, 12531, 12488], 256],
            13100: [[12497, 12540, 12484], 256],
            13101: [[12496, 12540, 12524, 12523], 256],
            13102: [[12500, 12450, 12473, 12488, 12523], 256],
            13103: [[12500, 12463, 12523], 256],
            13104: [[12500, 12467], 256],
            13105: [[12499, 12523], 256],
            13106: [[12501, 12449, 12521, 12483, 12489], 256],
            13107: [[12501, 12451, 12540, 12488], 256],
            13108: [[12502, 12483, 12471, 12455, 12523], 256],
            13109: [[12501, 12521, 12531], 256],
            13110: [[12504, 12463, 12479, 12540, 12523], 256],
            13111: [[12506, 12477], 256],
            13112: [[12506, 12491, 12498], 256],
            13113: [[12504, 12523, 12484], 256],
            13114: [[12506, 12531, 12473], 256],
            13115: [[12506, 12540, 12472], 256],
            13116: [[12505, 12540, 12479], 256],
            13117: [[12509, 12452, 12531, 12488], 256],
            13118: [[12508, 12523, 12488], 256],
            13119: [[12507, 12531], 256],
            13120: [[12509, 12531, 12489], 256],
            13121: [[12507, 12540, 12523], 256],
            13122: [[12507, 12540, 12531], 256],
            13123: [[12510, 12452, 12463, 12525], 256],
            13124: [[12510, 12452, 12523], 256],
            13125: [[12510, 12483, 12495], 256],
            13126: [[12510, 12523, 12463], 256],
            13127: [[12510, 12531, 12471, 12519, 12531], 256],
            13128: [[12511, 12463, 12525, 12531], 256],
            13129: [[12511, 12522], 256],
            13130: [[12511, 12522, 12496, 12540, 12523], 256],
            13131: [[12513, 12460], 256],
            13132: [[12513, 12460, 12488, 12531], 256],
            13133: [[12513, 12540, 12488, 12523], 256],
            13134: [[12516, 12540, 12489], 256],
            13135: [[12516, 12540, 12523], 256],
            13136: [[12518, 12450, 12531], 256],
            13137: [[12522, 12483, 12488, 12523], 256],
            13138: [[12522, 12521], 256],
            13139: [[12523, 12500, 12540], 256],
            13140: [[12523, 12540, 12502, 12523], 256],
            13141: [[12524, 12512], 256],
            13142: [[12524, 12531, 12488, 12466, 12531], 256],
            13143: [[12527, 12483, 12488], 256],
            13144: [[48, 28857], 256],
            13145: [[49, 28857], 256],
            13146: [[50, 28857], 256],
            13147: [[51, 28857], 256],
            13148: [[52, 28857], 256],
            13149: [[53, 28857], 256],
            13150: [[54, 28857], 256],
            13151: [[55, 28857], 256],
            13152: [[56, 28857], 256],
            13153: [[57, 28857], 256],
            13154: [[49, 48, 28857], 256],
            13155: [[49, 49, 28857], 256],
            13156: [[49, 50, 28857], 256],
            13157: [[49, 51, 28857], 256],
            13158: [[49, 52, 28857], 256],
            13159: [[49, 53, 28857], 256],
            13160: [[49, 54, 28857], 256],
            13161: [[49, 55, 28857], 256],
            13162: [[49, 56, 28857], 256],
            13163: [[49, 57, 28857], 256],
            13164: [[50, 48, 28857], 256],
            13165: [[50, 49, 28857], 256],
            13166: [[50, 50, 28857], 256],
            13167: [[50, 51, 28857], 256],
            13168: [[50, 52, 28857], 256],
            13169: [[104, 80, 97], 256],
            13170: [[100, 97], 256],
            13171: [[65, 85], 256],
            13172: [[98, 97, 114], 256],
            13173: [[111, 86], 256],
            13174: [[112, 99], 256],
            13175: [[100, 109], 256],
            13176: [[100, 109, 178], 256],
            13177: [[100, 109, 179], 256],
            13178: [[73, 85], 256],
            13179: [[24179, 25104], 256],
            13180: [[26157, 21644], 256],
            13181: [[22823, 27491], 256],
            13182: [[26126, 27835], 256],
            13183: [[26666, 24335, 20250, 31038], 256],
            13184: [[112, 65], 256],
            13185: [[110, 65], 256],
            13186: [[956, 65], 256],
            13187: [[109, 65], 256],
            13188: [[107, 65], 256],
            13189: [[75, 66], 256],
            13190: [[77, 66], 256],
            13191: [[71, 66], 256],
            13192: [[99, 97, 108], 256],
            13193: [[107, 99, 97, 108], 256],
            13194: [[112, 70], 256],
            13195: [[110, 70], 256],
            13196: [[956, 70], 256],
            13197: [[956, 103], 256],
            13198: [[109, 103], 256],
            13199: [[107, 103], 256],
            13200: [[72, 122], 256],
            13201: [[107, 72, 122], 256],
            13202: [[77, 72, 122], 256],
            13203: [[71, 72, 122], 256],
            13204: [[84, 72, 122], 256],
            13205: [[956, 8467], 256],
            13206: [[109, 8467], 256],
            13207: [[100, 8467], 256],
            13208: [[107, 8467], 256],
            13209: [[102, 109], 256],
            13210: [[110, 109], 256],
            13211: [[956, 109], 256],
            13212: [[109, 109], 256],
            13213: [[99, 109], 256],
            13214: [[107, 109], 256],
            13215: [[109, 109, 178], 256],
            13216: [[99, 109, 178], 256],
            13217: [[109, 178], 256],
            13218: [[107, 109, 178], 256],
            13219: [[109, 109, 179], 256],
            13220: [[99, 109, 179], 256],
            13221: [[109, 179], 256],
            13222: [[107, 109, 179], 256],
            13223: [[109, 8725, 115], 256],
            13224: [[109, 8725, 115, 178], 256],
            13225: [[80, 97], 256],
            13226: [[107, 80, 97], 256],
            13227: [[77, 80, 97], 256],
            13228: [[71, 80, 97], 256],
            13229: [[114, 97, 100], 256],
            13230: [[114, 97, 100, 8725, 115], 256],
            13231: [[114, 97, 100, 8725, 115, 178], 256],
            13232: [[112, 115], 256],
            13233: [[110, 115], 256],
            13234: [[956, 115], 256],
            13235: [[109, 115], 256],
            13236: [[112, 86], 256],
            13237: [[110, 86], 256],
            13238: [[956, 86], 256],
            13239: [[109, 86], 256],
            13240: [[107, 86], 256],
            13241: [[77, 86], 256],
            13242: [[112, 87], 256],
            13243: [[110, 87], 256],
            13244: [[956, 87], 256],
            13245: [[109, 87], 256],
            13246: [[107, 87], 256],
            13247: [[77, 87], 256],
            13248: [[107, 937], 256],
            13249: [[77, 937], 256],
            13250: [[97, 46, 109, 46], 256],
            13251: [[66, 113], 256],
            13252: [[99, 99], 256],
            13253: [[99, 100], 256],
            13254: [[67, 8725, 107, 103], 256],
            13255: [[67, 111, 46], 256],
            13256: [[100, 66], 256],
            13257: [[71, 121], 256],
            13258: [[104, 97], 256],
            13259: [[72, 80], 256],
            13260: [[105, 110], 256],
            13261: [[75, 75], 256],
            13262: [[75, 77], 256],
            13263: [[107, 116], 256],
            13264: [[108, 109], 256],
            13265: [[108, 110], 256],
            13266: [[108, 111, 103], 256],
            13267: [[108, 120], 256],
            13268: [[109, 98], 256],
            13269: [[109, 105, 108], 256],
            13270: [[109, 111, 108], 256],
            13271: [[80, 72], 256],
            13272: [[112, 46, 109, 46], 256],
            13273: [[80, 80, 77], 256],
            13274: [[80, 82], 256],
            13275: [[115, 114], 256],
            13276: [[83, 118], 256],
            13277: [[87, 98], 256],
            13278: [[86, 8725, 109], 256],
            13279: [[65, 8725, 109], 256],
            13280: [[49, 26085], 256],
            13281: [[50, 26085], 256],
            13282: [[51, 26085], 256],
            13283: [[52, 26085], 256],
            13284: [[53, 26085], 256],
            13285: [[54, 26085], 256],
            13286: [[55, 26085], 256],
            13287: [[56, 26085], 256],
            13288: [[57, 26085], 256],
            13289: [[49, 48, 26085], 256],
            13290: [[49, 49, 26085], 256],
            13291: [[49, 50, 26085], 256],
            13292: [[49, 51, 26085], 256],
            13293: [[49, 52, 26085], 256],
            13294: [[49, 53, 26085], 256],
            13295: [[49, 54, 26085], 256],
            13296: [[49, 55, 26085], 256],
            13297: [[49, 56, 26085], 256],
            13298: [[49, 57, 26085], 256],
            13299: [[50, 48, 26085], 256],
            13300: [[50, 49, 26085], 256],
            13301: [[50, 50, 26085], 256],
            13302: [[50, 51, 26085], 256],
            13303: [[50, 52, 26085], 256],
            13304: [[50, 53, 26085], 256],
            13305: [[50, 54, 26085], 256],
            13306: [[50, 55, 26085], 256],
            13307: [[50, 56, 26085], 256],
            13308: [[50, 57, 26085], 256],
            13309: [[51, 48, 26085], 256],
            13310: [[51, 49, 26085], 256],
            13311: [[103, 97, 108], 256],
          },
          27136: {
            92912: [, 1],
            92913: [, 1],
            92914: [, 1],
            92915: [, 1],
            92916: [, 1],
          },
          27392: {
            92976: [, 230],
            92977: [, 230],
            92978: [, 230],
            92979: [, 230],
            92980: [, 230],
            92981: [, 230],
            92982: [, 230],
          },
          42496: {
            42607: [, 230],
            42612: [, 230],
            42613: [, 230],
            42614: [, 230],
            42615: [, 230],
            42616: [, 230],
            42617: [, 230],
            42618: [, 230],
            42619: [, 230],
            42620: [, 230],
            42621: [, 230],
            42652: [[1098], 256],
            42653: [[1100], 256],
            42655: [, 230],
            42736: [, 230],
            42737: [, 230],
          },
          42752: {
            42864: [[42863], 256],
            43e3: [[294], 256],
            43001: [[339], 256],
          },
          43008: {
            43014: [, 9],
            43204: [, 9],
            43232: [, 230],
            43233: [, 230],
            43234: [, 230],
            43235: [, 230],
            43236: [, 230],
            43237: [, 230],
            43238: [, 230],
            43239: [, 230],
            43240: [, 230],
            43241: [, 230],
            43242: [, 230],
            43243: [, 230],
            43244: [, 230],
            43245: [, 230],
            43246: [, 230],
            43247: [, 230],
            43248: [, 230],
            43249: [, 230],
          },
          43264: {
            43307: [, 220],
            43308: [, 220],
            43309: [, 220],
            43347: [, 9],
            43443: [, 7],
            43456: [, 9],
          },
          43520: {
            43696: [, 230],
            43698: [, 230],
            43699: [, 230],
            43700: [, 220],
            43703: [, 230],
            43704: [, 230],
            43710: [, 230],
            43711: [, 230],
            43713: [, 230],
            43766: [, 9],
          },
          43776: {
            43868: [[42791], 256],
            43869: [[43831], 256],
            43870: [[619], 256],
            43871: [[43858], 256],
            44013: [, 9],
          },
          48128: { 113822: [, 1] },
          53504: {
            119134: [[119127, 119141], 512],
            119135: [[119128, 119141], 512],
            119136: [[119135, 119150], 512],
            119137: [[119135, 119151], 512],
            119138: [[119135, 119152], 512],
            119139: [[119135, 119153], 512],
            119140: [[119135, 119154], 512],
            119141: [, 216],
            119142: [, 216],
            119143: [, 1],
            119144: [, 1],
            119145: [, 1],
            119149: [, 226],
            119150: [, 216],
            119151: [, 216],
            119152: [, 216],
            119153: [, 216],
            119154: [, 216],
            119163: [, 220],
            119164: [, 220],
            119165: [, 220],
            119166: [, 220],
            119167: [, 220],
            119168: [, 220],
            119169: [, 220],
            119170: [, 220],
            119173: [, 230],
            119174: [, 230],
            119175: [, 230],
            119176: [, 230],
            119177: [, 230],
            119178: [, 220],
            119179: [, 220],
            119210: [, 230],
            119211: [, 230],
            119212: [, 230],
            119213: [, 230],
            119227: [[119225, 119141], 512],
            119228: [[119226, 119141], 512],
            119229: [[119227, 119150], 512],
            119230: [[119228, 119150], 512],
            119231: [[119227, 119151], 512],
            119232: [[119228, 119151], 512],
          },
          53760: { 119362: [, 230], 119363: [, 230], 119364: [, 230] },
          54272: {
            119808: [[65], 256],
            119809: [[66], 256],
            119810: [[67], 256],
            119811: [[68], 256],
            119812: [[69], 256],
            119813: [[70], 256],
            119814: [[71], 256],
            119815: [[72], 256],
            119816: [[73], 256],
            119817: [[74], 256],
            119818: [[75], 256],
            119819: [[76], 256],
            119820: [[77], 256],
            119821: [[78], 256],
            119822: [[79], 256],
            119823: [[80], 256],
            119824: [[81], 256],
            119825: [[82], 256],
            119826: [[83], 256],
            119827: [[84], 256],
            119828: [[85], 256],
            119829: [[86], 256],
            119830: [[87], 256],
            119831: [[88], 256],
            119832: [[89], 256],
            119833: [[90], 256],
            119834: [[97], 256],
            119835: [[98], 256],
            119836: [[99], 256],
            119837: [[100], 256],
            119838: [[101], 256],
            119839: [[102], 256],
            119840: [[103], 256],
            119841: [[104], 256],
            119842: [[105], 256],
            119843: [[106], 256],
            119844: [[107], 256],
            119845: [[108], 256],
            119846: [[109], 256],
            119847: [[110], 256],
            119848: [[111], 256],
            119849: [[112], 256],
            119850: [[113], 256],
            119851: [[114], 256],
            119852: [[115], 256],
            119853: [[116], 256],
            119854: [[117], 256],
            119855: [[118], 256],
            119856: [[119], 256],
            119857: [[120], 256],
            119858: [[121], 256],
            119859: [[122], 256],
            119860: [[65], 256],
            119861: [[66], 256],
            119862: [[67], 256],
            119863: [[68], 256],
            119864: [[69], 256],
            119865: [[70], 256],
            119866: [[71], 256],
            119867: [[72], 256],
            119868: [[73], 256],
            119869: [[74], 256],
            119870: [[75], 256],
            119871: [[76], 256],
            119872: [[77], 256],
            119873: [[78], 256],
            119874: [[79], 256],
            119875: [[80], 256],
            119876: [[81], 256],
            119877: [[82], 256],
            119878: [[83], 256],
            119879: [[84], 256],
            119880: [[85], 256],
            119881: [[86], 256],
            119882: [[87], 256],
            119883: [[88], 256],
            119884: [[89], 256],
            119885: [[90], 256],
            119886: [[97], 256],
            119887: [[98], 256],
            119888: [[99], 256],
            119889: [[100], 256],
            119890: [[101], 256],
            119891: [[102], 256],
            119892: [[103], 256],
            119894: [[105], 256],
            119895: [[106], 256],
            119896: [[107], 256],
            119897: [[108], 256],
            119898: [[109], 256],
            119899: [[110], 256],
            119900: [[111], 256],
            119901: [[112], 256],
            119902: [[113], 256],
            119903: [[114], 256],
            119904: [[115], 256],
            119905: [[116], 256],
            119906: [[117], 256],
            119907: [[118], 256],
            119908: [[119], 256],
            119909: [[120], 256],
            119910: [[121], 256],
            119911: [[122], 256],
            119912: [[65], 256],
            119913: [[66], 256],
            119914: [[67], 256],
            119915: [[68], 256],
            119916: [[69], 256],
            119917: [[70], 256],
            119918: [[71], 256],
            119919: [[72], 256],
            119920: [[73], 256],
            119921: [[74], 256],
            119922: [[75], 256],
            119923: [[76], 256],
            119924: [[77], 256],
            119925: [[78], 256],
            119926: [[79], 256],
            119927: [[80], 256],
            119928: [[81], 256],
            119929: [[82], 256],
            119930: [[83], 256],
            119931: [[84], 256],
            119932: [[85], 256],
            119933: [[86], 256],
            119934: [[87], 256],
            119935: [[88], 256],
            119936: [[89], 256],
            119937: [[90], 256],
            119938: [[97], 256],
            119939: [[98], 256],
            119940: [[99], 256],
            119941: [[100], 256],
            119942: [[101], 256],
            119943: [[102], 256],
            119944: [[103], 256],
            119945: [[104], 256],
            119946: [[105], 256],
            119947: [[106], 256],
            119948: [[107], 256],
            119949: [[108], 256],
            119950: [[109], 256],
            119951: [[110], 256],
            119952: [[111], 256],
            119953: [[112], 256],
            119954: [[113], 256],
            119955: [[114], 256],
            119956: [[115], 256],
            119957: [[116], 256],
            119958: [[117], 256],
            119959: [[118], 256],
            119960: [[119], 256],
            119961: [[120], 256],
            119962: [[121], 256],
            119963: [[122], 256],
            119964: [[65], 256],
            119966: [[67], 256],
            119967: [[68], 256],
            119970: [[71], 256],
            119973: [[74], 256],
            119974: [[75], 256],
            119977: [[78], 256],
            119978: [[79], 256],
            119979: [[80], 256],
            119980: [[81], 256],
            119982: [[83], 256],
            119983: [[84], 256],
            119984: [[85], 256],
            119985: [[86], 256],
            119986: [[87], 256],
            119987: [[88], 256],
            119988: [[89], 256],
            119989: [[90], 256],
            119990: [[97], 256],
            119991: [[98], 256],
            119992: [[99], 256],
            119993: [[100], 256],
            119995: [[102], 256],
            119997: [[104], 256],
            119998: [[105], 256],
            119999: [[106], 256],
            12e4: [[107], 256],
            120001: [[108], 256],
            120002: [[109], 256],
            120003: [[110], 256],
            120005: [[112], 256],
            120006: [[113], 256],
            120007: [[114], 256],
            120008: [[115], 256],
            120009: [[116], 256],
            120010: [[117], 256],
            120011: [[118], 256],
            120012: [[119], 256],
            120013: [[120], 256],
            120014: [[121], 256],
            120015: [[122], 256],
            120016: [[65], 256],
            120017: [[66], 256],
            120018: [[67], 256],
            120019: [[68], 256],
            120020: [[69], 256],
            120021: [[70], 256],
            120022: [[71], 256],
            120023: [[72], 256],
            120024: [[73], 256],
            120025: [[74], 256],
            120026: [[75], 256],
            120027: [[76], 256],
            120028: [[77], 256],
            120029: [[78], 256],
            120030: [[79], 256],
            120031: [[80], 256],
            120032: [[81], 256],
            120033: [[82], 256],
            120034: [[83], 256],
            120035: [[84], 256],
            120036: [[85], 256],
            120037: [[86], 256],
            120038: [[87], 256],
            120039: [[88], 256],
            120040: [[89], 256],
            120041: [[90], 256],
            120042: [[97], 256],
            120043: [[98], 256],
            120044: [[99], 256],
            120045: [[100], 256],
            120046: [[101], 256],
            120047: [[102], 256],
            120048: [[103], 256],
            120049: [[104], 256],
            120050: [[105], 256],
            120051: [[106], 256],
            120052: [[107], 256],
            120053: [[108], 256],
            120054: [[109], 256],
            120055: [[110], 256],
            120056: [[111], 256],
            120057: [[112], 256],
            120058: [[113], 256],
            120059: [[114], 256],
            120060: [[115], 256],
            120061: [[116], 256],
            120062: [[117], 256],
            120063: [[118], 256],
          },
          54528: {
            120064: [[119], 256],
            120065: [[120], 256],
            120066: [[121], 256],
            120067: [[122], 256],
            120068: [[65], 256],
            120069: [[66], 256],
            120071: [[68], 256],
            120072: [[69], 256],
            120073: [[70], 256],
            120074: [[71], 256],
            120077: [[74], 256],
            120078: [[75], 256],
            120079: [[76], 256],
            120080: [[77], 256],
            120081: [[78], 256],
            120082: [[79], 256],
            120083: [[80], 256],
            120084: [[81], 256],
            120086: [[83], 256],
            120087: [[84], 256],
            120088: [[85], 256],
            120089: [[86], 256],
            120090: [[87], 256],
            120091: [[88], 256],
            120092: [[89], 256],
            120094: [[97], 256],
            120095: [[98], 256],
            120096: [[99], 256],
            120097: [[100], 256],
            120098: [[101], 256],
            120099: [[102], 256],
            120100: [[103], 256],
            120101: [[104], 256],
            120102: [[105], 256],
            120103: [[106], 256],
            120104: [[107], 256],
            120105: [[108], 256],
            120106: [[109], 256],
            120107: [[110], 256],
            120108: [[111], 256],
            120109: [[112], 256],
            120110: [[113], 256],
            120111: [[114], 256],
            120112: [[115], 256],
            120113: [[116], 256],
            120114: [[117], 256],
            120115: [[118], 256],
            120116: [[119], 256],
            120117: [[120], 256],
            120118: [[121], 256],
            120119: [[122], 256],
            120120: [[65], 256],
            120121: [[66], 256],
            120123: [[68], 256],
            120124: [[69], 256],
            120125: [[70], 256],
            120126: [[71], 256],
            120128: [[73], 256],
            120129: [[74], 256],
            120130: [[75], 256],
            120131: [[76], 256],
            120132: [[77], 256],
            120134: [[79], 256],
            120138: [[83], 256],
            120139: [[84], 256],
            120140: [[85], 256],
            120141: [[86], 256],
            120142: [[87], 256],
            120143: [[88], 256],
            120144: [[89], 256],
            120146: [[97], 256],
            120147: [[98], 256],
            120148: [[99], 256],
            120149: [[100], 256],
            120150: [[101], 256],
            120151: [[102], 256],
            120152: [[103], 256],
            120153: [[104], 256],
            120154: [[105], 256],
            120155: [[106], 256],
            120156: [[107], 256],
            120157: [[108], 256],
            120158: [[109], 256],
            120159: [[110], 256],
            120160: [[111], 256],
            120161: [[112], 256],
            120162: [[113], 256],
            120163: [[114], 256],
            120164: [[115], 256],
            120165: [[116], 256],
            120166: [[117], 256],
            120167: [[118], 256],
            120168: [[119], 256],
            120169: [[120], 256],
            120170: [[121], 256],
            120171: [[122], 256],
            120172: [[65], 256],
            120173: [[66], 256],
            120174: [[67], 256],
            120175: [[68], 256],
            120176: [[69], 256],
            120177: [[70], 256],
            120178: [[71], 256],
            120179: [[72], 256],
            120180: [[73], 256],
            120181: [[74], 256],
            120182: [[75], 256],
            120183: [[76], 256],
            120184: [[77], 256],
            120185: [[78], 256],
            120186: [[79], 256],
            120187: [[80], 256],
            120188: [[81], 256],
            120189: [[82], 256],
            120190: [[83], 256],
            120191: [[84], 256],
            120192: [[85], 256],
            120193: [[86], 256],
            120194: [[87], 256],
            120195: [[88], 256],
            120196: [[89], 256],
            120197: [[90], 256],
            120198: [[97], 256],
            120199: [[98], 256],
            120200: [[99], 256],
            120201: [[100], 256],
            120202: [[101], 256],
            120203: [[102], 256],
            120204: [[103], 256],
            120205: [[104], 256],
            120206: [[105], 256],
            120207: [[106], 256],
            120208: [[107], 256],
            120209: [[108], 256],
            120210: [[109], 256],
            120211: [[110], 256],
            120212: [[111], 256],
            120213: [[112], 256],
            120214: [[113], 256],
            120215: [[114], 256],
            120216: [[115], 256],
            120217: [[116], 256],
            120218: [[117], 256],
            120219: [[118], 256],
            120220: [[119], 256],
            120221: [[120], 256],
            120222: [[121], 256],
            120223: [[122], 256],
            120224: [[65], 256],
            120225: [[66], 256],
            120226: [[67], 256],
            120227: [[68], 256],
            120228: [[69], 256],
            120229: [[70], 256],
            120230: [[71], 256],
            120231: [[72], 256],
            120232: [[73], 256],
            120233: [[74], 256],
            120234: [[75], 256],
            120235: [[76], 256],
            120236: [[77], 256],
            120237: [[78], 256],
            120238: [[79], 256],
            120239: [[80], 256],
            120240: [[81], 256],
            120241: [[82], 256],
            120242: [[83], 256],
            120243: [[84], 256],
            120244: [[85], 256],
            120245: [[86], 256],
            120246: [[87], 256],
            120247: [[88], 256],
            120248: [[89], 256],
            120249: [[90], 256],
            120250: [[97], 256],
            120251: [[98], 256],
            120252: [[99], 256],
            120253: [[100], 256],
            120254: [[101], 256],
            120255: [[102], 256],
            120256: [[103], 256],
            120257: [[104], 256],
            120258: [[105], 256],
            120259: [[106], 256],
            120260: [[107], 256],
            120261: [[108], 256],
            120262: [[109], 256],
            120263: [[110], 256],
            120264: [[111], 256],
            120265: [[112], 256],
            120266: [[113], 256],
            120267: [[114], 256],
            120268: [[115], 256],
            120269: [[116], 256],
            120270: [[117], 256],
            120271: [[118], 256],
            120272: [[119], 256],
            120273: [[120], 256],
            120274: [[121], 256],
            120275: [[122], 256],
            120276: [[65], 256],
            120277: [[66], 256],
            120278: [[67], 256],
            120279: [[68], 256],
            120280: [[69], 256],
            120281: [[70], 256],
            120282: [[71], 256],
            120283: [[72], 256],
            120284: [[73], 256],
            120285: [[74], 256],
            120286: [[75], 256],
            120287: [[76], 256],
            120288: [[77], 256],
            120289: [[78], 256],
            120290: [[79], 256],
            120291: [[80], 256],
            120292: [[81], 256],
            120293: [[82], 256],
            120294: [[83], 256],
            120295: [[84], 256],
            120296: [[85], 256],
            120297: [[86], 256],
            120298: [[87], 256],
            120299: [[88], 256],
            120300: [[89], 256],
            120301: [[90], 256],
            120302: [[97], 256],
            120303: [[98], 256],
            120304: [[99], 256],
            120305: [[100], 256],
            120306: [[101], 256],
            120307: [[102], 256],
            120308: [[103], 256],
            120309: [[104], 256],
            120310: [[105], 256],
            120311: [[106], 256],
            120312: [[107], 256],
            120313: [[108], 256],
            120314: [[109], 256],
            120315: [[110], 256],
            120316: [[111], 256],
            120317: [[112], 256],
            120318: [[113], 256],
            120319: [[114], 256],
          },
          54784: {
            120320: [[115], 256],
            120321: [[116], 256],
            120322: [[117], 256],
            120323: [[118], 256],
            120324: [[119], 256],
            120325: [[120], 256],
            120326: [[121], 256],
            120327: [[122], 256],
            120328: [[65], 256],
            120329: [[66], 256],
            120330: [[67], 256],
            120331: [[68], 256],
            120332: [[69], 256],
            120333: [[70], 256],
            120334: [[71], 256],
            120335: [[72], 256],
            120336: [[73], 256],
            120337: [[74], 256],
            120338: [[75], 256],
            120339: [[76], 256],
            120340: [[77], 256],
            120341: [[78], 256],
            120342: [[79], 256],
            120343: [[80], 256],
            120344: [[81], 256],
            120345: [[82], 256],
            120346: [[83], 256],
            120347: [[84], 256],
            120348: [[85], 256],
            120349: [[86], 256],
            120350: [[87], 256],
            120351: [[88], 256],
            120352: [[89], 256],
            120353: [[90], 256],
            120354: [[97], 256],
            120355: [[98], 256],
            120356: [[99], 256],
            120357: [[100], 256],
            120358: [[101], 256],
            120359: [[102], 256],
            120360: [[103], 256],
            120361: [[104], 256],
            120362: [[105], 256],
            120363: [[106], 256],
            120364: [[107], 256],
            120365: [[108], 256],
            120366: [[109], 256],
            120367: [[110], 256],
            120368: [[111], 256],
            120369: [[112], 256],
            120370: [[113], 256],
            120371: [[114], 256],
            120372: [[115], 256],
            120373: [[116], 256],
            120374: [[117], 256],
            120375: [[118], 256],
            120376: [[119], 256],
            120377: [[120], 256],
            120378: [[121], 256],
            120379: [[122], 256],
            120380: [[65], 256],
            120381: [[66], 256],
            120382: [[67], 256],
            120383: [[68], 256],
            120384: [[69], 256],
            120385: [[70], 256],
            120386: [[71], 256],
            120387: [[72], 256],
            120388: [[73], 256],
            120389: [[74], 256],
            120390: [[75], 256],
            120391: [[76], 256],
            120392: [[77], 256],
            120393: [[78], 256],
            120394: [[79], 256],
            120395: [[80], 256],
            120396: [[81], 256],
            120397: [[82], 256],
            120398: [[83], 256],
            120399: [[84], 256],
            120400: [[85], 256],
            120401: [[86], 256],
            120402: [[87], 256],
            120403: [[88], 256],
            120404: [[89], 256],
            120405: [[90], 256],
            120406: [[97], 256],
            120407: [[98], 256],
            120408: [[99], 256],
            120409: [[100], 256],
            120410: [[101], 256],
            120411: [[102], 256],
            120412: [[103], 256],
            120413: [[104], 256],
            120414: [[105], 256],
            120415: [[106], 256],
            120416: [[107], 256],
            120417: [[108], 256],
            120418: [[109], 256],
            120419: [[110], 256],
            120420: [[111], 256],
            120421: [[112], 256],
            120422: [[113], 256],
            120423: [[114], 256],
            120424: [[115], 256],
            120425: [[116], 256],
            120426: [[117], 256],
            120427: [[118], 256],
            120428: [[119], 256],
            120429: [[120], 256],
            120430: [[121], 256],
            120431: [[122], 256],
            120432: [[65], 256],
            120433: [[66], 256],
            120434: [[67], 256],
            120435: [[68], 256],
            120436: [[69], 256],
            120437: [[70], 256],
            120438: [[71], 256],
            120439: [[72], 256],
            120440: [[73], 256],
            120441: [[74], 256],
            120442: [[75], 256],
            120443: [[76], 256],
            120444: [[77], 256],
            120445: [[78], 256],
            120446: [[79], 256],
            120447: [[80], 256],
            120448: [[81], 256],
            120449: [[82], 256],
            120450: [[83], 256],
            120451: [[84], 256],
            120452: [[85], 256],
            120453: [[86], 256],
            120454: [[87], 256],
            120455: [[88], 256],
            120456: [[89], 256],
            120457: [[90], 256],
            120458: [[97], 256],
            120459: [[98], 256],
            120460: [[99], 256],
            120461: [[100], 256],
            120462: [[101], 256],
            120463: [[102], 256],
            120464: [[103], 256],
            120465: [[104], 256],
            120466: [[105], 256],
            120467: [[106], 256],
            120468: [[107], 256],
            120469: [[108], 256],
            120470: [[109], 256],
            120471: [[110], 256],
            120472: [[111], 256],
            120473: [[112], 256],
            120474: [[113], 256],
            120475: [[114], 256],
            120476: [[115], 256],
            120477: [[116], 256],
            120478: [[117], 256],
            120479: [[118], 256],
            120480: [[119], 256],
            120481: [[120], 256],
            120482: [[121], 256],
            120483: [[122], 256],
            120484: [[305], 256],
            120485: [[567], 256],
            120488: [[913], 256],
            120489: [[914], 256],
            120490: [[915], 256],
            120491: [[916], 256],
            120492: [[917], 256],
            120493: [[918], 256],
            120494: [[919], 256],
            120495: [[920], 256],
            120496: [[921], 256],
            120497: [[922], 256],
            120498: [[923], 256],
            120499: [[924], 256],
            120500: [[925], 256],
            120501: [[926], 256],
            120502: [[927], 256],
            120503: [[928], 256],
            120504: [[929], 256],
            120505: [[1012], 256],
            120506: [[931], 256],
            120507: [[932], 256],
            120508: [[933], 256],
            120509: [[934], 256],
            120510: [[935], 256],
            120511: [[936], 256],
            120512: [[937], 256],
            120513: [[8711], 256],
            120514: [[945], 256],
            120515: [[946], 256],
            120516: [[947], 256],
            120517: [[948], 256],
            120518: [[949], 256],
            120519: [[950], 256],
            120520: [[951], 256],
            120521: [[952], 256],
            120522: [[953], 256],
            120523: [[954], 256],
            120524: [[955], 256],
            120525: [[956], 256],
            120526: [[957], 256],
            120527: [[958], 256],
            120528: [[959], 256],
            120529: [[960], 256],
            120530: [[961], 256],
            120531: [[962], 256],
            120532: [[963], 256],
            120533: [[964], 256],
            120534: [[965], 256],
            120535: [[966], 256],
            120536: [[967], 256],
            120537: [[968], 256],
            120538: [[969], 256],
            120539: [[8706], 256],
            120540: [[1013], 256],
            120541: [[977], 256],
            120542: [[1008], 256],
            120543: [[981], 256],
            120544: [[1009], 256],
            120545: [[982], 256],
            120546: [[913], 256],
            120547: [[914], 256],
            120548: [[915], 256],
            120549: [[916], 256],
            120550: [[917], 256],
            120551: [[918], 256],
            120552: [[919], 256],
            120553: [[920], 256],
            120554: [[921], 256],
            120555: [[922], 256],
            120556: [[923], 256],
            120557: [[924], 256],
            120558: [[925], 256],
            120559: [[926], 256],
            120560: [[927], 256],
            120561: [[928], 256],
            120562: [[929], 256],
            120563: [[1012], 256],
            120564: [[931], 256],
            120565: [[932], 256],
            120566: [[933], 256],
            120567: [[934], 256],
            120568: [[935], 256],
            120569: [[936], 256],
            120570: [[937], 256],
            120571: [[8711], 256],
            120572: [[945], 256],
            120573: [[946], 256],
            120574: [[947], 256],
            120575: [[948], 256],
          },
          55040: {
            120576: [[949], 256],
            120577: [[950], 256],
            120578: [[951], 256],
            120579: [[952], 256],
            120580: [[953], 256],
            120581: [[954], 256],
            120582: [[955], 256],
            120583: [[956], 256],
            120584: [[957], 256],
            120585: [[958], 256],
            120586: [[959], 256],
            120587: [[960], 256],
            120588: [[961], 256],
            120589: [[962], 256],
            120590: [[963], 256],
            120591: [[964], 256],
            120592: [[965], 256],
            120593: [[966], 256],
            120594: [[967], 256],
            120595: [[968], 256],
            120596: [[969], 256],
            120597: [[8706], 256],
            120598: [[1013], 256],
            120599: [[977], 256],
            120600: [[1008], 256],
            120601: [[981], 256],
            120602: [[1009], 256],
            120603: [[982], 256],
            120604: [[913], 256],
            120605: [[914], 256],
            120606: [[915], 256],
            120607: [[916], 256],
            120608: [[917], 256],
            120609: [[918], 256],
            120610: [[919], 256],
            120611: [[920], 256],
            120612: [[921], 256],
            120613: [[922], 256],
            120614: [[923], 256],
            120615: [[924], 256],
            120616: [[925], 256],
            120617: [[926], 256],
            120618: [[927], 256],
            120619: [[928], 256],
            120620: [[929], 256],
            120621: [[1012], 256],
            120622: [[931], 256],
            120623: [[932], 256],
            120624: [[933], 256],
            120625: [[934], 256],
            120626: [[935], 256],
            120627: [[936], 256],
            120628: [[937], 256],
            120629: [[8711], 256],
            120630: [[945], 256],
            120631: [[946], 256],
            120632: [[947], 256],
            120633: [[948], 256],
            120634: [[949], 256],
            120635: [[950], 256],
            120636: [[951], 256],
            120637: [[952], 256],
            120638: [[953], 256],
            120639: [[954], 256],
            120640: [[955], 256],
            120641: [[956], 256],
            120642: [[957], 256],
            120643: [[958], 256],
            120644: [[959], 256],
            120645: [[960], 256],
            120646: [[961], 256],
            120647: [[962], 256],
            120648: [[963], 256],
            120649: [[964], 256],
            120650: [[965], 256],
            120651: [[966], 256],
            120652: [[967], 256],
            120653: [[968], 256],
            120654: [[969], 256],
            120655: [[8706], 256],
            120656: [[1013], 256],
            120657: [[977], 256],
            120658: [[1008], 256],
            120659: [[981], 256],
            120660: [[1009], 256],
            120661: [[982], 256],
            120662: [[913], 256],
            120663: [[914], 256],
            120664: [[915], 256],
            120665: [[916], 256],
            120666: [[917], 256],
            120667: [[918], 256],
            120668: [[919], 256],
            120669: [[920], 256],
            120670: [[921], 256],
            120671: [[922], 256],
            120672: [[923], 256],
            120673: [[924], 256],
            120674: [[925], 256],
            120675: [[926], 256],
            120676: [[927], 256],
            120677: [[928], 256],
            120678: [[929], 256],
            120679: [[1012], 256],
            120680: [[931], 256],
            120681: [[932], 256],
            120682: [[933], 256],
            120683: [[934], 256],
            120684: [[935], 256],
            120685: [[936], 256],
            120686: [[937], 256],
            120687: [[8711], 256],
            120688: [[945], 256],
            120689: [[946], 256],
            120690: [[947], 256],
            120691: [[948], 256],
            120692: [[949], 256],
            120693: [[950], 256],
            120694: [[951], 256],
            120695: [[952], 256],
            120696: [[953], 256],
            120697: [[954], 256],
            120698: [[955], 256],
            120699: [[956], 256],
            120700: [[957], 256],
            120701: [[958], 256],
            120702: [[959], 256],
            120703: [[960], 256],
            120704: [[961], 256],
            120705: [[962], 256],
            120706: [[963], 256],
            120707: [[964], 256],
            120708: [[965], 256],
            120709: [[966], 256],
            120710: [[967], 256],
            120711: [[968], 256],
            120712: [[969], 256],
            120713: [[8706], 256],
            120714: [[1013], 256],
            120715: [[977], 256],
            120716: [[1008], 256],
            120717: [[981], 256],
            120718: [[1009], 256],
            120719: [[982], 256],
            120720: [[913], 256],
            120721: [[914], 256],
            120722: [[915], 256],
            120723: [[916], 256],
            120724: [[917], 256],
            120725: [[918], 256],
            120726: [[919], 256],
            120727: [[920], 256],
            120728: [[921], 256],
            120729: [[922], 256],
            120730: [[923], 256],
            120731: [[924], 256],
            120732: [[925], 256],
            120733: [[926], 256],
            120734: [[927], 256],
            120735: [[928], 256],
            120736: [[929], 256],
            120737: [[1012], 256],
            120738: [[931], 256],
            120739: [[932], 256],
            120740: [[933], 256],
            120741: [[934], 256],
            120742: [[935], 256],
            120743: [[936], 256],
            120744: [[937], 256],
            120745: [[8711], 256],
            120746: [[945], 256],
            120747: [[946], 256],
            120748: [[947], 256],
            120749: [[948], 256],
            120750: [[949], 256],
            120751: [[950], 256],
            120752: [[951], 256],
            120753: [[952], 256],
            120754: [[953], 256],
            120755: [[954], 256],
            120756: [[955], 256],
            120757: [[956], 256],
            120758: [[957], 256],
            120759: [[958], 256],
            120760: [[959], 256],
            120761: [[960], 256],
            120762: [[961], 256],
            120763: [[962], 256],
            120764: [[963], 256],
            120765: [[964], 256],
            120766: [[965], 256],
            120767: [[966], 256],
            120768: [[967], 256],
            120769: [[968], 256],
            120770: [[969], 256],
            120771: [[8706], 256],
            120772: [[1013], 256],
            120773: [[977], 256],
            120774: [[1008], 256],
            120775: [[981], 256],
            120776: [[1009], 256],
            120777: [[982], 256],
            120778: [[988], 256],
            120779: [[989], 256],
            120782: [[48], 256],
            120783: [[49], 256],
            120784: [[50], 256],
            120785: [[51], 256],
            120786: [[52], 256],
            120787: [[53], 256],
            120788: [[54], 256],
            120789: [[55], 256],
            120790: [[56], 256],
            120791: [[57], 256],
            120792: [[48], 256],
            120793: [[49], 256],
            120794: [[50], 256],
            120795: [[51], 256],
            120796: [[52], 256],
            120797: [[53], 256],
            120798: [[54], 256],
            120799: [[55], 256],
            120800: [[56], 256],
            120801: [[57], 256],
            120802: [[48], 256],
            120803: [[49], 256],
            120804: [[50], 256],
            120805: [[51], 256],
            120806: [[52], 256],
            120807: [[53], 256],
            120808: [[54], 256],
            120809: [[55], 256],
            120810: [[56], 256],
            120811: [[57], 256],
            120812: [[48], 256],
            120813: [[49], 256],
            120814: [[50], 256],
            120815: [[51], 256],
            120816: [[52], 256],
            120817: [[53], 256],
            120818: [[54], 256],
            120819: [[55], 256],
            120820: [[56], 256],
            120821: [[57], 256],
            120822: [[48], 256],
            120823: [[49], 256],
            120824: [[50], 256],
            120825: [[51], 256],
            120826: [[52], 256],
            120827: [[53], 256],
            120828: [[54], 256],
            120829: [[55], 256],
            120830: [[56], 256],
            120831: [[57], 256],
          },
          59392: {
            125136: [, 220],
            125137: [, 220],
            125138: [, 220],
            125139: [, 220],
            125140: [, 220],
            125141: [, 220],
            125142: [, 220],
          },
          60928: {
            126464: [[1575], 256],
            126465: [[1576], 256],
            126466: [[1580], 256],
            126467: [[1583], 256],
            126469: [[1608], 256],
            126470: [[1586], 256],
            126471: [[1581], 256],
            126472: [[1591], 256],
            126473: [[1610], 256],
            126474: [[1603], 256],
            126475: [[1604], 256],
            126476: [[1605], 256],
            126477: [[1606], 256],
            126478: [[1587], 256],
            126479: [[1593], 256],
            126480: [[1601], 256],
            126481: [[1589], 256],
            126482: [[1602], 256],
            126483: [[1585], 256],
            126484: [[1588], 256],
            126485: [[1578], 256],
            126486: [[1579], 256],
            126487: [[1582], 256],
            126488: [[1584], 256],
            126489: [[1590], 256],
            126490: [[1592], 256],
            126491: [[1594], 256],
            126492: [[1646], 256],
            126493: [[1722], 256],
            126494: [[1697], 256],
            126495: [[1647], 256],
            126497: [[1576], 256],
            126498: [[1580], 256],
            126500: [[1607], 256],
            126503: [[1581], 256],
            126505: [[1610], 256],
            126506: [[1603], 256],
            126507: [[1604], 256],
            126508: [[1605], 256],
            126509: [[1606], 256],
            126510: [[1587], 256],
            126511: [[1593], 256],
            126512: [[1601], 256],
            126513: [[1589], 256],
            126514: [[1602], 256],
            126516: [[1588], 256],
            126517: [[1578], 256],
            126518: [[1579], 256],
            126519: [[1582], 256],
            126521: [[1590], 256],
            126523: [[1594], 256],
            126530: [[1580], 256],
            126535: [[1581], 256],
            126537: [[1610], 256],
            126539: [[1604], 256],
            126541: [[1606], 256],
            126542: [[1587], 256],
            126543: [[1593], 256],
            126545: [[1589], 256],
            126546: [[1602], 256],
            126548: [[1588], 256],
            126551: [[1582], 256],
            126553: [[1590], 256],
            126555: [[1594], 256],
            126557: [[1722], 256],
            126559: [[1647], 256],
            126561: [[1576], 256],
            126562: [[1580], 256],
            126564: [[1607], 256],
            126567: [[1581], 256],
            126568: [[1591], 256],
            126569: [[1610], 256],
            126570: [[1603], 256],
            126572: [[1605], 256],
            126573: [[1606], 256],
            126574: [[1587], 256],
            126575: [[1593], 256],
            126576: [[1601], 256],
            126577: [[1589], 256],
            126578: [[1602], 256],
            126580: [[1588], 256],
            126581: [[1578], 256],
            126582: [[1579], 256],
            126583: [[1582], 256],
            126585: [[1590], 256],
            126586: [[1592], 256],
            126587: [[1594], 256],
            126588: [[1646], 256],
            126590: [[1697], 256],
            126592: [[1575], 256],
            126593: [[1576], 256],
            126594: [[1580], 256],
            126595: [[1583], 256],
            126596: [[1607], 256],
            126597: [[1608], 256],
            126598: [[1586], 256],
            126599: [[1581], 256],
            126600: [[1591], 256],
            126601: [[1610], 256],
            126603: [[1604], 256],
            126604: [[1605], 256],
            126605: [[1606], 256],
            126606: [[1587], 256],
            126607: [[1593], 256],
            126608: [[1601], 256],
            126609: [[1589], 256],
            126610: [[1602], 256],
            126611: [[1585], 256],
            126612: [[1588], 256],
            126613: [[1578], 256],
            126614: [[1579], 256],
            126615: [[1582], 256],
            126616: [[1584], 256],
            126617: [[1590], 256],
            126618: [[1592], 256],
            126619: [[1594], 256],
            126625: [[1576], 256],
            126626: [[1580], 256],
            126627: [[1583], 256],
            126629: [[1608], 256],
            126630: [[1586], 256],
            126631: [[1581], 256],
            126632: [[1591], 256],
            126633: [[1610], 256],
            126635: [[1604], 256],
            126636: [[1605], 256],
            126637: [[1606], 256],
            126638: [[1587], 256],
            126639: [[1593], 256],
            126640: [[1601], 256],
            126641: [[1589], 256],
            126642: [[1602], 256],
            126643: [[1585], 256],
            126644: [[1588], 256],
            126645: [[1578], 256],
            126646: [[1579], 256],
            126647: [[1582], 256],
            126648: [[1584], 256],
            126649: [[1590], 256],
            126650: [[1592], 256],
            126651: [[1594], 256],
          },
          61696: {
            127232: [[48, 46], 256],
            127233: [[48, 44], 256],
            127234: [[49, 44], 256],
            127235: [[50, 44], 256],
            127236: [[51, 44], 256],
            127237: [[52, 44], 256],
            127238: [[53, 44], 256],
            127239: [[54, 44], 256],
            127240: [[55, 44], 256],
            127241: [[56, 44], 256],
            127242: [[57, 44], 256],
            127248: [[40, 65, 41], 256],
            127249: [[40, 66, 41], 256],
            127250: [[40, 67, 41], 256],
            127251: [[40, 68, 41], 256],
            127252: [[40, 69, 41], 256],
            127253: [[40, 70, 41], 256],
            127254: [[40, 71, 41], 256],
            127255: [[40, 72, 41], 256],
            127256: [[40, 73, 41], 256],
            127257: [[40, 74, 41], 256],
            127258: [[40, 75, 41], 256],
            127259: [[40, 76, 41], 256],
            127260: [[40, 77, 41], 256],
            127261: [[40, 78, 41], 256],
            127262: [[40, 79, 41], 256],
            127263: [[40, 80, 41], 256],
            127264: [[40, 81, 41], 256],
            127265: [[40, 82, 41], 256],
            127266: [[40, 83, 41], 256],
            127267: [[40, 84, 41], 256],
            127268: [[40, 85, 41], 256],
            127269: [[40, 86, 41], 256],
            127270: [[40, 87, 41], 256],
            127271: [[40, 88, 41], 256],
            127272: [[40, 89, 41], 256],
            127273: [[40, 90, 41], 256],
            127274: [[12308, 83, 12309], 256],
            127275: [[67], 256],
            127276: [[82], 256],
            127277: [[67, 68], 256],
            127278: [[87, 90], 256],
            127280: [[65], 256],
            127281: [[66], 256],
            127282: [[67], 256],
            127283: [[68], 256],
            127284: [[69], 256],
            127285: [[70], 256],
            127286: [[71], 256],
            127287: [[72], 256],
            127288: [[73], 256],
            127289: [[74], 256],
            127290: [[75], 256],
            127291: [[76], 256],
            127292: [[77], 256],
            127293: [[78], 256],
            127294: [[79], 256],
            127295: [[80], 256],
            127296: [[81], 256],
            127297: [[82], 256],
            127298: [[83], 256],
            127299: [[84], 256],
            127300: [[85], 256],
            127301: [[86], 256],
            127302: [[87], 256],
            127303: [[88], 256],
            127304: [[89], 256],
            127305: [[90], 256],
            127306: [[72, 86], 256],
            127307: [[77, 86], 256],
            127308: [[83, 68], 256],
            127309: [[83, 83], 256],
            127310: [[80, 80, 86], 256],
            127311: [[87, 67], 256],
            127338: [[77, 67], 256],
            127339: [[77, 68], 256],
            127376: [[68, 74], 256],
          },
          61952: {
            127488: [[12411, 12363], 256],
            127489: [[12467, 12467], 256],
            127490: [[12469], 256],
            127504: [[25163], 256],
            127505: [[23383], 256],
            127506: [[21452], 256],
            127507: [[12487], 256],
            127508: [[20108], 256],
            127509: [[22810], 256],
            127510: [[35299], 256],
            127511: [[22825], 256],
            127512: [[20132], 256],
            127513: [[26144], 256],
            127514: [[28961], 256],
            127515: [[26009], 256],
            127516: [[21069], 256],
            127517: [[24460], 256],
            127518: [[20877], 256],
            127519: [[26032], 256],
            127520: [[21021], 256],
            127521: [[32066], 256],
            127522: [[29983], 256],
            127523: [[36009], 256],
            127524: [[22768], 256],
            127525: [[21561], 256],
            127526: [[28436], 256],
            127527: [[25237], 256],
            127528: [[25429], 256],
            127529: [[19968], 256],
            127530: [[19977], 256],
            127531: [[36938], 256],
            127532: [[24038], 256],
            127533: [[20013], 256],
            127534: [[21491], 256],
            127535: [[25351], 256],
            127536: [[36208], 256],
            127537: [[25171], 256],
            127538: [[31105], 256],
            127539: [[31354], 256],
            127540: [[21512], 256],
            127541: [[28288], 256],
            127542: [[26377], 256],
            127543: [[26376], 256],
            127544: [[30003], 256],
            127545: [[21106], 256],
            127546: [[21942], 256],
            127552: [[12308, 26412, 12309], 256],
            127553: [[12308, 19977, 12309], 256],
            127554: [[12308, 20108, 12309], 256],
            127555: [[12308, 23433, 12309], 256],
            127556: [[12308, 28857, 12309], 256],
            127557: [[12308, 25171, 12309], 256],
            127558: [[12308, 30423, 12309], 256],
            127559: [[12308, 21213, 12309], 256],
            127560: [[12308, 25943, 12309], 256],
            127568: [[24471], 256],
            127569: [[21487], 256],
          },
          63488: {
            194560: [[20029]],
            194561: [[20024]],
            194562: [[20033]],
            194563: [[131362]],
            194564: [[20320]],
            194565: [[20398]],
            194566: [[20411]],
            194567: [[20482]],
            194568: [[20602]],
            194569: [[20633]],
            194570: [[20711]],
            194571: [[20687]],
            194572: [[13470]],
            194573: [[132666]],
            194574: [[20813]],
            194575: [[20820]],
            194576: [[20836]],
            194577: [[20855]],
            194578: [[132380]],
            194579: [[13497]],
            194580: [[20839]],
            194581: [[20877]],
            194582: [[132427]],
            194583: [[20887]],
            194584: [[20900]],
            194585: [[20172]],
            194586: [[20908]],
            194587: [[20917]],
            194588: [[168415]],
            194589: [[20981]],
            194590: [[20995]],
            194591: [[13535]],
            194592: [[21051]],
            194593: [[21062]],
            194594: [[21106]],
            194595: [[21111]],
            194596: [[13589]],
            194597: [[21191]],
            194598: [[21193]],
            194599: [[21220]],
            194600: [[21242]],
            194601: [[21253]],
            194602: [[21254]],
            194603: [[21271]],
            194604: [[21321]],
            194605: [[21329]],
            194606: [[21338]],
            194607: [[21363]],
            194608: [[21373]],
            194609: [[21375]],
            194610: [[21375]],
            194611: [[21375]],
            194612: [[133676]],
            194613: [[28784]],
            194614: [[21450]],
            194615: [[21471]],
            194616: [[133987]],
            194617: [[21483]],
            194618: [[21489]],
            194619: [[21510]],
            194620: [[21662]],
            194621: [[21560]],
            194622: [[21576]],
            194623: [[21608]],
            194624: [[21666]],
            194625: [[21750]],
            194626: [[21776]],
            194627: [[21843]],
            194628: [[21859]],
            194629: [[21892]],
            194630: [[21892]],
            194631: [[21913]],
            194632: [[21931]],
            194633: [[21939]],
            194634: [[21954]],
            194635: [[22294]],
            194636: [[22022]],
            194637: [[22295]],
            194638: [[22097]],
            194639: [[22132]],
            194640: [[20999]],
            194641: [[22766]],
            194642: [[22478]],
            194643: [[22516]],
            194644: [[22541]],
            194645: [[22411]],
            194646: [[22578]],
            194647: [[22577]],
            194648: [[22700]],
            194649: [[136420]],
            194650: [[22770]],
            194651: [[22775]],
            194652: [[22790]],
            194653: [[22810]],
            194654: [[22818]],
            194655: [[22882]],
            194656: [[136872]],
            194657: [[136938]],
            194658: [[23020]],
            194659: [[23067]],
            194660: [[23079]],
            194661: [[23e3]],
            194662: [[23142]],
            194663: [[14062]],
            194664: [[14076]],
            194665: [[23304]],
            194666: [[23358]],
            194667: [[23358]],
            194668: [[137672]],
            194669: [[23491]],
            194670: [[23512]],
            194671: [[23527]],
            194672: [[23539]],
            194673: [[138008]],
            194674: [[23551]],
            194675: [[23558]],
            194676: [[24403]],
            194677: [[23586]],
            194678: [[14209]],
            194679: [[23648]],
            194680: [[23662]],
            194681: [[23744]],
            194682: [[23693]],
            194683: [[138724]],
            194684: [[23875]],
            194685: [[138726]],
            194686: [[23918]],
            194687: [[23915]],
            194688: [[23932]],
            194689: [[24033]],
            194690: [[24034]],
            194691: [[14383]],
            194692: [[24061]],
            194693: [[24104]],
            194694: [[24125]],
            194695: [[24169]],
            194696: [[14434]],
            194697: [[139651]],
            194698: [[14460]],
            194699: [[24240]],
            194700: [[24243]],
            194701: [[24246]],
            194702: [[24266]],
            194703: [[172946]],
            194704: [[24318]],
            194705: [[140081]],
            194706: [[140081]],
            194707: [[33281]],
            194708: [[24354]],
            194709: [[24354]],
            194710: [[14535]],
            194711: [[144056]],
            194712: [[156122]],
            194713: [[24418]],
            194714: [[24427]],
            194715: [[14563]],
            194716: [[24474]],
            194717: [[24525]],
            194718: [[24535]],
            194719: [[24569]],
            194720: [[24705]],
            194721: [[14650]],
            194722: [[14620]],
            194723: [[24724]],
            194724: [[141012]],
            194725: [[24775]],
            194726: [[24904]],
            194727: [[24908]],
            194728: [[24910]],
            194729: [[24908]],
            194730: [[24954]],
            194731: [[24974]],
            194732: [[25010]],
            194733: [[24996]],
            194734: [[25007]],
            194735: [[25054]],
            194736: [[25074]],
            194737: [[25078]],
            194738: [[25104]],
            194739: [[25115]],
            194740: [[25181]],
            194741: [[25265]],
            194742: [[25300]],
            194743: [[25424]],
            194744: [[142092]],
            194745: [[25405]],
            194746: [[25340]],
            194747: [[25448]],
            194748: [[25475]],
            194749: [[25572]],
            194750: [[142321]],
            194751: [[25634]],
            194752: [[25541]],
            194753: [[25513]],
            194754: [[14894]],
            194755: [[25705]],
            194756: [[25726]],
            194757: [[25757]],
            194758: [[25719]],
            194759: [[14956]],
            194760: [[25935]],
            194761: [[25964]],
            194762: [[143370]],
            194763: [[26083]],
            194764: [[26360]],
            194765: [[26185]],
            194766: [[15129]],
            194767: [[26257]],
            194768: [[15112]],
            194769: [[15076]],
            194770: [[20882]],
            194771: [[20885]],
            194772: [[26368]],
            194773: [[26268]],
            194774: [[32941]],
            194775: [[17369]],
            194776: [[26391]],
            194777: [[26395]],
            194778: [[26401]],
            194779: [[26462]],
            194780: [[26451]],
            194781: [[144323]],
            194782: [[15177]],
            194783: [[26618]],
            194784: [[26501]],
            194785: [[26706]],
            194786: [[26757]],
            194787: [[144493]],
            194788: [[26766]],
            194789: [[26655]],
            194790: [[26900]],
            194791: [[15261]],
            194792: [[26946]],
            194793: [[27043]],
            194794: [[27114]],
            194795: [[27304]],
            194796: [[145059]],
            194797: [[27355]],
            194798: [[15384]],
            194799: [[27425]],
            194800: [[145575]],
            194801: [[27476]],
            194802: [[15438]],
            194803: [[27506]],
            194804: [[27551]],
            194805: [[27578]],
            194806: [[27579]],
            194807: [[146061]],
            194808: [[138507]],
            194809: [[146170]],
            194810: [[27726]],
            194811: [[146620]],
            194812: [[27839]],
            194813: [[27853]],
            194814: [[27751]],
            194815: [[27926]],
          },
          63744: {
            63744: [[35912]],
            63745: [[26356]],
            63746: [[36554]],
            63747: [[36040]],
            63748: [[28369]],
            63749: [[20018]],
            63750: [[21477]],
            63751: [[40860]],
            63752: [[40860]],
            63753: [[22865]],
            63754: [[37329]],
            63755: [[21895]],
            63756: [[22856]],
            63757: [[25078]],
            63758: [[30313]],
            63759: [[32645]],
            63760: [[34367]],
            63761: [[34746]],
            63762: [[35064]],
            63763: [[37007]],
            63764: [[27138]],
            63765: [[27931]],
            63766: [[28889]],
            63767: [[29662]],
            63768: [[33853]],
            63769: [[37226]],
            63770: [[39409]],
            63771: [[20098]],
            63772: [[21365]],
            63773: [[27396]],
            63774: [[29211]],
            63775: [[34349]],
            63776: [[40478]],
            63777: [[23888]],
            63778: [[28651]],
            63779: [[34253]],
            63780: [[35172]],
            63781: [[25289]],
            63782: [[33240]],
            63783: [[34847]],
            63784: [[24266]],
            63785: [[26391]],
            63786: [[28010]],
            63787: [[29436]],
            63788: [[37070]],
            63789: [[20358]],
            63790: [[20919]],
            63791: [[21214]],
            63792: [[25796]],
            63793: [[27347]],
            63794: [[29200]],
            63795: [[30439]],
            63796: [[32769]],
            63797: [[34310]],
            63798: [[34396]],
            63799: [[36335]],
            63800: [[38706]],
            63801: [[39791]],
            63802: [[40442]],
            63803: [[30860]],
            63804: [[31103]],
            63805: [[32160]],
            63806: [[33737]],
            63807: [[37636]],
            63808: [[40575]],
            63809: [[35542]],
            63810: [[22751]],
            63811: [[24324]],
            63812: [[31840]],
            63813: [[32894]],
            63814: [[29282]],
            63815: [[30922]],
            63816: [[36034]],
            63817: [[38647]],
            63818: [[22744]],
            63819: [[23650]],
            63820: [[27155]],
            63821: [[28122]],
            63822: [[28431]],
            63823: [[32047]],
            63824: [[32311]],
            63825: [[38475]],
            63826: [[21202]],
            63827: [[32907]],
            63828: [[20956]],
            63829: [[20940]],
            63830: [[31260]],
            63831: [[32190]],
            63832: [[33777]],
            63833: [[38517]],
            63834: [[35712]],
            63835: [[25295]],
            63836: [[27138]],
            63837: [[35582]],
            63838: [[20025]],
            63839: [[23527]],
            63840: [[24594]],
            63841: [[29575]],
            63842: [[30064]],
            63843: [[21271]],
            63844: [[30971]],
            63845: [[20415]],
            63846: [[24489]],
            63847: [[19981]],
            63848: [[27852]],
            63849: [[25976]],
            63850: [[32034]],
            63851: [[21443]],
            63852: [[22622]],
            63853: [[30465]],
            63854: [[33865]],
            63855: [[35498]],
            63856: [[27578]],
            63857: [[36784]],
            63858: [[27784]],
            63859: [[25342]],
            63860: [[33509]],
            63861: [[25504]],
            63862: [[30053]],
            63863: [[20142]],
            63864: [[20841]],
            63865: [[20937]],
            63866: [[26753]],
            63867: [[31975]],
            63868: [[33391]],
            63869: [[35538]],
            63870: [[37327]],
            63871: [[21237]],
            63872: [[21570]],
            63873: [[22899]],
            63874: [[24300]],
            63875: [[26053]],
            63876: [[28670]],
            63877: [[31018]],
            63878: [[38317]],
            63879: [[39530]],
            63880: [[40599]],
            63881: [[40654]],
            63882: [[21147]],
            63883: [[26310]],
            63884: [[27511]],
            63885: [[36706]],
            63886: [[24180]],
            63887: [[24976]],
            63888: [[25088]],
            63889: [[25754]],
            63890: [[28451]],
            63891: [[29001]],
            63892: [[29833]],
            63893: [[31178]],
            63894: [[32244]],
            63895: [[32879]],
            63896: [[36646]],
            63897: [[34030]],
            63898: [[36899]],
            63899: [[37706]],
            63900: [[21015]],
            63901: [[21155]],
            63902: [[21693]],
            63903: [[28872]],
            63904: [[35010]],
            63905: [[35498]],
            63906: [[24265]],
            63907: [[24565]],
            63908: [[25467]],
            63909: [[27566]],
            63910: [[31806]],
            63911: [[29557]],
            63912: [[20196]],
            63913: [[22265]],
            63914: [[23527]],
            63915: [[23994]],
            63916: [[24604]],
            63917: [[29618]],
            63918: [[29801]],
            63919: [[32666]],
            63920: [[32838]],
            63921: [[37428]],
            63922: [[38646]],
            63923: [[38728]],
            63924: [[38936]],
            63925: [[20363]],
            63926: [[31150]],
            63927: [[37300]],
            63928: [[38584]],
            63929: [[24801]],
            63930: [[20102]],
            63931: [[20698]],
            63932: [[23534]],
            63933: [[23615]],
            63934: [[26009]],
            63935: [[27138]],
            63936: [[29134]],
            63937: [[30274]],
            63938: [[34044]],
            63939: [[36988]],
            63940: [[40845]],
            63941: [[26248]],
            63942: [[38446]],
            63943: [[21129]],
            63944: [[26491]],
            63945: [[26611]],
            63946: [[27969]],
            63947: [[28316]],
            63948: [[29705]],
            63949: [[30041]],
            63950: [[30827]],
            63951: [[32016]],
            63952: [[39006]],
            63953: [[20845]],
            63954: [[25134]],
            63955: [[38520]],
            63956: [[20523]],
            63957: [[23833]],
            63958: [[28138]],
            63959: [[36650]],
            63960: [[24459]],
            63961: [[24900]],
            63962: [[26647]],
            63963: [[29575]],
            63964: [[38534]],
            63965: [[21033]],
            63966: [[21519]],
            63967: [[23653]],
            63968: [[26131]],
            63969: [[26446]],
            63970: [[26792]],
            63971: [[27877]],
            63972: [[29702]],
            63973: [[30178]],
            63974: [[32633]],
            63975: [[35023]],
            63976: [[35041]],
            63977: [[37324]],
            63978: [[38626]],
            63979: [[21311]],
            63980: [[28346]],
            63981: [[21533]],
            63982: [[29136]],
            63983: [[29848]],
            63984: [[34298]],
            63985: [[38563]],
            63986: [[40023]],
            63987: [[40607]],
            63988: [[26519]],
            63989: [[28107]],
            63990: [[33256]],
            63991: [[31435]],
            63992: [[31520]],
            63993: [[31890]],
            63994: [[29376]],
            63995: [[28825]],
            63996: [[35672]],
            63997: [[20160]],
            63998: [[33590]],
            63999: [[21050]],
            194816: [[27966]],
            194817: [[28023]],
            194818: [[27969]],
            194819: [[28009]],
            194820: [[28024]],
            194821: [[28037]],
            194822: [[146718]],
            194823: [[27956]],
            194824: [[28207]],
            194825: [[28270]],
            194826: [[15667]],
            194827: [[28363]],
            194828: [[28359]],
            194829: [[147153]],
            194830: [[28153]],
            194831: [[28526]],
            194832: [[147294]],
            194833: [[147342]],
            194834: [[28614]],
            194835: [[28729]],
            194836: [[28702]],
            194837: [[28699]],
            194838: [[15766]],
            194839: [[28746]],
            194840: [[28797]],
            194841: [[28791]],
            194842: [[28845]],
            194843: [[132389]],
            194844: [[28997]],
            194845: [[148067]],
            194846: [[29084]],
            194847: [[148395]],
            194848: [[29224]],
            194849: [[29237]],
            194850: [[29264]],
            194851: [[149e3]],
            194852: [[29312]],
            194853: [[29333]],
            194854: [[149301]],
            194855: [[149524]],
            194856: [[29562]],
            194857: [[29579]],
            194858: [[16044]],
            194859: [[29605]],
            194860: [[16056]],
            194861: [[16056]],
            194862: [[29767]],
            194863: [[29788]],
            194864: [[29809]],
            194865: [[29829]],
            194866: [[29898]],
            194867: [[16155]],
            194868: [[29988]],
            194869: [[150582]],
            194870: [[30014]],
            194871: [[150674]],
            194872: [[30064]],
            194873: [[139679]],
            194874: [[30224]],
            194875: [[151457]],
            194876: [[151480]],
            194877: [[151620]],
            194878: [[16380]],
            194879: [[16392]],
            194880: [[30452]],
            194881: [[151795]],
            194882: [[151794]],
            194883: [[151833]],
            194884: [[151859]],
            194885: [[30494]],
            194886: [[30495]],
            194887: [[30495]],
            194888: [[30538]],
            194889: [[16441]],
            194890: [[30603]],
            194891: [[16454]],
            194892: [[16534]],
            194893: [[152605]],
            194894: [[30798]],
            194895: [[30860]],
            194896: [[30924]],
            194897: [[16611]],
            194898: [[153126]],
            194899: [[31062]],
            194900: [[153242]],
            194901: [[153285]],
            194902: [[31119]],
            194903: [[31211]],
            194904: [[16687]],
            194905: [[31296]],
            194906: [[31306]],
            194907: [[31311]],
            194908: [[153980]],
            194909: [[154279]],
            194910: [[154279]],
            194911: [[31470]],
            194912: [[16898]],
            194913: [[154539]],
            194914: [[31686]],
            194915: [[31689]],
            194916: [[16935]],
            194917: [[154752]],
            194918: [[31954]],
            194919: [[17056]],
            194920: [[31976]],
            194921: [[31971]],
            194922: [[32e3]],
            194923: [[155526]],
            194924: [[32099]],
            194925: [[17153]],
            194926: [[32199]],
            194927: [[32258]],
            194928: [[32325]],
            194929: [[17204]],
            194930: [[156200]],
            194931: [[156231]],
            194932: [[17241]],
            194933: [[156377]],
            194934: [[32634]],
            194935: [[156478]],
            194936: [[32661]],
            194937: [[32762]],
            194938: [[32773]],
            194939: [[156890]],
            194940: [[156963]],
            194941: [[32864]],
            194942: [[157096]],
            194943: [[32880]],
            194944: [[144223]],
            194945: [[17365]],
            194946: [[32946]],
            194947: [[33027]],
            194948: [[17419]],
            194949: [[33086]],
            194950: [[23221]],
            194951: [[157607]],
            194952: [[157621]],
            194953: [[144275]],
            194954: [[144284]],
            194955: [[33281]],
            194956: [[33284]],
            194957: [[36766]],
            194958: [[17515]],
            194959: [[33425]],
            194960: [[33419]],
            194961: [[33437]],
            194962: [[21171]],
            194963: [[33457]],
            194964: [[33459]],
            194965: [[33469]],
            194966: [[33510]],
            194967: [[158524]],
            194968: [[33509]],
            194969: [[33565]],
            194970: [[33635]],
            194971: [[33709]],
            194972: [[33571]],
            194973: [[33725]],
            194974: [[33767]],
            194975: [[33879]],
            194976: [[33619]],
            194977: [[33738]],
            194978: [[33740]],
            194979: [[33756]],
            194980: [[158774]],
            194981: [[159083]],
            194982: [[158933]],
            194983: [[17707]],
            194984: [[34033]],
            194985: [[34035]],
            194986: [[34070]],
            194987: [[160714]],
            194988: [[34148]],
            194989: [[159532]],
            194990: [[17757]],
            194991: [[17761]],
            194992: [[159665]],
            194993: [[159954]],
            194994: [[17771]],
            194995: [[34384]],
            194996: [[34396]],
            194997: [[34407]],
            194998: [[34409]],
            194999: [[34473]],
            195e3: [[34440]],
            195001: [[34574]],
            195002: [[34530]],
            195003: [[34681]],
            195004: [[34600]],
            195005: [[34667]],
            195006: [[34694]],
            195007: [[17879]],
            195008: [[34785]],
            195009: [[34817]],
            195010: [[17913]],
            195011: [[34912]],
            195012: [[34915]],
            195013: [[161383]],
            195014: [[35031]],
            195015: [[35038]],
            195016: [[17973]],
            195017: [[35066]],
            195018: [[13499]],
            195019: [[161966]],
            195020: [[162150]],
            195021: [[18110]],
            195022: [[18119]],
            195023: [[35488]],
            195024: [[35565]],
            195025: [[35722]],
            195026: [[35925]],
            195027: [[162984]],
            195028: [[36011]],
            195029: [[36033]],
            195030: [[36123]],
            195031: [[36215]],
            195032: [[163631]],
            195033: [[133124]],
            195034: [[36299]],
            195035: [[36284]],
            195036: [[36336]],
            195037: [[133342]],
            195038: [[36564]],
            195039: [[36664]],
            195040: [[165330]],
            195041: [[165357]],
            195042: [[37012]],
            195043: [[37105]],
            195044: [[37137]],
            195045: [[165678]],
            195046: [[37147]],
            195047: [[37432]],
            195048: [[37591]],
            195049: [[37592]],
            195050: [[37500]],
            195051: [[37881]],
            195052: [[37909]],
            195053: [[166906]],
            195054: [[38283]],
            195055: [[18837]],
            195056: [[38327]],
            195057: [[167287]],
            195058: [[18918]],
            195059: [[38595]],
            195060: [[23986]],
            195061: [[38691]],
            195062: [[168261]],
            195063: [[168474]],
            195064: [[19054]],
            195065: [[19062]],
            195066: [[38880]],
            195067: [[168970]],
            195068: [[19122]],
            195069: [[169110]],
            195070: [[38923]],
            195071: [[38923]],
          },
          64e3: {
            64e3: [[20999]],
            64001: [[24230]],
            64002: [[25299]],
            64003: [[31958]],
            64004: [[23429]],
            64005: [[27934]],
            64006: [[26292]],
            64007: [[36667]],
            64008: [[34892]],
            64009: [[38477]],
            64010: [[35211]],
            64011: [[24275]],
            64012: [[20800]],
            64013: [[21952]],
            64016: [[22618]],
            64018: [[26228]],
            64021: [[20958]],
            64022: [[29482]],
            64023: [[30410]],
            64024: [[31036]],
            64025: [[31070]],
            64026: [[31077]],
            64027: [[31119]],
            64028: [[38742]],
            64029: [[31934]],
            64030: [[32701]],
            64032: [[34322]],
            64034: [[35576]],
            64037: [[36920]],
            64038: [[37117]],
            64042: [[39151]],
            64043: [[39164]],
            64044: [[39208]],
            64045: [[40372]],
            64046: [[37086]],
            64047: [[38583]],
            64048: [[20398]],
            64049: [[20711]],
            64050: [[20813]],
            64051: [[21193]],
            64052: [[21220]],
            64053: [[21329]],
            64054: [[21917]],
            64055: [[22022]],
            64056: [[22120]],
            64057: [[22592]],
            64058: [[22696]],
            64059: [[23652]],
            64060: [[23662]],
            64061: [[24724]],
            64062: [[24936]],
            64063: [[24974]],
            64064: [[25074]],
            64065: [[25935]],
            64066: [[26082]],
            64067: [[26257]],
            64068: [[26757]],
            64069: [[28023]],
            64070: [[28186]],
            64071: [[28450]],
            64072: [[29038]],
            64073: [[29227]],
            64074: [[29730]],
            64075: [[30865]],
            64076: [[31038]],
            64077: [[31049]],
            64078: [[31048]],
            64079: [[31056]],
            64080: [[31062]],
            64081: [[31069]],
            64082: [[31117]],
            64083: [[31118]],
            64084: [[31296]],
            64085: [[31361]],
            64086: [[31680]],
            64087: [[32244]],
            64088: [[32265]],
            64089: [[32321]],
            64090: [[32626]],
            64091: [[32773]],
            64092: [[33261]],
            64093: [[33401]],
            64094: [[33401]],
            64095: [[33879]],
            64096: [[35088]],
            64097: [[35222]],
            64098: [[35585]],
            64099: [[35641]],
            64100: [[36051]],
            64101: [[36104]],
            64102: [[36790]],
            64103: [[36920]],
            64104: [[38627]],
            64105: [[38911]],
            64106: [[38971]],
            64107: [[24693]],
            64108: [[148206]],
            64109: [[33304]],
            64112: [[20006]],
            64113: [[20917]],
            64114: [[20840]],
            64115: [[20352]],
            64116: [[20805]],
            64117: [[20864]],
            64118: [[21191]],
            64119: [[21242]],
            64120: [[21917]],
            64121: [[21845]],
            64122: [[21913]],
            64123: [[21986]],
            64124: [[22618]],
            64125: [[22707]],
            64126: [[22852]],
            64127: [[22868]],
            64128: [[23138]],
            64129: [[23336]],
            64130: [[24274]],
            64131: [[24281]],
            64132: [[24425]],
            64133: [[24493]],
            64134: [[24792]],
            64135: [[24910]],
            64136: [[24840]],
            64137: [[24974]],
            64138: [[24928]],
            64139: [[25074]],
            64140: [[25140]],
            64141: [[25540]],
            64142: [[25628]],
            64143: [[25682]],
            64144: [[25942]],
            64145: [[26228]],
            64146: [[26391]],
            64147: [[26395]],
            64148: [[26454]],
            64149: [[27513]],
            64150: [[27578]],
            64151: [[27969]],
            64152: [[28379]],
            64153: [[28363]],
            64154: [[28450]],
            64155: [[28702]],
            64156: [[29038]],
            64157: [[30631]],
            64158: [[29237]],
            64159: [[29359]],
            64160: [[29482]],
            64161: [[29809]],
            64162: [[29958]],
            64163: [[30011]],
            64164: [[30237]],
            64165: [[30239]],
            64166: [[30410]],
            64167: [[30427]],
            64168: [[30452]],
            64169: [[30538]],
            64170: [[30528]],
            64171: [[30924]],
            64172: [[31409]],
            64173: [[31680]],
            64174: [[31867]],
            64175: [[32091]],
            64176: [[32244]],
            64177: [[32574]],
            64178: [[32773]],
            64179: [[33618]],
            64180: [[33775]],
            64181: [[34681]],
            64182: [[35137]],
            64183: [[35206]],
            64184: [[35222]],
            64185: [[35519]],
            64186: [[35576]],
            64187: [[35531]],
            64188: [[35585]],
            64189: [[35582]],
            64190: [[35565]],
            64191: [[35641]],
            64192: [[35722]],
            64193: [[36104]],
            64194: [[36664]],
            64195: [[36978]],
            64196: [[37273]],
            64197: [[37494]],
            64198: [[38524]],
            64199: [[38627]],
            64200: [[38742]],
            64201: [[38875]],
            64202: [[38911]],
            64203: [[38923]],
            64204: [[38971]],
            64205: [[39698]],
            64206: [[40860]],
            64207: [[141386]],
            64208: [[141380]],
            64209: [[144341]],
            64210: [[15261]],
            64211: [[16408]],
            64212: [[16441]],
            64213: [[152137]],
            64214: [[154832]],
            64215: [[163539]],
            64216: [[40771]],
            64217: [[40846]],
            195072: [[38953]],
            195073: [[169398]],
            195074: [[39138]],
            195075: [[19251]],
            195076: [[39209]],
            195077: [[39335]],
            195078: [[39362]],
            195079: [[39422]],
            195080: [[19406]],
            195081: [[170800]],
            195082: [[39698]],
            195083: [[4e4]],
            195084: [[40189]],
            195085: [[19662]],
            195086: [[19693]],
            195087: [[40295]],
            195088: [[172238]],
            195089: [[19704]],
            195090: [[172293]],
            195091: [[172558]],
            195092: [[172689]],
            195093: [[40635]],
            195094: [[19798]],
            195095: [[40697]],
            195096: [[40702]],
            195097: [[40709]],
            195098: [[40719]],
            195099: [[40726]],
            195100: [[40763]],
            195101: [[173568]],
          },
          64256: {
            64256: [[102, 102], 256],
            64257: [[102, 105], 256],
            64258: [[102, 108], 256],
            64259: [[102, 102, 105], 256],
            64260: [[102, 102, 108], 256],
            64261: [[383, 116], 256],
            64262: [[115, 116], 256],
            64275: [[1396, 1398], 256],
            64276: [[1396, 1381], 256],
            64277: [[1396, 1387], 256],
            64278: [[1406, 1398], 256],
            64279: [[1396, 1389], 256],
            64285: [[1497, 1460], 512],
            64286: [, 26],
            64287: [[1522, 1463], 512],
            64288: [[1506], 256],
            64289: [[1488], 256],
            64290: [[1491], 256],
            64291: [[1492], 256],
            64292: [[1499], 256],
            64293: [[1500], 256],
            64294: [[1501], 256],
            64295: [[1512], 256],
            64296: [[1514], 256],
            64297: [[43], 256],
            64298: [[1513, 1473], 512],
            64299: [[1513, 1474], 512],
            64300: [[64329, 1473], 512],
            64301: [[64329, 1474], 512],
            64302: [[1488, 1463], 512],
            64303: [[1488, 1464], 512],
            64304: [[1488, 1468], 512],
            64305: [[1489, 1468], 512],
            64306: [[1490, 1468], 512],
            64307: [[1491, 1468], 512],
            64308: [[1492, 1468], 512],
            64309: [[1493, 1468], 512],
            64310: [[1494, 1468], 512],
            64312: [[1496, 1468], 512],
            64313: [[1497, 1468], 512],
            64314: [[1498, 1468], 512],
            64315: [[1499, 1468], 512],
            64316: [[1500, 1468], 512],
            64318: [[1502, 1468], 512],
            64320: [[1504, 1468], 512],
            64321: [[1505, 1468], 512],
            64323: [[1507, 1468], 512],
            64324: [[1508, 1468], 512],
            64326: [[1510, 1468], 512],
            64327: [[1511, 1468], 512],
            64328: [[1512, 1468], 512],
            64329: [[1513, 1468], 512],
            64330: [[1514, 1468], 512],
            64331: [[1493, 1465], 512],
            64332: [[1489, 1471], 512],
            64333: [[1499, 1471], 512],
            64334: [[1508, 1471], 512],
            64335: [[1488, 1500], 256],
            64336: [[1649], 256],
            64337: [[1649], 256],
            64338: [[1659], 256],
            64339: [[1659], 256],
            64340: [[1659], 256],
            64341: [[1659], 256],
            64342: [[1662], 256],
            64343: [[1662], 256],
            64344: [[1662], 256],
            64345: [[1662], 256],
            64346: [[1664], 256],
            64347: [[1664], 256],
            64348: [[1664], 256],
            64349: [[1664], 256],
            64350: [[1658], 256],
            64351: [[1658], 256],
            64352: [[1658], 256],
            64353: [[1658], 256],
            64354: [[1663], 256],
            64355: [[1663], 256],
            64356: [[1663], 256],
            64357: [[1663], 256],
            64358: [[1657], 256],
            64359: [[1657], 256],
            64360: [[1657], 256],
            64361: [[1657], 256],
            64362: [[1700], 256],
            64363: [[1700], 256],
            64364: [[1700], 256],
            64365: [[1700], 256],
            64366: [[1702], 256],
            64367: [[1702], 256],
            64368: [[1702], 256],
            64369: [[1702], 256],
            64370: [[1668], 256],
            64371: [[1668], 256],
            64372: [[1668], 256],
            64373: [[1668], 256],
            64374: [[1667], 256],
            64375: [[1667], 256],
            64376: [[1667], 256],
            64377: [[1667], 256],
            64378: [[1670], 256],
            64379: [[1670], 256],
            64380: [[1670], 256],
            64381: [[1670], 256],
            64382: [[1671], 256],
            64383: [[1671], 256],
            64384: [[1671], 256],
            64385: [[1671], 256],
            64386: [[1677], 256],
            64387: [[1677], 256],
            64388: [[1676], 256],
            64389: [[1676], 256],
            64390: [[1678], 256],
            64391: [[1678], 256],
            64392: [[1672], 256],
            64393: [[1672], 256],
            64394: [[1688], 256],
            64395: [[1688], 256],
            64396: [[1681], 256],
            64397: [[1681], 256],
            64398: [[1705], 256],
            64399: [[1705], 256],
            64400: [[1705], 256],
            64401: [[1705], 256],
            64402: [[1711], 256],
            64403: [[1711], 256],
            64404: [[1711], 256],
            64405: [[1711], 256],
            64406: [[1715], 256],
            64407: [[1715], 256],
            64408: [[1715], 256],
            64409: [[1715], 256],
            64410: [[1713], 256],
            64411: [[1713], 256],
            64412: [[1713], 256],
            64413: [[1713], 256],
            64414: [[1722], 256],
            64415: [[1722], 256],
            64416: [[1723], 256],
            64417: [[1723], 256],
            64418: [[1723], 256],
            64419: [[1723], 256],
            64420: [[1728], 256],
            64421: [[1728], 256],
            64422: [[1729], 256],
            64423: [[1729], 256],
            64424: [[1729], 256],
            64425: [[1729], 256],
            64426: [[1726], 256],
            64427: [[1726], 256],
            64428: [[1726], 256],
            64429: [[1726], 256],
            64430: [[1746], 256],
            64431: [[1746], 256],
            64432: [[1747], 256],
            64433: [[1747], 256],
            64467: [[1709], 256],
            64468: [[1709], 256],
            64469: [[1709], 256],
            64470: [[1709], 256],
            64471: [[1735], 256],
            64472: [[1735], 256],
            64473: [[1734], 256],
            64474: [[1734], 256],
            64475: [[1736], 256],
            64476: [[1736], 256],
            64477: [[1655], 256],
            64478: [[1739], 256],
            64479: [[1739], 256],
            64480: [[1733], 256],
            64481: [[1733], 256],
            64482: [[1737], 256],
            64483: [[1737], 256],
            64484: [[1744], 256],
            64485: [[1744], 256],
            64486: [[1744], 256],
            64487: [[1744], 256],
            64488: [[1609], 256],
            64489: [[1609], 256],
            64490: [[1574, 1575], 256],
            64491: [[1574, 1575], 256],
            64492: [[1574, 1749], 256],
            64493: [[1574, 1749], 256],
            64494: [[1574, 1608], 256],
            64495: [[1574, 1608], 256],
            64496: [[1574, 1735], 256],
            64497: [[1574, 1735], 256],
            64498: [[1574, 1734], 256],
            64499: [[1574, 1734], 256],
            64500: [[1574, 1736], 256],
            64501: [[1574, 1736], 256],
            64502: [[1574, 1744], 256],
            64503: [[1574, 1744], 256],
            64504: [[1574, 1744], 256],
            64505: [[1574, 1609], 256],
            64506: [[1574, 1609], 256],
            64507: [[1574, 1609], 256],
            64508: [[1740], 256],
            64509: [[1740], 256],
            64510: [[1740], 256],
            64511: [[1740], 256],
          },
          64512: {
            64512: [[1574, 1580], 256],
            64513: [[1574, 1581], 256],
            64514: [[1574, 1605], 256],
            64515: [[1574, 1609], 256],
            64516: [[1574, 1610], 256],
            64517: [[1576, 1580], 256],
            64518: [[1576, 1581], 256],
            64519: [[1576, 1582], 256],
            64520: [[1576, 1605], 256],
            64521: [[1576, 1609], 256],
            64522: [[1576, 1610], 256],
            64523: [[1578, 1580], 256],
            64524: [[1578, 1581], 256],
            64525: [[1578, 1582], 256],
            64526: [[1578, 1605], 256],
            64527: [[1578, 1609], 256],
            64528: [[1578, 1610], 256],
            64529: [[1579, 1580], 256],
            64530: [[1579, 1605], 256],
            64531: [[1579, 1609], 256],
            64532: [[1579, 1610], 256],
            64533: [[1580, 1581], 256],
            64534: [[1580, 1605], 256],
            64535: [[1581, 1580], 256],
            64536: [[1581, 1605], 256],
            64537: [[1582, 1580], 256],
            64538: [[1582, 1581], 256],
            64539: [[1582, 1605], 256],
            64540: [[1587, 1580], 256],
            64541: [[1587, 1581], 256],
            64542: [[1587, 1582], 256],
            64543: [[1587, 1605], 256],
            64544: [[1589, 1581], 256],
            64545: [[1589, 1605], 256],
            64546: [[1590, 1580], 256],
            64547: [[1590, 1581], 256],
            64548: [[1590, 1582], 256],
            64549: [[1590, 1605], 256],
            64550: [[1591, 1581], 256],
            64551: [[1591, 1605], 256],
            64552: [[1592, 1605], 256],
            64553: [[1593, 1580], 256],
            64554: [[1593, 1605], 256],
            64555: [[1594, 1580], 256],
            64556: [[1594, 1605], 256],
            64557: [[1601, 1580], 256],
            64558: [[1601, 1581], 256],
            64559: [[1601, 1582], 256],
            64560: [[1601, 1605], 256],
            64561: [[1601, 1609], 256],
            64562: [[1601, 1610], 256],
            64563: [[1602, 1581], 256],
            64564: [[1602, 1605], 256],
            64565: [[1602, 1609], 256],
            64566: [[1602, 1610], 256],
            64567: [[1603, 1575], 256],
            64568: [[1603, 1580], 256],
            64569: [[1603, 1581], 256],
            64570: [[1603, 1582], 256],
            64571: [[1603, 1604], 256],
            64572: [[1603, 1605], 256],
            64573: [[1603, 1609], 256],
            64574: [[1603, 1610], 256],
            64575: [[1604, 1580], 256],
            64576: [[1604, 1581], 256],
            64577: [[1604, 1582], 256],
            64578: [[1604, 1605], 256],
            64579: [[1604, 1609], 256],
            64580: [[1604, 1610], 256],
            64581: [[1605, 1580], 256],
            64582: [[1605, 1581], 256],
            64583: [[1605, 1582], 256],
            64584: [[1605, 1605], 256],
            64585: [[1605, 1609], 256],
            64586: [[1605, 1610], 256],
            64587: [[1606, 1580], 256],
            64588: [[1606, 1581], 256],
            64589: [[1606, 1582], 256],
            64590: [[1606, 1605], 256],
            64591: [[1606, 1609], 256],
            64592: [[1606, 1610], 256],
            64593: [[1607, 1580], 256],
            64594: [[1607, 1605], 256],
            64595: [[1607, 1609], 256],
            64596: [[1607, 1610], 256],
            64597: [[1610, 1580], 256],
            64598: [[1610, 1581], 256],
            64599: [[1610, 1582], 256],
            64600: [[1610, 1605], 256],
            64601: [[1610, 1609], 256],
            64602: [[1610, 1610], 256],
            64603: [[1584, 1648], 256],
            64604: [[1585, 1648], 256],
            64605: [[1609, 1648], 256],
            64606: [[32, 1612, 1617], 256],
            64607: [[32, 1613, 1617], 256],
            64608: [[32, 1614, 1617], 256],
            64609: [[32, 1615, 1617], 256],
            64610: [[32, 1616, 1617], 256],
            64611: [[32, 1617, 1648], 256],
            64612: [[1574, 1585], 256],
            64613: [[1574, 1586], 256],
            64614: [[1574, 1605], 256],
            64615: [[1574, 1606], 256],
            64616: [[1574, 1609], 256],
            64617: [[1574, 1610], 256],
            64618: [[1576, 1585], 256],
            64619: [[1576, 1586], 256],
            64620: [[1576, 1605], 256],
            64621: [[1576, 1606], 256],
            64622: [[1576, 1609], 256],
            64623: [[1576, 1610], 256],
            64624: [[1578, 1585], 256],
            64625: [[1578, 1586], 256],
            64626: [[1578, 1605], 256],
            64627: [[1578, 1606], 256],
            64628: [[1578, 1609], 256],
            64629: [[1578, 1610], 256],
            64630: [[1579, 1585], 256],
            64631: [[1579, 1586], 256],
            64632: [[1579, 1605], 256],
            64633: [[1579, 1606], 256],
            64634: [[1579, 1609], 256],
            64635: [[1579, 1610], 256],
            64636: [[1601, 1609], 256],
            64637: [[1601, 1610], 256],
            64638: [[1602, 1609], 256],
            64639: [[1602, 1610], 256],
            64640: [[1603, 1575], 256],
            64641: [[1603, 1604], 256],
            64642: [[1603, 1605], 256],
            64643: [[1603, 1609], 256],
            64644: [[1603, 1610], 256],
            64645: [[1604, 1605], 256],
            64646: [[1604, 1609], 256],
            64647: [[1604, 1610], 256],
            64648: [[1605, 1575], 256],
            64649: [[1605, 1605], 256],
            64650: [[1606, 1585], 256],
            64651: [[1606, 1586], 256],
            64652: [[1606, 1605], 256],
            64653: [[1606, 1606], 256],
            64654: [[1606, 1609], 256],
            64655: [[1606, 1610], 256],
            64656: [[1609, 1648], 256],
            64657: [[1610, 1585], 256],
            64658: [[1610, 1586], 256],
            64659: [[1610, 1605], 256],
            64660: [[1610, 1606], 256],
            64661: [[1610, 1609], 256],
            64662: [[1610, 1610], 256],
            64663: [[1574, 1580], 256],
            64664: [[1574, 1581], 256],
            64665: [[1574, 1582], 256],
            64666: [[1574, 1605], 256],
            64667: [[1574, 1607], 256],
            64668: [[1576, 1580], 256],
            64669: [[1576, 1581], 256],
            64670: [[1576, 1582], 256],
            64671: [[1576, 1605], 256],
            64672: [[1576, 1607], 256],
            64673: [[1578, 1580], 256],
            64674: [[1578, 1581], 256],
            64675: [[1578, 1582], 256],
            64676: [[1578, 1605], 256],
            64677: [[1578, 1607], 256],
            64678: [[1579, 1605], 256],
            64679: [[1580, 1581], 256],
            64680: [[1580, 1605], 256],
            64681: [[1581, 1580], 256],
            64682: [[1581, 1605], 256],
            64683: [[1582, 1580], 256],
            64684: [[1582, 1605], 256],
            64685: [[1587, 1580], 256],
            64686: [[1587, 1581], 256],
            64687: [[1587, 1582], 256],
            64688: [[1587, 1605], 256],
            64689: [[1589, 1581], 256],
            64690: [[1589, 1582], 256],
            64691: [[1589, 1605], 256],
            64692: [[1590, 1580], 256],
            64693: [[1590, 1581], 256],
            64694: [[1590, 1582], 256],
            64695: [[1590, 1605], 256],
            64696: [[1591, 1581], 256],
            64697: [[1592, 1605], 256],
            64698: [[1593, 1580], 256],
            64699: [[1593, 1605], 256],
            64700: [[1594, 1580], 256],
            64701: [[1594, 1605], 256],
            64702: [[1601, 1580], 256],
            64703: [[1601, 1581], 256],
            64704: [[1601, 1582], 256],
            64705: [[1601, 1605], 256],
            64706: [[1602, 1581], 256],
            64707: [[1602, 1605], 256],
            64708: [[1603, 1580], 256],
            64709: [[1603, 1581], 256],
            64710: [[1603, 1582], 256],
            64711: [[1603, 1604], 256],
            64712: [[1603, 1605], 256],
            64713: [[1604, 1580], 256],
            64714: [[1604, 1581], 256],
            64715: [[1604, 1582], 256],
            64716: [[1604, 1605], 256],
            64717: [[1604, 1607], 256],
            64718: [[1605, 1580], 256],
            64719: [[1605, 1581], 256],
            64720: [[1605, 1582], 256],
            64721: [[1605, 1605], 256],
            64722: [[1606, 1580], 256],
            64723: [[1606, 1581], 256],
            64724: [[1606, 1582], 256],
            64725: [[1606, 1605], 256],
            64726: [[1606, 1607], 256],
            64727: [[1607, 1580], 256],
            64728: [[1607, 1605], 256],
            64729: [[1607, 1648], 256],
            64730: [[1610, 1580], 256],
            64731: [[1610, 1581], 256],
            64732: [[1610, 1582], 256],
            64733: [[1610, 1605], 256],
            64734: [[1610, 1607], 256],
            64735: [[1574, 1605], 256],
            64736: [[1574, 1607], 256],
            64737: [[1576, 1605], 256],
            64738: [[1576, 1607], 256],
            64739: [[1578, 1605], 256],
            64740: [[1578, 1607], 256],
            64741: [[1579, 1605], 256],
            64742: [[1579, 1607], 256],
            64743: [[1587, 1605], 256],
            64744: [[1587, 1607], 256],
            64745: [[1588, 1605], 256],
            64746: [[1588, 1607], 256],
            64747: [[1603, 1604], 256],
            64748: [[1603, 1605], 256],
            64749: [[1604, 1605], 256],
            64750: [[1606, 1605], 256],
            64751: [[1606, 1607], 256],
            64752: [[1610, 1605], 256],
            64753: [[1610, 1607], 256],
            64754: [[1600, 1614, 1617], 256],
            64755: [[1600, 1615, 1617], 256],
            64756: [[1600, 1616, 1617], 256],
            64757: [[1591, 1609], 256],
            64758: [[1591, 1610], 256],
            64759: [[1593, 1609], 256],
            64760: [[1593, 1610], 256],
            64761: [[1594, 1609], 256],
            64762: [[1594, 1610], 256],
            64763: [[1587, 1609], 256],
            64764: [[1587, 1610], 256],
            64765: [[1588, 1609], 256],
            64766: [[1588, 1610], 256],
            64767: [[1581, 1609], 256],
          },
          64768: {
            64768: [[1581, 1610], 256],
            64769: [[1580, 1609], 256],
            64770: [[1580, 1610], 256],
            64771: [[1582, 1609], 256],
            64772: [[1582, 1610], 256],
            64773: [[1589, 1609], 256],
            64774: [[1589, 1610], 256],
            64775: [[1590, 1609], 256],
            64776: [[1590, 1610], 256],
            64777: [[1588, 1580], 256],
            64778: [[1588, 1581], 256],
            64779: [[1588, 1582], 256],
            64780: [[1588, 1605], 256],
            64781: [[1588, 1585], 256],
            64782: [[1587, 1585], 256],
            64783: [[1589, 1585], 256],
            64784: [[1590, 1585], 256],
            64785: [[1591, 1609], 256],
            64786: [[1591, 1610], 256],
            64787: [[1593, 1609], 256],
            64788: [[1593, 1610], 256],
            64789: [[1594, 1609], 256],
            64790: [[1594, 1610], 256],
            64791: [[1587, 1609], 256],
            64792: [[1587, 1610], 256],
            64793: [[1588, 1609], 256],
            64794: [[1588, 1610], 256],
            64795: [[1581, 1609], 256],
            64796: [[1581, 1610], 256],
            64797: [[1580, 1609], 256],
            64798: [[1580, 1610], 256],
            64799: [[1582, 1609], 256],
            64800: [[1582, 1610], 256],
            64801: [[1589, 1609], 256],
            64802: [[1589, 1610], 256],
            64803: [[1590, 1609], 256],
            64804: [[1590, 1610], 256],
            64805: [[1588, 1580], 256],
            64806: [[1588, 1581], 256],
            64807: [[1588, 1582], 256],
            64808: [[1588, 1605], 256],
            64809: [[1588, 1585], 256],
            64810: [[1587, 1585], 256],
            64811: [[1589, 1585], 256],
            64812: [[1590, 1585], 256],
            64813: [[1588, 1580], 256],
            64814: [[1588, 1581], 256],
            64815: [[1588, 1582], 256],
            64816: [[1588, 1605], 256],
            64817: [[1587, 1607], 256],
            64818: [[1588, 1607], 256],
            64819: [[1591, 1605], 256],
            64820: [[1587, 1580], 256],
            64821: [[1587, 1581], 256],
            64822: [[1587, 1582], 256],
            64823: [[1588, 1580], 256],
            64824: [[1588, 1581], 256],
            64825: [[1588, 1582], 256],
            64826: [[1591, 1605], 256],
            64827: [[1592, 1605], 256],
            64828: [[1575, 1611], 256],
            64829: [[1575, 1611], 256],
            64848: [[1578, 1580, 1605], 256],
            64849: [[1578, 1581, 1580], 256],
            64850: [[1578, 1581, 1580], 256],
            64851: [[1578, 1581, 1605], 256],
            64852: [[1578, 1582, 1605], 256],
            64853: [[1578, 1605, 1580], 256],
            64854: [[1578, 1605, 1581], 256],
            64855: [[1578, 1605, 1582], 256],
            64856: [[1580, 1605, 1581], 256],
            64857: [[1580, 1605, 1581], 256],
            64858: [[1581, 1605, 1610], 256],
            64859: [[1581, 1605, 1609], 256],
            64860: [[1587, 1581, 1580], 256],
            64861: [[1587, 1580, 1581], 256],
            64862: [[1587, 1580, 1609], 256],
            64863: [[1587, 1605, 1581], 256],
            64864: [[1587, 1605, 1581], 256],
            64865: [[1587, 1605, 1580], 256],
            64866: [[1587, 1605, 1605], 256],
            64867: [[1587, 1605, 1605], 256],
            64868: [[1589, 1581, 1581], 256],
            64869: [[1589, 1581, 1581], 256],
            64870: [[1589, 1605, 1605], 256],
            64871: [[1588, 1581, 1605], 256],
            64872: [[1588, 1581, 1605], 256],
            64873: [[1588, 1580, 1610], 256],
            64874: [[1588, 1605, 1582], 256],
            64875: [[1588, 1605, 1582], 256],
            64876: [[1588, 1605, 1605], 256],
            64877: [[1588, 1605, 1605], 256],
            64878: [[1590, 1581, 1609], 256],
            64879: [[1590, 1582, 1605], 256],
            64880: [[1590, 1582, 1605], 256],
            64881: [[1591, 1605, 1581], 256],
            64882: [[1591, 1605, 1581], 256],
            64883: [[1591, 1605, 1605], 256],
            64884: [[1591, 1605, 1610], 256],
            64885: [[1593, 1580, 1605], 256],
            64886: [[1593, 1605, 1605], 256],
            64887: [[1593, 1605, 1605], 256],
            64888: [[1593, 1605, 1609], 256],
            64889: [[1594, 1605, 1605], 256],
            64890: [[1594, 1605, 1610], 256],
            64891: [[1594, 1605, 1609], 256],
            64892: [[1601, 1582, 1605], 256],
            64893: [[1601, 1582, 1605], 256],
            64894: [[1602, 1605, 1581], 256],
            64895: [[1602, 1605, 1605], 256],
            64896: [[1604, 1581, 1605], 256],
            64897: [[1604, 1581, 1610], 256],
            64898: [[1604, 1581, 1609], 256],
            64899: [[1604, 1580, 1580], 256],
            64900: [[1604, 1580, 1580], 256],
            64901: [[1604, 1582, 1605], 256],
            64902: [[1604, 1582, 1605], 256],
            64903: [[1604, 1605, 1581], 256],
            64904: [[1604, 1605, 1581], 256],
            64905: [[1605, 1581, 1580], 256],
            64906: [[1605, 1581, 1605], 256],
            64907: [[1605, 1581, 1610], 256],
            64908: [[1605, 1580, 1581], 256],
            64909: [[1605, 1580, 1605], 256],
            64910: [[1605, 1582, 1580], 256],
            64911: [[1605, 1582, 1605], 256],
            64914: [[1605, 1580, 1582], 256],
            64915: [[1607, 1605, 1580], 256],
            64916: [[1607, 1605, 1605], 256],
            64917: [[1606, 1581, 1605], 256],
            64918: [[1606, 1581, 1609], 256],
            64919: [[1606, 1580, 1605], 256],
            64920: [[1606, 1580, 1605], 256],
            64921: [[1606, 1580, 1609], 256],
            64922: [[1606, 1605, 1610], 256],
            64923: [[1606, 1605, 1609], 256],
            64924: [[1610, 1605, 1605], 256],
            64925: [[1610, 1605, 1605], 256],
            64926: [[1576, 1582, 1610], 256],
            64927: [[1578, 1580, 1610], 256],
            64928: [[1578, 1580, 1609], 256],
            64929: [[1578, 1582, 1610], 256],
            64930: [[1578, 1582, 1609], 256],
            64931: [[1578, 1605, 1610], 256],
            64932: [[1578, 1605, 1609], 256],
            64933: [[1580, 1605, 1610], 256],
            64934: [[1580, 1581, 1609], 256],
            64935: [[1580, 1605, 1609], 256],
            64936: [[1587, 1582, 1609], 256],
            64937: [[1589, 1581, 1610], 256],
            64938: [[1588, 1581, 1610], 256],
            64939: [[1590, 1581, 1610], 256],
            64940: [[1604, 1580, 1610], 256],
            64941: [[1604, 1605, 1610], 256],
            64942: [[1610, 1581, 1610], 256],
            64943: [[1610, 1580, 1610], 256],
            64944: [[1610, 1605, 1610], 256],
            64945: [[1605, 1605, 1610], 256],
            64946: [[1602, 1605, 1610], 256],
            64947: [[1606, 1581, 1610], 256],
            64948: [[1602, 1605, 1581], 256],
            64949: [[1604, 1581, 1605], 256],
            64950: [[1593, 1605, 1610], 256],
            64951: [[1603, 1605, 1610], 256],
            64952: [[1606, 1580, 1581], 256],
            64953: [[1605, 1582, 1610], 256],
            64954: [[1604, 1580, 1605], 256],
            64955: [[1603, 1605, 1605], 256],
            64956: [[1604, 1580, 1605], 256],
            64957: [[1606, 1580, 1581], 256],
            64958: [[1580, 1581, 1610], 256],
            64959: [[1581, 1580, 1610], 256],
            64960: [[1605, 1580, 1610], 256],
            64961: [[1601, 1605, 1610], 256],
            64962: [[1576, 1581, 1610], 256],
            64963: [[1603, 1605, 1605], 256],
            64964: [[1593, 1580, 1605], 256],
            64965: [[1589, 1605, 1605], 256],
            64966: [[1587, 1582, 1610], 256],
            64967: [[1606, 1580, 1610], 256],
            65008: [[1589, 1604, 1746], 256],
            65009: [[1602, 1604, 1746], 256],
            65010: [[1575, 1604, 1604, 1607], 256],
            65011: [[1575, 1603, 1576, 1585], 256],
            65012: [[1605, 1581, 1605, 1583], 256],
            65013: [[1589, 1604, 1593, 1605], 256],
            65014: [[1585, 1587, 1608, 1604], 256],
            65015: [[1593, 1604, 1610, 1607], 256],
            65016: [[1608, 1587, 1604, 1605], 256],
            65017: [[1589, 1604, 1609], 256],
            65018: [
              [
                1589,
                1604,
                1609,
                32,
                1575,
                1604,
                1604,
                1607,
                32,
                1593,
                1604,
                1610,
                1607,
                32,
                1608,
                1587,
                1604,
                1605,
              ],
              256,
            ],
            65019: [[1580, 1604, 32, 1580, 1604, 1575, 1604, 1607], 256],
            65020: [[1585, 1740, 1575, 1604], 256],
          },
          65024: {
            65040: [[44], 256],
            65041: [[12289], 256],
            65042: [[12290], 256],
            65043: [[58], 256],
            65044: [[59], 256],
            65045: [[33], 256],
            65046: [[63], 256],
            65047: [[12310], 256],
            65048: [[12311], 256],
            65049: [[8230], 256],
            65056: [, 230],
            65057: [, 230],
            65058: [, 230],
            65059: [, 230],
            65060: [, 230],
            65061: [, 230],
            65062: [, 230],
            65063: [, 220],
            65064: [, 220],
            65065: [, 220],
            65066: [, 220],
            65067: [, 220],
            65068: [, 220],
            65069: [, 220],
            65072: [[8229], 256],
            65073: [[8212], 256],
            65074: [[8211], 256],
            65075: [[95], 256],
            65076: [[95], 256],
            65077: [[40], 256],
            65078: [[41], 256],
            65079: [[123], 256],
            65080: [[125], 256],
            65081: [[12308], 256],
            65082: [[12309], 256],
            65083: [[12304], 256],
            65084: [[12305], 256],
            65085: [[12298], 256],
            65086: [[12299], 256],
            65087: [[12296], 256],
            65088: [[12297], 256],
            65089: [[12300], 256],
            65090: [[12301], 256],
            65091: [[12302], 256],
            65092: [[12303], 256],
            65095: [[91], 256],
            65096: [[93], 256],
            65097: [[8254], 256],
            65098: [[8254], 256],
            65099: [[8254], 256],
            65100: [[8254], 256],
            65101: [[95], 256],
            65102: [[95], 256],
            65103: [[95], 256],
            65104: [[44], 256],
            65105: [[12289], 256],
            65106: [[46], 256],
            65108: [[59], 256],
            65109: [[58], 256],
            65110: [[63], 256],
            65111: [[33], 256],
            65112: [[8212], 256],
            65113: [[40], 256],
            65114: [[41], 256],
            65115: [[123], 256],
            65116: [[125], 256],
            65117: [[12308], 256],
            65118: [[12309], 256],
            65119: [[35], 256],
            65120: [[38], 256],
            65121: [[42], 256],
            65122: [[43], 256],
            65123: [[45], 256],
            65124: [[60], 256],
            65125: [[62], 256],
            65126: [[61], 256],
            65128: [[92], 256],
            65129: [[36], 256],
            65130: [[37], 256],
            65131: [[64], 256],
            65136: [[32, 1611], 256],
            65137: [[1600, 1611], 256],
            65138: [[32, 1612], 256],
            65140: [[32, 1613], 256],
            65142: [[32, 1614], 256],
            65143: [[1600, 1614], 256],
            65144: [[32, 1615], 256],
            65145: [[1600, 1615], 256],
            65146: [[32, 1616], 256],
            65147: [[1600, 1616], 256],
            65148: [[32, 1617], 256],
            65149: [[1600, 1617], 256],
            65150: [[32, 1618], 256],
            65151: [[1600, 1618], 256],
            65152: [[1569], 256],
            65153: [[1570], 256],
            65154: [[1570], 256],
            65155: [[1571], 256],
            65156: [[1571], 256],
            65157: [[1572], 256],
            65158: [[1572], 256],
            65159: [[1573], 256],
            65160: [[1573], 256],
            65161: [[1574], 256],
            65162: [[1574], 256],
            65163: [[1574], 256],
            65164: [[1574], 256],
            65165: [[1575], 256],
            65166: [[1575], 256],
            65167: [[1576], 256],
            65168: [[1576], 256],
            65169: [[1576], 256],
            65170: [[1576], 256],
            65171: [[1577], 256],
            65172: [[1577], 256],
            65173: [[1578], 256],
            65174: [[1578], 256],
            65175: [[1578], 256],
            65176: [[1578], 256],
            65177: [[1579], 256],
            65178: [[1579], 256],
            65179: [[1579], 256],
            65180: [[1579], 256],
            65181: [[1580], 256],
            65182: [[1580], 256],
            65183: [[1580], 256],
            65184: [[1580], 256],
            65185: [[1581], 256],
            65186: [[1581], 256],
            65187: [[1581], 256],
            65188: [[1581], 256],
            65189: [[1582], 256],
            65190: [[1582], 256],
            65191: [[1582], 256],
            65192: [[1582], 256],
            65193: [[1583], 256],
            65194: [[1583], 256],
            65195: [[1584], 256],
            65196: [[1584], 256],
            65197: [[1585], 256],
            65198: [[1585], 256],
            65199: [[1586], 256],
            65200: [[1586], 256],
            65201: [[1587], 256],
            65202: [[1587], 256],
            65203: [[1587], 256],
            65204: [[1587], 256],
            65205: [[1588], 256],
            65206: [[1588], 256],
            65207: [[1588], 256],
            65208: [[1588], 256],
            65209: [[1589], 256],
            65210: [[1589], 256],
            65211: [[1589], 256],
            65212: [[1589], 256],
            65213: [[1590], 256],
            65214: [[1590], 256],
            65215: [[1590], 256],
            65216: [[1590], 256],
            65217: [[1591], 256],
            65218: [[1591], 256],
            65219: [[1591], 256],
            65220: [[1591], 256],
            65221: [[1592], 256],
            65222: [[1592], 256],
            65223: [[1592], 256],
            65224: [[1592], 256],
            65225: [[1593], 256],
            65226: [[1593], 256],
            65227: [[1593], 256],
            65228: [[1593], 256],
            65229: [[1594], 256],
            65230: [[1594], 256],
            65231: [[1594], 256],
            65232: [[1594], 256],
            65233: [[1601], 256],
            65234: [[1601], 256],
            65235: [[1601], 256],
            65236: [[1601], 256],
            65237: [[1602], 256],
            65238: [[1602], 256],
            65239: [[1602], 256],
            65240: [[1602], 256],
            65241: [[1603], 256],
            65242: [[1603], 256],
            65243: [[1603], 256],
            65244: [[1603], 256],
            65245: [[1604], 256],
            65246: [[1604], 256],
            65247: [[1604], 256],
            65248: [[1604], 256],
            65249: [[1605], 256],
            65250: [[1605], 256],
            65251: [[1605], 256],
            65252: [[1605], 256],
            65253: [[1606], 256],
            65254: [[1606], 256],
            65255: [[1606], 256],
            65256: [[1606], 256],
            65257: [[1607], 256],
            65258: [[1607], 256],
            65259: [[1607], 256],
            65260: [[1607], 256],
            65261: [[1608], 256],
            65262: [[1608], 256],
            65263: [[1609], 256],
            65264: [[1609], 256],
            65265: [[1610], 256],
            65266: [[1610], 256],
            65267: [[1610], 256],
            65268: [[1610], 256],
            65269: [[1604, 1570], 256],
            65270: [[1604, 1570], 256],
            65271: [[1604, 1571], 256],
            65272: [[1604, 1571], 256],
            65273: [[1604, 1573], 256],
            65274: [[1604, 1573], 256],
            65275: [[1604, 1575], 256],
            65276: [[1604, 1575], 256],
          },
          65280: {
            65281: [[33], 256],
            65282: [[34], 256],
            65283: [[35], 256],
            65284: [[36], 256],
            65285: [[37], 256],
            65286: [[38], 256],
            65287: [[39], 256],
            65288: [[40], 256],
            65289: [[41], 256],
            65290: [[42], 256],
            65291: [[43], 256],
            65292: [[44], 256],
            65293: [[45], 256],
            65294: [[46], 256],
            65295: [[47], 256],
            65296: [[48], 256],
            65297: [[49], 256],
            65298: [[50], 256],
            65299: [[51], 256],
            65300: [[52], 256],
            65301: [[53], 256],
            65302: [[54], 256],
            65303: [[55], 256],
            65304: [[56], 256],
            65305: [[57], 256],
            65306: [[58], 256],
            65307: [[59], 256],
            65308: [[60], 256],
            65309: [[61], 256],
            65310: [[62], 256],
            65311: [[63], 256],
            65312: [[64], 256],
            65313: [[65], 256],
            65314: [[66], 256],
            65315: [[67], 256],
            65316: [[68], 256],
            65317: [[69], 256],
            65318: [[70], 256],
            65319: [[71], 256],
            65320: [[72], 256],
            65321: [[73], 256],
            65322: [[74], 256],
            65323: [[75], 256],
            65324: [[76], 256],
            65325: [[77], 256],
            65326: [[78], 256],
            65327: [[79], 256],
            65328: [[80], 256],
            65329: [[81], 256],
            65330: [[82], 256],
            65331: [[83], 256],
            65332: [[84], 256],
            65333: [[85], 256],
            65334: [[86], 256],
            65335: [[87], 256],
            65336: [[88], 256],
            65337: [[89], 256],
            65338: [[90], 256],
            65339: [[91], 256],
            65340: [[92], 256],
            65341: [[93], 256],
            65342: [[94], 256],
            65343: [[95], 256],
            65344: [[96], 256],
            65345: [[97], 256],
            65346: [[98], 256],
            65347: [[99], 256],
            65348: [[100], 256],
            65349: [[101], 256],
            65350: [[102], 256],
            65351: [[103], 256],
            65352: [[104], 256],
            65353: [[105], 256],
            65354: [[106], 256],
            65355: [[107], 256],
            65356: [[108], 256],
            65357: [[109], 256],
            65358: [[110], 256],
            65359: [[111], 256],
            65360: [[112], 256],
            65361: [[113], 256],
            65362: [[114], 256],
            65363: [[115], 256],
            65364: [[116], 256],
            65365: [[117], 256],
            65366: [[118], 256],
            65367: [[119], 256],
            65368: [[120], 256],
            65369: [[121], 256],
            65370: [[122], 256],
            65371: [[123], 256],
            65372: [[124], 256],
            65373: [[125], 256],
            65374: [[126], 256],
            65375: [[10629], 256],
            65376: [[10630], 256],
            65377: [[12290], 256],
            65378: [[12300], 256],
            65379: [[12301], 256],
            65380: [[12289], 256],
            65381: [[12539], 256],
            65382: [[12530], 256],
            65383: [[12449], 256],
            65384: [[12451], 256],
            65385: [[12453], 256],
            65386: [[12455], 256],
            65387: [[12457], 256],
            65388: [[12515], 256],
            65389: [[12517], 256],
            65390: [[12519], 256],
            65391: [[12483], 256],
            65392: [[12540], 256],
            65393: [[12450], 256],
            65394: [[12452], 256],
            65395: [[12454], 256],
            65396: [[12456], 256],
            65397: [[12458], 256],
            65398: [[12459], 256],
            65399: [[12461], 256],
            65400: [[12463], 256],
            65401: [[12465], 256],
            65402: [[12467], 256],
            65403: [[12469], 256],
            65404: [[12471], 256],
            65405: [[12473], 256],
            65406: [[12475], 256],
            65407: [[12477], 256],
            65408: [[12479], 256],
            65409: [[12481], 256],
            65410: [[12484], 256],
            65411: [[12486], 256],
            65412: [[12488], 256],
            65413: [[12490], 256],
            65414: [[12491], 256],
            65415: [[12492], 256],
            65416: [[12493], 256],
            65417: [[12494], 256],
            65418: [[12495], 256],
            65419: [[12498], 256],
            65420: [[12501], 256],
            65421: [[12504], 256],
            65422: [[12507], 256],
            65423: [[12510], 256],
            65424: [[12511], 256],
            65425: [[12512], 256],
            65426: [[12513], 256],
            65427: [[12514], 256],
            65428: [[12516], 256],
            65429: [[12518], 256],
            65430: [[12520], 256],
            65431: [[12521], 256],
            65432: [[12522], 256],
            65433: [[12523], 256],
            65434: [[12524], 256],
            65435: [[12525], 256],
            65436: [[12527], 256],
            65437: [[12531], 256],
            65438: [[12441], 256],
            65439: [[12442], 256],
            65440: [[12644], 256],
            65441: [[12593], 256],
            65442: [[12594], 256],
            65443: [[12595], 256],
            65444: [[12596], 256],
            65445: [[12597], 256],
            65446: [[12598], 256],
            65447: [[12599], 256],
            65448: [[12600], 256],
            65449: [[12601], 256],
            65450: [[12602], 256],
            65451: [[12603], 256],
            65452: [[12604], 256],
            65453: [[12605], 256],
            65454: [[12606], 256],
            65455: [[12607], 256],
            65456: [[12608], 256],
            65457: [[12609], 256],
            65458: [[12610], 256],
            65459: [[12611], 256],
            65460: [[12612], 256],
            65461: [[12613], 256],
            65462: [[12614], 256],
            65463: [[12615], 256],
            65464: [[12616], 256],
            65465: [[12617], 256],
            65466: [[12618], 256],
            65467: [[12619], 256],
            65468: [[12620], 256],
            65469: [[12621], 256],
            65470: [[12622], 256],
            65474: [[12623], 256],
            65475: [[12624], 256],
            65476: [[12625], 256],
            65477: [[12626], 256],
            65478: [[12627], 256],
            65479: [[12628], 256],
            65482: [[12629], 256],
            65483: [[12630], 256],
            65484: [[12631], 256],
            65485: [[12632], 256],
            65486: [[12633], 256],
            65487: [[12634], 256],
            65490: [[12635], 256],
            65491: [[12636], 256],
            65492: [[12637], 256],
            65493: [[12638], 256],
            65494: [[12639], 256],
            65495: [[12640], 256],
            65498: [[12641], 256],
            65499: [[12642], 256],
            65500: [[12643], 256],
            65504: [[162], 256],
            65505: [[163], 256],
            65506: [[172], 256],
            65507: [[175], 256],
            65508: [[166], 256],
            65509: [[165], 256],
            65510: [[8361], 256],
            65512: [[9474], 256],
            65513: [[8592], 256],
            65514: [[8593], 256],
            65515: [[8594], 256],
            65516: [[8595], 256],
            65517: [[9632], 256],
            65518: [[9675], 256],
          },
        };
        var p = {
          nfc: function (e) {
            return d('NFC', e);
          },
          nfd: function (e) {
            return d('NFD', e);
          },
          nfkc: function (e) {
            return d('NFKC', e);
          },
          nfkd: function (e) {
            return d('NFKD', e);
          },
        };
        (e.exports = p),
          (p.shimApplied = !1),
          String.prototype.normalize ||
            (Object.defineProperty(String.prototype, 'normalize', {
              enumerable: !1,
              configurable: !0,
              writable: !0,
              value: function () {
                var e = '' + this,
                  t = void 0 === arguments[0] ? 'NFC' : arguments[0];
                if (null == this)
                  throw new TypeError(
                    'Cannot call method on ' +
                      Object.prototype.toString.call(this)
                  );
                if ('NFC' === t) return p.nfc(e);
                if ('NFD' === t) return p.nfd(e);
                if ('NFKC' === t) return p.nfkc(e);
                if ('NFKD' === t) return p.nfkd(e);
                throw new RangeError('Invalid normalization form: ' + t);
              },
            }),
            (p.shimApplied = !0));
      })();
    },
    function (e) {
      e.exports = JSON.parse(
        '["的","一","是","在","不","了","有","和","人","这","中","大","为","上","个","国","我","以","要","他","时","来","用","们","生","到","作","地","于","出","就","分","对","成","会","可","主","发","年","动","同","工","也","能","下","过","子","说","产","种","面","而","方","后","多","定","行","学","法","所","民","得","经","十","三","之","进","着","等","部","度","家","电","力","里","如","水","化","高","自","二","理","起","小","物","现","实","加","量","都","两","体","制","机","当","使","点","从","业","本","去","把","性","好","应","开","它","合","还","因","由","其","些","然","前","外","天","政","四","日","那","社","义","事","平","形","相","全","表","间","样","与","关","各","重","新","线","内","数","正","心","反","你","明","看","原","又","么","利","比","或","但","质","气","第","向","道","命","此","变","条","只","没","结","解","问","意","建","月","公","无","系","军","很","情","者","最","立","代","想","已","通","并","提","直","题","党","程","展","五","果","料","象","员","革","位","入","常","文","总","次","品","式","活","设","及","管","特","件","长","求","老","头","基","资","边","流","路","级","少","图","山","统","接","知","较","将","组","见","计","别","她","手","角","期","根","论","运","农","指","几","九","区","强","放","决","西","被","干","做","必","战","先","回","则","任","取","据","处","队","南","给","色","光","门","即","保","治","北","造","百","规","热","领","七","海","口","东","导","器","压","志","世","金","增","争","济","阶","油","思","术","极","交","受","联","什","认","六","共","权","收","证","改","清","美","再","采","转","更","单","风","切","打","白","教","速","花","带","安","场","身","车","例","真","务","具","万","每","目","至","达","走","积","示","议","声","报","斗","完","类","八","离","华","名","确","才","科","张","信","马","节","话","米","整","空","元","况","今","集","温","传","土","许","步","群","广","石","记","需","段","研","界","拉","林","律","叫","且","究","观","越","织","装","影","算","低","持","音","众","书","布","复","容","儿","须","际","商","非","验","连","断","深","难","近","矿","千","周","委","素","技","备","半","办","青","省","列","习","响","约","支","般","史","感","劳","便","团","往","酸","历","市","克","何","除","消","构","府","称","太","准","精","值","号","率","族","维","划","选","标","写","存","候","毛","亲","快","效","斯","院","查","江","型","眼","王","按","格","养","易","置","派","层","片","始","却","专","状","育","厂","京","识","适","属","圆","包","火","住","调","满","县","局","照","参","红","细","引","听","该","铁","价","严","首","底","液","官","德","随","病","苏","失","尔","死","讲","配","女","黄","推","显","谈","罪","神","艺","呢","席","含","企","望","密","批","营","项","防","举","球","英","氧","势","告","李","台","落","木","帮","轮","破","亚","师","围","注","远","字","材","排","供","河","态","封","另","施","减","树","溶","怎","止","案","言","士","均","武","固","叶","鱼","波","视","仅","费","紧","爱","左","章","早","朝","害","续","轻","服","试","食","充","兵","源","判","护","司","足","某","练","差","致","板","田","降","黑","犯","负","击","范","继","兴","似","余","坚","曲","输","修","故","城","夫","够","送","笔","船","占","右","财","吃","富","春","职","觉","汉","画","功","巴","跟","虽","杂","飞","检","吸","助","升","阳","互","初","创","抗","考","投","坏","策","古","径","换","未","跑","留","钢","曾","端","责","站","简","述","钱","副","尽","帝","射","草","冲","承","独","令","限","阿","宣","环","双","请","超","微","让","控","州","良","轴","找","否","纪","益","依","优","顶","础","载","倒","房","突","坐","粉","敌","略","客","袁","冷","胜","绝","析","块","剂","测","丝","协","诉","念","陈","仍","罗","盐","友","洋","错","苦","夜","刑","移","频","逐","靠","混","母","短","皮","终","聚","汽","村","云","哪","既","距","卫","停","烈","央","察","烧","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","游","久","菜","味","旧","模","湖","货","损","预","阻","毫","普","稳","乙","妈","植","息","扩","银","语","挥","酒","守","拿","序","纸","医","缺","雨","吗","针","刘","啊","急","唱","误","训","愿","审","附","获","茶","鲜","粮","斤","孩","脱","硫","肥","善","龙","演","父","渐","血","欢","械","掌","歌","沙","刚","攻","谓","盾","讨","晚","粒","乱","燃","矛","乎","杀","药","宁","鲁","贵","钟","煤","读","班","伯","香","介","迫","句","丰","培","握","兰","担","弦","蛋","沉","假","穿","执","答","乐","谁","顺","烟","缩","征","脸","喜","松","脚","困","异","免","背","星","福","买","染","井","概","慢","怕","磁","倍","祖","皇","促","静","补","评","翻","肉","践","尼","衣","宽","扬","棉","希","伤","操","垂","秋","宜","氢","套","督","振","架","亮","末","宪","庆","编","牛","触","映","雷","销","诗","座","居","抓","裂","胞","呼","娘","景","威","绿","晶","厚","盟","衡","鸡","孙","延","危","胶","屋","乡","临","陆","顾","掉","呀","灯","岁","措","束","耐","剧","玉","赵","跳","哥","季","课","凯","胡","额","款","绍","卷","齐","伟","蒸","殖","永","宗","苗","川","炉","岩","弱","零","杨","奏","沿","露","杆","探","滑","镇","饭","浓","航","怀","赶","库","夺","伊","灵","税","途","灭","赛","归","召","鼓","播","盘","裁","险","康","唯","录","菌","纯","借","糖","盖","横","符","私","努","堂","域","枪","润","幅","哈","竟","熟","虫","泽","脑","壤","碳","欧","遍","侧","寨","敢","彻","虑","斜","薄","庭","纳","弹","饲","伸","折","麦","湿","暗","荷","瓦","塞","床","筑","恶","户","访","塔","奇","透","梁","刀","旋","迹","卡","氯","遇","份","毒","泥","退","洗","摆","灰","彩","卖","耗","夏","择","忙","铜","献","硬","予","繁","圈","雪","函","亦","抽","篇","阵","阴","丁","尺","追","堆","雄","迎","泛","爸","楼","避","谋","吨","野","猪","旗","累","偏","典","馆","索","秦","脂","潮","爷","豆","忽","托","惊","塑","遗","愈","朱","替","纤","粗","倾","尚","痛","楚","谢","奋","购","磨","君","池","旁","碎","骨","监","捕","弟","暴","割","贯","殊","释","词","亡","壁","顿","宝","午","尘","闻","揭","炮","残","冬","桥","妇","警","综","招","吴","付","浮","遭","徐","您","摇","谷","赞","箱","隔","订","男","吹","园","纷","唐","败","宋","玻","巨","耕","坦","荣","闭","湾","键","凡","驻","锅","救","恩","剥","凝","碱","齿","截","炼","麻","纺","禁","废","盛","版","缓","净","睛","昌","婚","涉","筒","嘴","插","岸","朗","庄","街","藏","姑","贸","腐","奴","啦","惯","乘","伙","恢","匀","纱","扎","辩","耳","彪","臣","亿","璃","抵","脉","秀","萨","俄","网","舞","店","喷","纵","寸","汗","挂","洪","贺","闪","柬","爆","烯","津","稻","墙","软","勇","像","滚","厘","蒙","芳","肯","坡","柱","荡","腿","仪","旅","尾","轧","冰","贡","登","黎","削","钻","勒","逃","障","氨","郭","峰","币","港","伏","轨","亩","毕","擦","莫","刺","浪","秘","援","株","健","售","股","岛","甘","泡","睡","童","铸","汤","阀","休","汇","舍","牧","绕","炸","哲","磷","绩","朋","淡","尖","启","陷","柴","呈","徒","颜","泪","稍","忘","泵","蓝","拖","洞","授","镜","辛","壮","锋","贫","虚","弯","摩","泰","幼","廷","尊","窗","纲","弄","隶","疑","氏","宫","姐","震","瑞","怪","尤","琴","循","描","膜","违","夹","腰","缘","珠","穷","森","枝","竹","沟","催","绳","忆","邦","剩","幸","浆","栏","拥","牙","贮","礼","滤","钠","纹","罢","拍","咱","喊","袖","埃","勤","罚","焦","潜","伍","墨","欲","缝","姓","刊","饱","仿","奖","铝","鬼","丽","跨","默","挖","链","扫","喝","袋","炭","污","幕","诸","弧","励","梅","奶","洁","灾","舟","鉴","苯","讼","抱","毁","懂","寒","智","埔","寄","届","跃","渡","挑","丹","艰","贝","碰","拔","爹","戴","码","梦","芽","熔","赤","渔","哭","敬","颗","奔","铅","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","仓","魏","锐","晓","氮","兼","隐","碍","赫","拨","忠","肃","缸","牵","抢","博","巧","壳","兄","杜","讯","诚","碧","祥","柯","页","巡","矩","悲","灌","龄","伦","票","寻","桂","铺","圣","恐","恰","郑","趣","抬","荒","腾","贴","柔","滴","猛","阔","辆","妻","填","撤","储","签","闹","扰","紫","砂","递","戏","吊","陶","伐","喂","疗","瓶","婆","抚","臂","摸","忍","虾","蜡","邻","胸","巩","挤","偶","弃","槽","劲","乳","邓","吉","仁","烂","砖","租","乌","舰","伴","瓜","浅","丙","暂","燥","橡","柳","迷","暖","牌","秧","胆","详","簧","踏","瓷","谱","呆","宾","糊","洛","辉","愤","竞","隙","怒","粘","乃","绪","肩","籍","敏","涂","熙","皆","侦","悬","掘","享","纠","醒","狂","锁","淀","恨","牲","霸","爬","赏","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鸭","趋","凤","晨","畜","辈","秩","卵","署","梯","炎","滩","棋","驱","筛","峡","冒","啥","寿","译","浸","泉","帽","迟","硅","疆","贷","漏","稿","冠","嫩","胁","芯","牢","叛","蚀","奥","鸣","岭","羊","凭","串","塘","绘","酵","融","盆","锡","庙","筹","冻","辅","摄","袭","筋","拒","僚","旱","钾","鸟","漆","沈","眉","疏","添","棒","穗","硝","韩","逼","扭","侨","凉","挺","碗","栽","炒","杯","患","馏","劝","豪","辽","勃","鸿","旦","吏","拜","狗","埋","辊","掩","饮","搬","骂","辞","勾","扣","估","蒋","绒","雾","丈","朵","姆","拟","宇","辑","陕","雕","偿","蓄","崇","剪","倡","厅","咬","驶","薯","刷","斥","番","赋","奉","佛","浇","漫","曼","扇","钙","桃","扶","仔","返","俗","亏","腔","鞋","棱","覆","框","悄","叔","撞","骗","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","胀","谐","抛","霉","桑","岗","嘛","衰","盗","渗","脏","赖","涌","甜","曹","阅","肌","哩","厉","烃","纬","毅","昨","伪","症","煮","叹","钉","搭","茎","笼","酷","偷","弓","锥","恒","杰","坑","鼻","翼","纶","叙","狱","逮","罐","络","棚","抑","膨","蔬","寺","骤","穆","冶","枯","册","尸","凸","绅","坯","牺","焰","轰","欣","晋","瘦","御","锭","锦","丧","旬","锻","垄","搜","扑","邀","亭","酯","迈","舒","脆","酶","闲","忧","酚","顽","羽","涨","卸","仗","陪","辟","惩","杭","姚","肚","捉","飘","漂","昆","欺","吾","郎","烷","汁","呵","饰","萧","雅","邮","迁","燕","撒","姻","赴","宴","烦","债","帐","斑","铃","旨","醇","董","饼","雏","姿","拌","傅","腹","妥","揉","贤","拆","歪","葡","胺","丢","浩","徽","昂","垫","挡","览","贪","慰","缴","汪","慌","冯","诺","姜","谊","凶","劣","诬","耀","昏","躺","盈","骑","乔","溪","丛","卢","抹","闷","咨","刮","驾","缆","悟","摘","铒","掷","颇","幻","柄","惠","惨","佳","仇","腊","窝","涤","剑","瞧","堡","泼","葱","罩","霍","捞","胎","苍","滨","俩","捅","湘","砍","霞","邵","萄","疯","淮","遂","熊","粪","烘","宿","档","戈","驳","嫂","裕","徙","箭","捐","肠","撑","晒","辨","殿","莲","摊","搅","酱","屏","疫","哀","蔡","堵","沫","皱","畅","叠","阁","莱","敲","辖","钩","痕","坝","巷","饿","祸","丘","玄","溜","曰","逻","彭","尝","卿","妨","艇","吞","韦","怨","矮","歇"]'
      );
    },
    function (e) {
      e.exports = JSON.parse(
        '["的","一","是","在","不","了","有","和","人","這","中","大","為","上","個","國","我","以","要","他","時","來","用","們","生","到","作","地","於","出","就","分","對","成","會","可","主","發","年","動","同","工","也","能","下","過","子","說","產","種","面","而","方","後","多","定","行","學","法","所","民","得","經","十","三","之","進","著","等","部","度","家","電","力","裡","如","水","化","高","自","二","理","起","小","物","現","實","加","量","都","兩","體","制","機","當","使","點","從","業","本","去","把","性","好","應","開","它","合","還","因","由","其","些","然","前","外","天","政","四","日","那","社","義","事","平","形","相","全","表","間","樣","與","關","各","重","新","線","內","數","正","心","反","你","明","看","原","又","麼","利","比","或","但","質","氣","第","向","道","命","此","變","條","只","沒","結","解","問","意","建","月","公","無","系","軍","很","情","者","最","立","代","想","已","通","並","提","直","題","黨","程","展","五","果","料","象","員","革","位","入","常","文","總","次","品","式","活","設","及","管","特","件","長","求","老","頭","基","資","邊","流","路","級","少","圖","山","統","接","知","較","將","組","見","計","別","她","手","角","期","根","論","運","農","指","幾","九","區","強","放","決","西","被","幹","做","必","戰","先","回","則","任","取","據","處","隊","南","給","色","光","門","即","保","治","北","造","百","規","熱","領","七","海","口","東","導","器","壓","志","世","金","增","爭","濟","階","油","思","術","極","交","受","聯","什","認","六","共","權","收","證","改","清","美","再","採","轉","更","單","風","切","打","白","教","速","花","帶","安","場","身","車","例","真","務","具","萬","每","目","至","達","走","積","示","議","聲","報","鬥","完","類","八","離","華","名","確","才","科","張","信","馬","節","話","米","整","空","元","況","今","集","溫","傳","土","許","步","群","廣","石","記","需","段","研","界","拉","林","律","叫","且","究","觀","越","織","裝","影","算","低","持","音","眾","書","布","复","容","兒","須","際","商","非","驗","連","斷","深","難","近","礦","千","週","委","素","技","備","半","辦","青","省","列","習","響","約","支","般","史","感","勞","便","團","往","酸","歷","市","克","何","除","消","構","府","稱","太","準","精","值","號","率","族","維","劃","選","標","寫","存","候","毛","親","快","效","斯","院","查","江","型","眼","王","按","格","養","易","置","派","層","片","始","卻","專","狀","育","廠","京","識","適","屬","圓","包","火","住","調","滿","縣","局","照","參","紅","細","引","聽","該","鐵","價","嚴","首","底","液","官","德","隨","病","蘇","失","爾","死","講","配","女","黃","推","顯","談","罪","神","藝","呢","席","含","企","望","密","批","營","項","防","舉","球","英","氧","勢","告","李","台","落","木","幫","輪","破","亞","師","圍","注","遠","字","材","排","供","河","態","封","另","施","減","樹","溶","怎","止","案","言","士","均","武","固","葉","魚","波","視","僅","費","緊","愛","左","章","早","朝","害","續","輕","服","試","食","充","兵","源","判","護","司","足","某","練","差","致","板","田","降","黑","犯","負","擊","范","繼","興","似","餘","堅","曲","輸","修","故","城","夫","夠","送","筆","船","佔","右","財","吃","富","春","職","覺","漢","畫","功","巴","跟","雖","雜","飛","檢","吸","助","昇","陽","互","初","創","抗","考","投","壞","策","古","徑","換","未","跑","留","鋼","曾","端","責","站","簡","述","錢","副","盡","帝","射","草","衝","承","獨","令","限","阿","宣","環","雙","請","超","微","讓","控","州","良","軸","找","否","紀","益","依","優","頂","礎","載","倒","房","突","坐","粉","敵","略","客","袁","冷","勝","絕","析","塊","劑","測","絲","協","訴","念","陳","仍","羅","鹽","友","洋","錯","苦","夜","刑","移","頻","逐","靠","混","母","短","皮","終","聚","汽","村","雲","哪","既","距","衛","停","烈","央","察","燒","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","遊","久","菜","味","舊","模","湖","貨","損","預","阻","毫","普","穩","乙","媽","植","息","擴","銀","語","揮","酒","守","拿","序","紙","醫","缺","雨","嗎","針","劉","啊","急","唱","誤","訓","願","審","附","獲","茶","鮮","糧","斤","孩","脫","硫","肥","善","龍","演","父","漸","血","歡","械","掌","歌","沙","剛","攻","謂","盾","討","晚","粒","亂","燃","矛","乎","殺","藥","寧","魯","貴","鐘","煤","讀","班","伯","香","介","迫","句","豐","培","握","蘭","擔","弦","蛋","沉","假","穿","執","答","樂","誰","順","煙","縮","徵","臉","喜","松","腳","困","異","免","背","星","福","買","染","井","概","慢","怕","磁","倍","祖","皇","促","靜","補","評","翻","肉","踐","尼","衣","寬","揚","棉","希","傷","操","垂","秋","宜","氫","套","督","振","架","亮","末","憲","慶","編","牛","觸","映","雷","銷","詩","座","居","抓","裂","胞","呼","娘","景","威","綠","晶","厚","盟","衡","雞","孫","延","危","膠","屋","鄉","臨","陸","顧","掉","呀","燈","歲","措","束","耐","劇","玉","趙","跳","哥","季","課","凱","胡","額","款","紹","卷","齊","偉","蒸","殖","永","宗","苗","川","爐","岩","弱","零","楊","奏","沿","露","桿","探","滑","鎮","飯","濃","航","懷","趕","庫","奪","伊","靈","稅","途","滅","賽","歸","召","鼓","播","盤","裁","險","康","唯","錄","菌","純","借","糖","蓋","橫","符","私","努","堂","域","槍","潤","幅","哈","竟","熟","蟲","澤","腦","壤","碳","歐","遍","側","寨","敢","徹","慮","斜","薄","庭","納","彈","飼","伸","折","麥","濕","暗","荷","瓦","塞","床","築","惡","戶","訪","塔","奇","透","梁","刀","旋","跡","卡","氯","遇","份","毒","泥","退","洗","擺","灰","彩","賣","耗","夏","擇","忙","銅","獻","硬","予","繁","圈","雪","函","亦","抽","篇","陣","陰","丁","尺","追","堆","雄","迎","泛","爸","樓","避","謀","噸","野","豬","旗","累","偏","典","館","索","秦","脂","潮","爺","豆","忽","托","驚","塑","遺","愈","朱","替","纖","粗","傾","尚","痛","楚","謝","奮","購","磨","君","池","旁","碎","骨","監","捕","弟","暴","割","貫","殊","釋","詞","亡","壁","頓","寶","午","塵","聞","揭","炮","殘","冬","橋","婦","警","綜","招","吳","付","浮","遭","徐","您","搖","谷","贊","箱","隔","訂","男","吹","園","紛","唐","敗","宋","玻","巨","耕","坦","榮","閉","灣","鍵","凡","駐","鍋","救","恩","剝","凝","鹼","齒","截","煉","麻","紡","禁","廢","盛","版","緩","淨","睛","昌","婚","涉","筒","嘴","插","岸","朗","莊","街","藏","姑","貿","腐","奴","啦","慣","乘","夥","恢","勻","紗","扎","辯","耳","彪","臣","億","璃","抵","脈","秀","薩","俄","網","舞","店","噴","縱","寸","汗","掛","洪","賀","閃","柬","爆","烯","津","稻","牆","軟","勇","像","滾","厘","蒙","芳","肯","坡","柱","盪","腿","儀","旅","尾","軋","冰","貢","登","黎","削","鑽","勒","逃","障","氨","郭","峰","幣","港","伏","軌","畝","畢","擦","莫","刺","浪","秘","援","株","健","售","股","島","甘","泡","睡","童","鑄","湯","閥","休","匯","舍","牧","繞","炸","哲","磷","績","朋","淡","尖","啟","陷","柴","呈","徒","顏","淚","稍","忘","泵","藍","拖","洞","授","鏡","辛","壯","鋒","貧","虛","彎","摩","泰","幼","廷","尊","窗","綱","弄","隸","疑","氏","宮","姐","震","瑞","怪","尤","琴","循","描","膜","違","夾","腰","緣","珠","窮","森","枝","竹","溝","催","繩","憶","邦","剩","幸","漿","欄","擁","牙","貯","禮","濾","鈉","紋","罷","拍","咱","喊","袖","埃","勤","罰","焦","潛","伍","墨","欲","縫","姓","刊","飽","仿","獎","鋁","鬼","麗","跨","默","挖","鏈","掃","喝","袋","炭","污","幕","諸","弧","勵","梅","奶","潔","災","舟","鑑","苯","訟","抱","毀","懂","寒","智","埔","寄","屆","躍","渡","挑","丹","艱","貝","碰","拔","爹","戴","碼","夢","芽","熔","赤","漁","哭","敬","顆","奔","鉛","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","倉","魏","銳","曉","氮","兼","隱","礙","赫","撥","忠","肅","缸","牽","搶","博","巧","殼","兄","杜","訊","誠","碧","祥","柯","頁","巡","矩","悲","灌","齡","倫","票","尋","桂","鋪","聖","恐","恰","鄭","趣","抬","荒","騰","貼","柔","滴","猛","闊","輛","妻","填","撤","儲","簽","鬧","擾","紫","砂","遞","戲","吊","陶","伐","餵","療","瓶","婆","撫","臂","摸","忍","蝦","蠟","鄰","胸","鞏","擠","偶","棄","槽","勁","乳","鄧","吉","仁","爛","磚","租","烏","艦","伴","瓜","淺","丙","暫","燥","橡","柳","迷","暖","牌","秧","膽","詳","簧","踏","瓷","譜","呆","賓","糊","洛","輝","憤","競","隙","怒","粘","乃","緒","肩","籍","敏","塗","熙","皆","偵","懸","掘","享","糾","醒","狂","鎖","淀","恨","牲","霸","爬","賞","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鴨","趨","鳳","晨","畜","輩","秩","卵","署","梯","炎","灘","棋","驅","篩","峽","冒","啥","壽","譯","浸","泉","帽","遲","矽","疆","貸","漏","稿","冠","嫩","脅","芯","牢","叛","蝕","奧","鳴","嶺","羊","憑","串","塘","繪","酵","融","盆","錫","廟","籌","凍","輔","攝","襲","筋","拒","僚","旱","鉀","鳥","漆","沈","眉","疏","添","棒","穗","硝","韓","逼","扭","僑","涼","挺","碗","栽","炒","杯","患","餾","勸","豪","遼","勃","鴻","旦","吏","拜","狗","埋","輥","掩","飲","搬","罵","辭","勾","扣","估","蔣","絨","霧","丈","朵","姆","擬","宇","輯","陝","雕","償","蓄","崇","剪","倡","廳","咬","駛","薯","刷","斥","番","賦","奉","佛","澆","漫","曼","扇","鈣","桃","扶","仔","返","俗","虧","腔","鞋","棱","覆","框","悄","叔","撞","騙","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","脹","諧","拋","黴","桑","崗","嘛","衰","盜","滲","臟","賴","湧","甜","曹","閱","肌","哩","厲","烴","緯","毅","昨","偽","症","煮","嘆","釘","搭","莖","籠","酷","偷","弓","錐","恆","傑","坑","鼻","翼","綸","敘","獄","逮","罐","絡","棚","抑","膨","蔬","寺","驟","穆","冶","枯","冊","屍","凸","紳","坯","犧","焰","轟","欣","晉","瘦","禦","錠","錦","喪","旬","鍛","壟","搜","撲","邀","亭","酯","邁","舒","脆","酶","閒","憂","酚","頑","羽","漲","卸","仗","陪","闢","懲","杭","姚","肚","捉","飄","漂","昆","欺","吾","郎","烷","汁","呵","飾","蕭","雅","郵","遷","燕","撒","姻","赴","宴","煩","債","帳","斑","鈴","旨","醇","董","餅","雛","姿","拌","傅","腹","妥","揉","賢","拆","歪","葡","胺","丟","浩","徽","昂","墊","擋","覽","貪","慰","繳","汪","慌","馮","諾","姜","誼","兇","劣","誣","耀","昏","躺","盈","騎","喬","溪","叢","盧","抹","悶","諮","刮","駕","纜","悟","摘","鉺","擲","頗","幻","柄","惠","慘","佳","仇","臘","窩","滌","劍","瞧","堡","潑","蔥","罩","霍","撈","胎","蒼","濱","倆","捅","湘","砍","霞","邵","萄","瘋","淮","遂","熊","糞","烘","宿","檔","戈","駁","嫂","裕","徙","箭","捐","腸","撐","曬","辨","殿","蓮","攤","攪","醬","屏","疫","哀","蔡","堵","沫","皺","暢","疊","閣","萊","敲","轄","鉤","痕","壩","巷","餓","禍","丘","玄","溜","曰","邏","彭","嘗","卿","妨","艇","吞","韋","怨","矮","歇"]'
      );
    },
    function (e) {
      e.exports = JSON.parse(
        '["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"]'
      );
    },
    function (e) {
      e.exports = JSON.parse(
        '["abaisser","abandon","abdiquer","abeille","abolir","aborder","aboutir","aboyer","abrasif","abreuver","abriter","abroger","abrupt","absence","absolu","absurde","abusif","abyssal","académie","acajou","acarien","accabler","accepter","acclamer","accolade","accroche","accuser","acerbe","achat","acheter","aciduler","acier","acompte","acquérir","acronyme","acteur","actif","actuel","adepte","adéquat","adhésif","adjectif","adjuger","admettre","admirer","adopter","adorer","adoucir","adresse","adroit","adulte","adverbe","aérer","aéronef","affaire","affecter","affiche","affreux","affubler","agacer","agencer","agile","agiter","agrafer","agréable","agrume","aider","aiguille","ailier","aimable","aisance","ajouter","ajuster","alarmer","alchimie","alerte","algèbre","algue","aliéner","aliment","alléger","alliage","allouer","allumer","alourdir","alpaga","altesse","alvéole","amateur","ambigu","ambre","aménager","amertume","amidon","amiral","amorcer","amour","amovible","amphibie","ampleur","amusant","analyse","anaphore","anarchie","anatomie","ancien","anéantir","angle","angoisse","anguleux","animal","annexer","annonce","annuel","anodin","anomalie","anonyme","anormal","antenne","antidote","anxieux","apaiser","apéritif","aplanir","apologie","appareil","appeler","apporter","appuyer","aquarium","aqueduc","arbitre","arbuste","ardeur","ardoise","argent","arlequin","armature","armement","armoire","armure","arpenter","arracher","arriver","arroser","arsenic","artériel","article","aspect","asphalte","aspirer","assaut","asservir","assiette","associer","assurer","asticot","astre","astuce","atelier","atome","atrium","atroce","attaque","attentif","attirer","attraper","aubaine","auberge","audace","audible","augurer","aurore","automne","autruche","avaler","avancer","avarice","avenir","averse","aveugle","aviateur","avide","avion","aviser","avoine","avouer","avril","axial","axiome","badge","bafouer","bagage","baguette","baignade","balancer","balcon","baleine","balisage","bambin","bancaire","bandage","banlieue","bannière","banquier","barbier","baril","baron","barque","barrage","bassin","bastion","bataille","bateau","batterie","baudrier","bavarder","belette","bélier","belote","bénéfice","berceau","berger","berline","bermuda","besace","besogne","bétail","beurre","biberon","bicycle","bidule","bijou","bilan","bilingue","billard","binaire","biologie","biopsie","biotype","biscuit","bison","bistouri","bitume","bizarre","blafard","blague","blanchir","blessant","blinder","blond","bloquer","blouson","bobard","bobine","boire","boiser","bolide","bonbon","bondir","bonheur","bonifier","bonus","bordure","borne","botte","boucle","boueux","bougie","boulon","bouquin","bourse","boussole","boutique","boxeur","branche","brasier","brave","brebis","brèche","breuvage","bricoler","brigade","brillant","brioche","brique","brochure","broder","bronzer","brousse","broyeur","brume","brusque","brutal","bruyant","buffle","buisson","bulletin","bureau","burin","bustier","butiner","butoir","buvable","buvette","cabanon","cabine","cachette","cadeau","cadre","caféine","caillou","caisson","calculer","calepin","calibre","calmer","calomnie","calvaire","camarade","caméra","camion","campagne","canal","caneton","canon","cantine","canular","capable","caporal","caprice","capsule","capter","capuche","carabine","carbone","caresser","caribou","carnage","carotte","carreau","carton","cascade","casier","casque","cassure","causer","caution","cavalier","caverne","caviar","cédille","ceinture","céleste","cellule","cendrier","censurer","central","cercle","cérébral","cerise","cerner","cerveau","cesser","chagrin","chaise","chaleur","chambre","chance","chapitre","charbon","chasseur","chaton","chausson","chavirer","chemise","chenille","chéquier","chercher","cheval","chien","chiffre","chignon","chimère","chiot","chlorure","chocolat","choisir","chose","chouette","chrome","chute","cigare","cigogne","cimenter","cinéma","cintrer","circuler","cirer","cirque","citerne","citoyen","citron","civil","clairon","clameur","claquer","classe","clavier","client","cligner","climat","clivage","cloche","clonage","cloporte","cobalt","cobra","cocasse","cocotier","coder","codifier","coffre","cogner","cohésion","coiffer","coincer","colère","colibri","colline","colmater","colonel","combat","comédie","commande","compact","concert","conduire","confier","congeler","connoter","consonne","contact","convexe","copain","copie","corail","corbeau","cordage","corniche","corpus","correct","cortège","cosmique","costume","coton","coude","coupure","courage","couteau","couvrir","coyote","crabe","crainte","cravate","crayon","créature","créditer","crémeux","creuser","crevette","cribler","crier","cristal","critère","croire","croquer","crotale","crucial","cruel","crypter","cubique","cueillir","cuillère","cuisine","cuivre","culminer","cultiver","cumuler","cupide","curatif","curseur","cyanure","cycle","cylindre","cynique","daigner","damier","danger","danseur","dauphin","débattre","débiter","déborder","débrider","débutant","décaler","décembre","déchirer","décider","déclarer","décorer","décrire","décupler","dédale","déductif","déesse","défensif","défiler","défrayer","dégager","dégivrer","déglutir","dégrafer","déjeuner","délice","déloger","demander","demeurer","démolir","dénicher","dénouer","dentelle","dénuder","départ","dépenser","déphaser","déplacer","déposer","déranger","dérober","désastre","descente","désert","désigner","désobéir","dessiner","destrier","détacher","détester","détourer","détresse","devancer","devenir","deviner","devoir","diable","dialogue","diamant","dicter","différer","digérer","digital","digne","diluer","dimanche","diminuer","dioxyde","directif","diriger","discuter","disposer","dissiper","distance","divertir","diviser","docile","docteur","dogme","doigt","domaine","domicile","dompter","donateur","donjon","donner","dopamine","dortoir","dorure","dosage","doseur","dossier","dotation","douanier","double","douceur","douter","doyen","dragon","draper","dresser","dribbler","droiture","duperie","duplexe","durable","durcir","dynastie","éblouir","écarter","écharpe","échelle","éclairer","éclipse","éclore","écluse","école","économie","écorce","écouter","écraser","écrémer","écrivain","écrou","écume","écureuil","édifier","éduquer","effacer","effectif","effigie","effort","effrayer","effusion","égaliser","égarer","éjecter","élaborer","élargir","électron","élégant","éléphant","élève","éligible","élitisme","éloge","élucider","éluder","emballer","embellir","embryon","émeraude","émission","emmener","émotion","émouvoir","empereur","employer","emporter","emprise","émulsion","encadrer","enchère","enclave","encoche","endiguer","endosser","endroit","enduire","énergie","enfance","enfermer","enfouir","engager","engin","englober","énigme","enjamber","enjeu","enlever","ennemi","ennuyeux","enrichir","enrobage","enseigne","entasser","entendre","entier","entourer","entraver","énumérer","envahir","enviable","envoyer","enzyme","éolien","épaissir","épargne","épatant","épaule","épicerie","épidémie","épier","épilogue","épine","épisode","épitaphe","époque","épreuve","éprouver","épuisant","équerre","équipe","ériger","érosion","erreur","éruption","escalier","espadon","espèce","espiègle","espoir","esprit","esquiver","essayer","essence","essieu","essorer","estime","estomac","estrade","étagère","étaler","étanche","étatique","éteindre","étendoir","éternel","éthanol","éthique","ethnie","étirer","étoffer","étoile","étonnant","étourdir","étrange","étroit","étude","euphorie","évaluer","évasion","éventail","évidence","éviter","évolutif","évoquer","exact","exagérer","exaucer","exceller","excitant","exclusif","excuse","exécuter","exemple","exercer","exhaler","exhorter","exigence","exiler","exister","exotique","expédier","explorer","exposer","exprimer","exquis","extensif","extraire","exulter","fable","fabuleux","facette","facile","facture","faiblir","falaise","fameux","famille","farceur","farfelu","farine","farouche","fasciner","fatal","fatigue","faucon","fautif","faveur","favori","fébrile","féconder","fédérer","félin","femme","fémur","fendoir","féodal","fermer","féroce","ferveur","festival","feuille","feutre","février","fiasco","ficeler","fictif","fidèle","figure","filature","filetage","filière","filleul","filmer","filou","filtrer","financer","finir","fiole","firme","fissure","fixer","flairer","flamme","flasque","flatteur","fléau","flèche","fleur","flexion","flocon","flore","fluctuer","fluide","fluvial","folie","fonderie","fongible","fontaine","forcer","forgeron","formuler","fortune","fossile","foudre","fougère","fouiller","foulure","fourmi","fragile","fraise","franchir","frapper","frayeur","frégate","freiner","frelon","frémir","frénésie","frère","friable","friction","frisson","frivole","froid","fromage","frontal","frotter","fruit","fugitif","fuite","fureur","furieux","furtif","fusion","futur","gagner","galaxie","galerie","gambader","garantir","gardien","garnir","garrigue","gazelle","gazon","géant","gélatine","gélule","gendarme","général","génie","genou","gentil","géologie","géomètre","géranium","germe","gestuel","geyser","gibier","gicler","girafe","givre","glace","glaive","glisser","globe","gloire","glorieux","golfeur","gomme","gonfler","gorge","gorille","goudron","gouffre","goulot","goupille","gourmand","goutte","graduel","graffiti","graine","grand","grappin","gratuit","gravir","grenat","griffure","griller","grimper","grogner","gronder","grotte","groupe","gruger","grutier","gruyère","guépard","guerrier","guide","guimauve","guitare","gustatif","gymnaste","gyrostat","habitude","hachoir","halte","hameau","hangar","hanneton","haricot","harmonie","harpon","hasard","hélium","hématome","herbe","hérisson","hermine","héron","hésiter","heureux","hiberner","hibou","hilarant","histoire","hiver","homard","hommage","homogène","honneur","honorer","honteux","horde","horizon","horloge","hormone","horrible","houleux","housse","hublot","huileux","humain","humble","humide","humour","hurler","hydromel","hygiène","hymne","hypnose","idylle","ignorer","iguane","illicite","illusion","image","imbiber","imiter","immense","immobile","immuable","impact","impérial","implorer","imposer","imprimer","imputer","incarner","incendie","incident","incliner","incolore","indexer","indice","inductif","inédit","ineptie","inexact","infini","infliger","informer","infusion","ingérer","inhaler","inhiber","injecter","injure","innocent","inoculer","inonder","inscrire","insecte","insigne","insolite","inspirer","instinct","insulter","intact","intense","intime","intrigue","intuitif","inutile","invasion","inventer","inviter","invoquer","ironique","irradier","irréel","irriter","isoler","ivoire","ivresse","jaguar","jaillir","jambe","janvier","jardin","jauger","jaune","javelot","jetable","jeton","jeudi","jeunesse","joindre","joncher","jongler","joueur","jouissif","journal","jovial","joyau","joyeux","jubiler","jugement","junior","jupon","juriste","justice","juteux","juvénile","kayak","kimono","kiosque","label","labial","labourer","lacérer","lactose","lagune","laine","laisser","laitier","lambeau","lamelle","lampe","lanceur","langage","lanterne","lapin","largeur","larme","laurier","lavabo","lavoir","lecture","légal","léger","légume","lessive","lettre","levier","lexique","lézard","liasse","libérer","libre","licence","licorne","liège","lièvre","ligature","ligoter","ligue","limer","limite","limonade","limpide","linéaire","lingot","lionceau","liquide","lisière","lister","lithium","litige","littoral","livreur","logique","lointain","loisir","lombric","loterie","louer","lourd","loutre","louve","loyal","lubie","lucide","lucratif","lueur","lugubre","luisant","lumière","lunaire","lundi","luron","lutter","luxueux","machine","magasin","magenta","magique","maigre","maillon","maintien","mairie","maison","majorer","malaxer","maléfice","malheur","malice","mallette","mammouth","mandater","maniable","manquant","manteau","manuel","marathon","marbre","marchand","mardi","maritime","marqueur","marron","marteler","mascotte","massif","matériel","matière","matraque","maudire","maussade","mauve","maximal","méchant","méconnu","médaille","médecin","méditer","méduse","meilleur","mélange","mélodie","membre","mémoire","menacer","mener","menhir","mensonge","mentor","mercredi","mérite","merle","messager","mesure","métal","météore","méthode","métier","meuble","miauler","microbe","miette","mignon","migrer","milieu","million","mimique","mince","minéral","minimal","minorer","minute","miracle","miroiter","missile","mixte","mobile","moderne","moelleux","mondial","moniteur","monnaie","monotone","monstre","montagne","monument","moqueur","morceau","morsure","mortier","moteur","motif","mouche","moufle","moulin","mousson","mouton","mouvant","multiple","munition","muraille","murène","murmure","muscle","muséum","musicien","mutation","muter","mutuel","myriade","myrtille","mystère","mythique","nageur","nappe","narquois","narrer","natation","nation","nature","naufrage","nautique","navire","nébuleux","nectar","néfaste","négation","négliger","négocier","neige","nerveux","nettoyer","neurone","neutron","neveu","niche","nickel","nitrate","niveau","noble","nocif","nocturne","noirceur","noisette","nomade","nombreux","nommer","normatif","notable","notifier","notoire","nourrir","nouveau","novateur","novembre","novice","nuage","nuancer","nuire","nuisible","numéro","nuptial","nuque","nutritif","obéir","objectif","obliger","obscur","observer","obstacle","obtenir","obturer","occasion","occuper","océan","octobre","octroyer","octupler","oculaire","odeur","odorant","offenser","officier","offrir","ogive","oiseau","oisillon","olfactif","olivier","ombrage","omettre","onctueux","onduler","onéreux","onirique","opale","opaque","opérer","opinion","opportun","opprimer","opter","optique","orageux","orange","orbite","ordonner","oreille","organe","orgueil","orifice","ornement","orque","ortie","osciller","osmose","ossature","otarie","ouragan","ourson","outil","outrager","ouvrage","ovation","oxyde","oxygène","ozone","paisible","palace","palmarès","palourde","palper","panache","panda","pangolin","paniquer","panneau","panorama","pantalon","papaye","papier","papoter","papyrus","paradoxe","parcelle","paresse","parfumer","parler","parole","parrain","parsemer","partager","parure","parvenir","passion","pastèque","paternel","patience","patron","pavillon","pavoiser","payer","paysage","peigne","peintre","pelage","pélican","pelle","pelouse","peluche","pendule","pénétrer","pénible","pensif","pénurie","pépite","péplum","perdrix","perforer","période","permuter","perplexe","persil","perte","peser","pétale","petit","pétrir","peuple","pharaon","phobie","phoque","photon","phrase","physique","piano","pictural","pièce","pierre","pieuvre","pilote","pinceau","pipette","piquer","pirogue","piscine","piston","pivoter","pixel","pizza","placard","plafond","plaisir","planer","plaque","plastron","plateau","pleurer","plexus","pliage","plomb","plonger","pluie","plumage","pochette","poésie","poète","pointe","poirier","poisson","poivre","polaire","policier","pollen","polygone","pommade","pompier","ponctuel","pondérer","poney","portique","position","posséder","posture","potager","poteau","potion","pouce","poulain","poumon","pourpre","poussin","pouvoir","prairie","pratique","précieux","prédire","préfixe","prélude","prénom","présence","prétexte","prévoir","primitif","prince","prison","priver","problème","procéder","prodige","profond","progrès","proie","projeter","prologue","promener","propre","prospère","protéger","prouesse","proverbe","prudence","pruneau","psychose","public","puceron","puiser","pulpe","pulsar","punaise","punitif","pupitre","purifier","puzzle","pyramide","quasar","querelle","question","quiétude","quitter","quotient","racine","raconter","radieux","ragondin","raideur","raisin","ralentir","rallonge","ramasser","rapide","rasage","ratisser","ravager","ravin","rayonner","réactif","réagir","réaliser","réanimer","recevoir","réciter","réclamer","récolter","recruter","reculer","recycler","rédiger","redouter","refaire","réflexe","réformer","refrain","refuge","régalien","région","réglage","régulier","réitérer","rejeter","rejouer","relatif","relever","relief","remarque","remède","remise","remonter","remplir","remuer","renard","renfort","renifler","renoncer","rentrer","renvoi","replier","reporter","reprise","reptile","requin","réserve","résineux","résoudre","respect","rester","résultat","rétablir","retenir","réticule","retomber","retracer","réunion","réussir","revanche","revivre","révolte","révulsif","richesse","rideau","rieur","rigide","rigoler","rincer","riposter","risible","risque","rituel","rival","rivière","rocheux","romance","rompre","ronce","rondin","roseau","rosier","rotatif","rotor","rotule","rouge","rouille","rouleau","routine","royaume","ruban","rubis","ruche","ruelle","rugueux","ruiner","ruisseau","ruser","rustique","rythme","sabler","saboter","sabre","sacoche","safari","sagesse","saisir","salade","salive","salon","saluer","samedi","sanction","sanglier","sarcasme","sardine","saturer","saugrenu","saumon","sauter","sauvage","savant","savonner","scalpel","scandale","scélérat","scénario","sceptre","schéma","science","scinder","score","scrutin","sculpter","séance","sécable","sécher","secouer","sécréter","sédatif","séduire","seigneur","séjour","sélectif","semaine","sembler","semence","séminal","sénateur","sensible","sentence","séparer","séquence","serein","sergent","sérieux","serrure","sérum","service","sésame","sévir","sevrage","sextuple","sidéral","siècle","siéger","siffler","sigle","signal","silence","silicium","simple","sincère","sinistre","siphon","sirop","sismique","situer","skier","social","socle","sodium","soigneux","soldat","soleil","solitude","soluble","sombre","sommeil","somnoler","sonde","songeur","sonnette","sonore","sorcier","sortir","sosie","sottise","soucieux","soudure","souffle","soulever","soupape","source","soutirer","souvenir","spacieux","spatial","spécial","sphère","spiral","stable","station","sternum","stimulus","stipuler","strict","studieux","stupeur","styliste","sublime","substrat","subtil","subvenir","succès","sucre","suffixe","suggérer","suiveur","sulfate","superbe","supplier","surface","suricate","surmener","surprise","sursaut","survie","suspect","syllabe","symbole","symétrie","synapse","syntaxe","système","tabac","tablier","tactile","tailler","talent","talisman","talonner","tambour","tamiser","tangible","tapis","taquiner","tarder","tarif","tartine","tasse","tatami","tatouage","taupe","taureau","taxer","témoin","temporel","tenaille","tendre","teneur","tenir","tension","terminer","terne","terrible","tétine","texte","thème","théorie","thérapie","thorax","tibia","tiède","timide","tirelire","tiroir","tissu","titane","titre","tituber","toboggan","tolérant","tomate","tonique","tonneau","toponyme","torche","tordre","tornade","torpille","torrent","torse","tortue","totem","toucher","tournage","tousser","toxine","traction","trafic","tragique","trahir","train","trancher","travail","trèfle","tremper","trésor","treuil","triage","tribunal","tricoter","trilogie","triomphe","tripler","triturer","trivial","trombone","tronc","tropical","troupeau","tuile","tulipe","tumulte","tunnel","turbine","tuteur","tutoyer","tuyau","tympan","typhon","typique","tyran","ubuesque","ultime","ultrason","unanime","unifier","union","unique","unitaire","univers","uranium","urbain","urticant","usage","usine","usuel","usure","utile","utopie","vacarme","vaccin","vagabond","vague","vaillant","vaincre","vaisseau","valable","valise","vallon","valve","vampire","vanille","vapeur","varier","vaseux","vassal","vaste","vecteur","vedette","végétal","véhicule","veinard","véloce","vendredi","vénérer","venger","venimeux","ventouse","verdure","vérin","vernir","verrou","verser","vertu","veston","vétéran","vétuste","vexant","vexer","viaduc","viande","victoire","vidange","vidéo","vignette","vigueur","vilain","village","vinaigre","violon","vipère","virement","virtuose","virus","visage","viseur","vision","visqueux","visuel","vital","vitesse","viticole","vitrine","vivace","vivipare","vocation","voguer","voile","voisin","voiture","volaille","volcan","voltiger","volume","vorace","vortex","voter","vouloir","voyage","voyelle","wagon","xénon","yacht","zèbre","zénith","zeste","zoologie"]'
      );
    },
    function (e) {
      e.exports = JSON.parse(
        '["abaco","abbaglio","abbinato","abete","abisso","abolire","abrasivo","abrogato","accadere","accenno","accusato","acetone","achille","acido","acqua","acre","acrilico","acrobata","acuto","adagio","addebito","addome","adeguato","aderire","adipe","adottare","adulare","affabile","affetto","affisso","affranto","aforisma","afoso","africano","agave","agente","agevole","aggancio","agire","agitare","agonismo","agricolo","agrumeto","aguzzo","alabarda","alato","albatro","alberato","albo","albume","alce","alcolico","alettone","alfa","algebra","aliante","alibi","alimento","allagato","allegro","allievo","allodola","allusivo","almeno","alogeno","alpaca","alpestre","altalena","alterno","alticcio","altrove","alunno","alveolo","alzare","amalgama","amanita","amarena","ambito","ambrato","ameba","america","ametista","amico","ammasso","ammenda","ammirare","ammonito","amore","ampio","ampliare","amuleto","anacardo","anagrafe","analista","anarchia","anatra","anca","ancella","ancora","andare","andrea","anello","angelo","angolare","angusto","anima","annegare","annidato","anno","annuncio","anonimo","anticipo","anzi","apatico","apertura","apode","apparire","appetito","appoggio","approdo","appunto","aprile","arabica","arachide","aragosta","araldica","arancio","aratura","arazzo","arbitro","archivio","ardito","arenile","argento","argine","arguto","aria","armonia","arnese","arredato","arringa","arrosto","arsenico","arso","artefice","arzillo","asciutto","ascolto","asepsi","asettico","asfalto","asino","asola","aspirato","aspro","assaggio","asse","assoluto","assurdo","asta","astenuto","astice","astratto","atavico","ateismo","atomico","atono","attesa","attivare","attorno","attrito","attuale","ausilio","austria","autista","autonomo","autunno","avanzato","avere","avvenire","avviso","avvolgere","azione","azoto","azzimo","azzurro","babele","baccano","bacino","baco","badessa","badilata","bagnato","baita","balcone","baldo","balena","ballata","balzano","bambino","bandire","baraonda","barbaro","barca","baritono","barlume","barocco","basilico","basso","batosta","battuto","baule","bava","bavosa","becco","beffa","belgio","belva","benda","benevole","benigno","benzina","bere","berlina","beta","bibita","bici","bidone","bifido","biga","bilancia","bimbo","binocolo","biologo","bipede","bipolare","birbante","birra","biscotto","bisesto","bisnonno","bisonte","bisturi","bizzarro","blando","blatta","bollito","bonifico","bordo","bosco","botanico","bottino","bozzolo","braccio","bradipo","brama","branca","bravura","bretella","brevetto","brezza","briglia","brillante","brindare","broccolo","brodo","bronzina","brullo","bruno","bubbone","buca","budino","buffone","buio","bulbo","buono","burlone","burrasca","bussola","busta","cadetto","caduco","calamaro","calcolo","calesse","calibro","calmo","caloria","cambusa","camerata","camicia","cammino","camola","campale","canapa","candela","cane","canino","canotto","cantina","capace","capello","capitolo","capogiro","cappero","capra","capsula","carapace","carcassa","cardo","carisma","carovana","carretto","cartolina","casaccio","cascata","caserma","caso","cassone","castello","casuale","catasta","catena","catrame","cauto","cavillo","cedibile","cedrata","cefalo","celebre","cellulare","cena","cenone","centesimo","ceramica","cercare","certo","cerume","cervello","cesoia","cespo","ceto","chela","chiaro","chicca","chiedere","chimera","china","chirurgo","chitarra","ciao","ciclismo","cifrare","cigno","cilindro","ciottolo","circa","cirrosi","citrico","cittadino","ciuffo","civetta","civile","classico","clinica","cloro","cocco","codardo","codice","coerente","cognome","collare","colmato","colore","colposo","coltivato","colza","coma","cometa","commando","comodo","computer","comune","conciso","condurre","conferma","congelare","coniuge","connesso","conoscere","consumo","continuo","convegno","coperto","copione","coppia","copricapo","corazza","cordata","coricato","cornice","corolla","corpo","corredo","corsia","cortese","cosmico","costante","cottura","covato","cratere","cravatta","creato","credere","cremoso","crescita","creta","criceto","crinale","crisi","critico","croce","cronaca","crostata","cruciale","crusca","cucire","cuculo","cugino","cullato","cupola","curatore","cursore","curvo","cuscino","custode","dado","daino","dalmata","damerino","daniela","dannoso","danzare","datato","davanti","davvero","debutto","decennio","deciso","declino","decollo","decreto","dedicato","definito","deforme","degno","delegare","delfino","delirio","delta","demenza","denotato","dentro","deposito","derapata","derivare","deroga","descritto","deserto","desiderio","desumere","detersivo","devoto","diametro","dicembre","diedro","difeso","diffuso","digerire","digitale","diluvio","dinamico","dinnanzi","dipinto","diploma","dipolo","diradare","dire","dirotto","dirupo","disagio","discreto","disfare","disgelo","disposto","distanza","disumano","dito","divano","divelto","dividere","divorato","doblone","docente","doganale","dogma","dolce","domato","domenica","dominare","dondolo","dono","dormire","dote","dottore","dovuto","dozzina","drago","druido","dubbio","dubitare","ducale","duna","duomo","duplice","duraturo","ebano","eccesso","ecco","eclissi","economia","edera","edicola","edile","editoria","educare","egemonia","egli","egoismo","egregio","elaborato","elargire","elegante","elencato","eletto","elevare","elfico","elica","elmo","elsa","eluso","emanato","emblema","emesso","emiro","emotivo","emozione","empirico","emulo","endemico","enduro","energia","enfasi","enoteca","entrare","enzima","epatite","epilogo","episodio","epocale","eppure","equatore","erario","erba","erboso","erede","eremita","erigere","ermetico","eroe","erosivo","errante","esagono","esame","esanime","esaudire","esca","esempio","esercito","esibito","esigente","esistere","esito","esofago","esortato","esoso","espanso","espresso","essenza","esso","esteso","estimare","estonia","estroso","esultare","etilico","etnico","etrusco","etto","euclideo","europa","evaso","evidenza","evitato","evoluto","evviva","fabbrica","faccenda","fachiro","falco","famiglia","fanale","fanfara","fango","fantasma","fare","farfalla","farinoso","farmaco","fascia","fastoso","fasullo","faticare","fato","favoloso","febbre","fecola","fede","fegato","felpa","feltro","femmina","fendere","fenomeno","fermento","ferro","fertile","fessura","festivo","fetta","feudo","fiaba","fiducia","fifa","figurato","filo","finanza","finestra","finire","fiore","fiscale","fisico","fiume","flacone","flamenco","flebo","flemma","florido","fluente","fluoro","fobico","focaccia","focoso","foderato","foglio","folata","folclore","folgore","fondente","fonetico","fonia","fontana","forbito","forchetta","foresta","formica","fornaio","foro","fortezza","forzare","fosfato","fosso","fracasso","frana","frassino","fratello","freccetta","frenata","fresco","frigo","frollino","fronde","frugale","frutta","fucilata","fucsia","fuggente","fulmine","fulvo","fumante","fumetto","fumoso","fune","funzione","fuoco","furbo","furgone","furore","fuso","futile","gabbiano","gaffe","galateo","gallina","galoppo","gambero","gamma","garanzia","garbo","garofano","garzone","gasdotto","gasolio","gastrico","gatto","gaudio","gazebo","gazzella","geco","gelatina","gelso","gemello","gemmato","gene","genitore","gennaio","genotipo","gergo","ghepardo","ghiaccio","ghisa","giallo","gilda","ginepro","giocare","gioiello","giorno","giove","girato","girone","gittata","giudizio","giurato","giusto","globulo","glutine","gnomo","gobba","golf","gomito","gommone","gonfio","gonna","governo","gracile","grado","grafico","grammo","grande","grattare","gravoso","grazia","greca","gregge","grifone","grigio","grinza","grotta","gruppo","guadagno","guaio","guanto","guardare","gufo","guidare","ibernato","icona","identico","idillio","idolo","idra","idrico","idrogeno","igiene","ignaro","ignorato","ilare","illeso","illogico","illudere","imballo","imbevuto","imbocco","imbuto","immane","immerso","immolato","impacco","impeto","impiego","importo","impronta","inalare","inarcare","inattivo","incanto","incendio","inchino","incisivo","incluso","incontro","incrocio","incubo","indagine","india","indole","inedito","infatti","infilare","inflitto","ingaggio","ingegno","inglese","ingordo","ingrosso","innesco","inodore","inoltrare","inondato","insano","insetto","insieme","insonnia","insulina","intasato","intero","intonaco","intuito","inumidire","invalido","invece","invito","iperbole","ipnotico","ipotesi","ippica","iride","irlanda","ironico","irrigato","irrorare","isolato","isotopo","isterico","istituto","istrice","italia","iterare","labbro","labirinto","lacca","lacerato","lacrima","lacuna","laddove","lago","lampo","lancetta","lanterna","lardoso","larga","laringe","lastra","latenza","latino","lattuga","lavagna","lavoro","legale","leggero","lembo","lentezza","lenza","leone","lepre","lesivo","lessato","lesto","letterale","leva","levigato","libero","lido","lievito","lilla","limatura","limitare","limpido","lineare","lingua","liquido","lira","lirica","lisca","lite","litigio","livrea","locanda","lode","logica","lombare","londra","longevo","loquace","lorenzo","loto","lotteria","luce","lucidato","lumaca","luminoso","lungo","lupo","luppolo","lusinga","lusso","lutto","macabro","macchina","macero","macinato","madama","magico","maglia","magnete","magro","maiolica","malafede","malgrado","malinteso","malsano","malto","malumore","mana","mancia","mandorla","mangiare","manifesto","mannaro","manovra","mansarda","mantide","manubrio","mappa","maratona","marcire","maretta","marmo","marsupio","maschera","massaia","mastino","materasso","matricola","mattone","maturo","mazurca","meandro","meccanico","mecenate","medesimo","meditare","mega","melassa","melis","melodia","meninge","meno","mensola","mercurio","merenda","merlo","meschino","mese","messere","mestolo","metallo","metodo","mettere","miagolare","mica","micelio","michele","microbo","midollo","miele","migliore","milano","milite","mimosa","minerale","mini","minore","mirino","mirtillo","miscela","missiva","misto","misurare","mitezza","mitigare","mitra","mittente","mnemonico","modello","modifica","modulo","mogano","mogio","mole","molosso","monastero","monco","mondina","monetario","monile","monotono","monsone","montato","monviso","mora","mordere","morsicato","mostro","motivato","motosega","motto","movenza","movimento","mozzo","mucca","mucosa","muffa","mughetto","mugnaio","mulatto","mulinello","multiplo","mummia","munto","muovere","murale","musa","muscolo","musica","mutevole","muto","nababbo","nafta","nanometro","narciso","narice","narrato","nascere","nastrare","naturale","nautica","naviglio","nebulosa","necrosi","negativo","negozio","nemmeno","neofita","neretto","nervo","nessuno","nettuno","neutrale","neve","nevrotico","nicchia","ninfa","nitido","nobile","nocivo","nodo","nome","nomina","nordico","normale","norvegese","nostrano","notare","notizia","notturno","novella","nucleo","nulla","numero","nuovo","nutrire","nuvola","nuziale","oasi","obbedire","obbligo","obelisco","oblio","obolo","obsoleto","occasione","occhio","occidente","occorrere","occultare","ocra","oculato","odierno","odorare","offerta","offrire","offuscato","oggetto","oggi","ognuno","olandese","olfatto","oliato","oliva","ologramma","oltre","omaggio","ombelico","ombra","omega","omissione","ondoso","onere","onice","onnivoro","onorevole","onta","operato","opinione","opposto","oracolo","orafo","ordine","orecchino","orefice","orfano","organico","origine","orizzonte","orma","ormeggio","ornativo","orologio","orrendo","orribile","ortensia","ortica","orzata","orzo","osare","oscurare","osmosi","ospedale","ospite","ossa","ossidare","ostacolo","oste","otite","otre","ottagono","ottimo","ottobre","ovale","ovest","ovino","oviparo","ovocito","ovunque","ovviare","ozio","pacchetto","pace","pacifico","padella","padrone","paese","paga","pagina","palazzina","palesare","pallido","palo","palude","pandoro","pannello","paolo","paonazzo","paprica","parabola","parcella","parere","pargolo","pari","parlato","parola","partire","parvenza","parziale","passivo","pasticca","patacca","patologia","pattume","pavone","peccato","pedalare","pedonale","peggio","peloso","penare","pendice","penisola","pennuto","penombra","pensare","pentola","pepe","pepita","perbene","percorso","perdonato","perforare","pergamena","periodo","permesso","perno","perplesso","persuaso","pertugio","pervaso","pesatore","pesista","peso","pestifero","petalo","pettine","petulante","pezzo","piacere","pianta","piattino","piccino","picozza","piega","pietra","piffero","pigiama","pigolio","pigro","pila","pilifero","pillola","pilota","pimpante","pineta","pinna","pinolo","pioggia","piombo","piramide","piretico","pirite","pirolisi","pitone","pizzico","placebo","planare","plasma","platano","plenario","pochezza","poderoso","podismo","poesia","poggiare","polenta","poligono","pollice","polmonite","polpetta","polso","poltrona","polvere","pomice","pomodoro","ponte","popoloso","porfido","poroso","porpora","porre","portata","posa","positivo","possesso","postulato","potassio","potere","pranzo","prassi","pratica","precluso","predica","prefisso","pregiato","prelievo","premere","prenotare","preparato","presenza","pretesto","prevalso","prima","principe","privato","problema","procura","produrre","profumo","progetto","prolunga","promessa","pronome","proposta","proroga","proteso","prova","prudente","prugna","prurito","psiche","pubblico","pudica","pugilato","pugno","pulce","pulito","pulsante","puntare","pupazzo","pupilla","puro","quadro","qualcosa","quasi","querela","quota","raccolto","raddoppio","radicale","radunato","raffica","ragazzo","ragione","ragno","ramarro","ramingo","ramo","randagio","rantolare","rapato","rapina","rappreso","rasatura","raschiato","rasente","rassegna","rastrello","rata","ravveduto","reale","recepire","recinto","recluta","recondito","recupero","reddito","redimere","regalato","registro","regola","regresso","relazione","remare","remoto","renna","replica","reprimere","reputare","resa","residente","responso","restauro","rete","retina","retorica","rettifica","revocato","riassunto","ribadire","ribelle","ribrezzo","ricarica","ricco","ricevere","riciclato","ricordo","ricreduto","ridicolo","ridurre","rifasare","riflesso","riforma","rifugio","rigare","rigettato","righello","rilassato","rilevato","rimanere","rimbalzo","rimedio","rimorchio","rinascita","rincaro","rinforzo","rinnovo","rinomato","rinsavito","rintocco","rinuncia","rinvenire","riparato","ripetuto","ripieno","riportare","ripresa","ripulire","risata","rischio","riserva","risibile","riso","rispetto","ristoro","risultato","risvolto","ritardo","ritegno","ritmico","ritrovo","riunione","riva","riverso","rivincita","rivolto","rizoma","roba","robotico","robusto","roccia","roco","rodaggio","rodere","roditore","rogito","rollio","romantico","rompere","ronzio","rosolare","rospo","rotante","rotondo","rotula","rovescio","rubizzo","rubrica","ruga","rullino","rumine","rumoroso","ruolo","rupe","russare","rustico","sabato","sabbiare","sabotato","sagoma","salasso","saldatura","salgemma","salivare","salmone","salone","saltare","saluto","salvo","sapere","sapido","saporito","saraceno","sarcasmo","sarto","sassoso","satellite","satira","satollo","saturno","savana","savio","saziato","sbadiglio","sbalzo","sbancato","sbarra","sbattere","sbavare","sbendare","sbirciare","sbloccato","sbocciato","sbrinare","sbruffone","sbuffare","scabroso","scadenza","scala","scambiare","scandalo","scapola","scarso","scatenare","scavato","scelto","scenico","scettro","scheda","schiena","sciarpa","scienza","scindere","scippo","sciroppo","scivolo","sclerare","scodella","scolpito","scomparto","sconforto","scoprire","scorta","scossone","scozzese","scriba","scrollare","scrutinio","scuderia","scultore","scuola","scuro","scusare","sdebitare","sdoganare","seccatura","secondo","sedano","seggiola","segnalato","segregato","seguito","selciato","selettivo","sella","selvaggio","semaforo","sembrare","seme","seminato","sempre","senso","sentire","sepolto","sequenza","serata","serbato","sereno","serio","serpente","serraglio","servire","sestina","setola","settimana","sfacelo","sfaldare","sfamato","sfarzoso","sfaticato","sfera","sfida","sfilato","sfinge","sfocato","sfoderare","sfogo","sfoltire","sforzato","sfratto","sfruttato","sfuggito","sfumare","sfuso","sgabello","sgarbato","sgonfiare","sgorbio","sgrassato","sguardo","sibilo","siccome","sierra","sigla","signore","silenzio","sillaba","simbolo","simpatico","simulato","sinfonia","singolo","sinistro","sino","sintesi","sinusoide","sipario","sisma","sistole","situato","slitta","slogatura","sloveno","smarrito","smemorato","smentito","smeraldo","smilzo","smontare","smottato","smussato","snellire","snervato","snodo","sobbalzo","sobrio","soccorso","sociale","sodale","soffitto","sogno","soldato","solenne","solido","sollazzo","solo","solubile","solvente","somatico","somma","sonda","sonetto","sonnifero","sopire","soppeso","sopra","sorgere","sorpasso","sorriso","sorso","sorteggio","sorvolato","sospiro","sosta","sottile","spada","spalla","spargere","spatola","spavento","spazzola","specie","spedire","spegnere","spelatura","speranza","spessore","spettrale","spezzato","spia","spigoloso","spillato","spinoso","spirale","splendido","sportivo","sposo","spranga","sprecare","spronato","spruzzo","spuntino","squillo","sradicare","srotolato","stabile","stacco","staffa","stagnare","stampato","stantio","starnuto","stasera","statuto","stelo","steppa","sterzo","stiletto","stima","stirpe","stivale","stizzoso","stonato","storico","strappo","stregato","stridulo","strozzare","strutto","stuccare","stufo","stupendo","subentro","succoso","sudore","suggerito","sugo","sultano","suonare","superbo","supporto","surgelato","surrogato","sussurro","sutura","svagare","svedese","sveglio","svelare","svenuto","svezia","sviluppo","svista","svizzera","svolta","svuotare","tabacco","tabulato","tacciare","taciturno","tale","talismano","tampone","tannino","tara","tardivo","targato","tariffa","tarpare","tartaruga","tasto","tattico","taverna","tavolata","tazza","teca","tecnico","telefono","temerario","tempo","temuto","tendone","tenero","tensione","tentacolo","teorema","terme","terrazzo","terzetto","tesi","tesserato","testato","tetro","tettoia","tifare","tigella","timbro","tinto","tipico","tipografo","tiraggio","tiro","titanio","titolo","titubante","tizio","tizzone","toccare","tollerare","tolto","tombola","tomo","tonfo","tonsilla","topazio","topologia","toppa","torba","tornare","torrone","tortora","toscano","tossire","tostatura","totano","trabocco","trachea","trafila","tragedia","tralcio","tramonto","transito","trapano","trarre","trasloco","trattato","trave","treccia","tremolio","trespolo","tributo","tricheco","trifoglio","trillo","trincea","trio","tristezza","triturato","trivella","tromba","trono","troppo","trottola","trovare","truccato","tubatura","tuffato","tulipano","tumulto","tunisia","turbare","turchino","tuta","tutela","ubicato","uccello","uccisore","udire","uditivo","uffa","ufficio","uguale","ulisse","ultimato","umano","umile","umorismo","uncinetto","ungere","ungherese","unicorno","unificato","unisono","unitario","unte","uovo","upupa","uragano","urgenza","urlo","usanza","usato","uscito","usignolo","usuraio","utensile","utilizzo","utopia","vacante","vaccinato","vagabondo","vagliato","valanga","valgo","valico","valletta","valoroso","valutare","valvola","vampata","vangare","vanitoso","vano","vantaggio","vanvera","vapore","varano","varcato","variante","vasca","vedetta","vedova","veduto","vegetale","veicolo","velcro","velina","velluto","veloce","venato","vendemmia","vento","verace","verbale","vergogna","verifica","vero","verruca","verticale","vescica","vessillo","vestale","veterano","vetrina","vetusto","viandante","vibrante","vicenda","vichingo","vicinanza","vidimare","vigilia","vigneto","vigore","vile","villano","vimini","vincitore","viola","vipera","virgola","virologo","virulento","viscoso","visione","vispo","vissuto","visura","vita","vitello","vittima","vivanda","vivido","viziare","voce","voga","volatile","volere","volpe","voragine","vulcano","zampogna","zanna","zappato","zattera","zavorra","zefiro","zelante","zelo","zenzero","zerbino","zibetto","zinco","zircone","zitto","zolla","zotico","zucchero","zufolo","zulu","zuppa"]'
      );
    },
    function (e) {
      e.exports = JSON.parse(
        '["あいこくしん","あいさつ","あいだ","あおぞら","あかちゃん","あきる","あけがた","あける","あこがれる","あさい","あさひ","あしあと","あじわう","あずかる","あずき","あそぶ","あたえる","あたためる","あたりまえ","あたる","あつい","あつかう","あっしゅく","あつまり","あつめる","あてな","あてはまる","あひる","あぶら","あぶる","あふれる","あまい","あまど","あまやかす","あまり","あみもの","あめりか","あやまる","あゆむ","あらいぐま","あらし","あらすじ","あらためる","あらゆる","あらわす","ありがとう","あわせる","あわてる","あんい","あんがい","あんこ","あんぜん","あんてい","あんない","あんまり","いいだす","いおん","いがい","いがく","いきおい","いきなり","いきもの","いきる","いくじ","いくぶん","いけばな","いけん","いこう","いこく","いこつ","いさましい","いさん","いしき","いじゅう","いじょう","いじわる","いずみ","いずれ","いせい","いせえび","いせかい","いせき","いぜん","いそうろう","いそがしい","いだい","いだく","いたずら","いたみ","いたりあ","いちおう","いちじ","いちど","いちば","いちぶ","いちりゅう","いつか","いっしゅん","いっせい","いっそう","いったん","いっち","いってい","いっぽう","いてざ","いてん","いどう","いとこ","いない","いなか","いねむり","いのち","いのる","いはつ","いばる","いはん","いびき","いひん","いふく","いへん","いほう","いみん","いもうと","いもたれ","いもり","いやがる","いやす","いよかん","いよく","いらい","いらすと","いりぐち","いりょう","いれい","いれもの","いれる","いろえんぴつ","いわい","いわう","いわかん","いわば","いわゆる","いんげんまめ","いんさつ","いんしょう","いんよう","うえき","うえる","うおざ","うがい","うかぶ","うかべる","うきわ","うくらいな","うくれれ","うけたまわる","うけつけ","うけとる","うけもつ","うける","うごかす","うごく","うこん","うさぎ","うしなう","うしろがみ","うすい","うすぎ","うすぐらい","うすめる","うせつ","うちあわせ","うちがわ","うちき","うちゅう","うっかり","うつくしい","うったえる","うつる","うどん","うなぎ","うなじ","うなずく","うなる","うねる","うのう","うぶげ","うぶごえ","うまれる","うめる","うもう","うやまう","うよく","うらがえす","うらぐち","うらない","うりあげ","うりきれ","うるさい","うれしい","うれゆき","うれる","うろこ","うわき","うわさ","うんこう","うんちん","うんてん","うんどう","えいえん","えいが","えいきょう","えいご","えいせい","えいぶん","えいよう","えいわ","えおり","えがお","えがく","えきたい","えくせる","えしゃく","えすて","えつらん","えのぐ","えほうまき","えほん","えまき","えもじ","えもの","えらい","えらぶ","えりあ","えんえん","えんかい","えんぎ","えんげき","えんしゅう","えんぜつ","えんそく","えんちょう","えんとつ","おいかける","おいこす","おいしい","おいつく","おうえん","おうさま","おうじ","おうせつ","おうたい","おうふく","おうべい","おうよう","おえる","おおい","おおう","おおどおり","おおや","おおよそ","おかえり","おかず","おがむ","おかわり","おぎなう","おきる","おくさま","おくじょう","おくりがな","おくる","おくれる","おこす","おこなう","おこる","おさえる","おさない","おさめる","おしいれ","おしえる","おじぎ","おじさん","おしゃれ","おそらく","おそわる","おたがい","おたく","おだやか","おちつく","おっと","おつり","おでかけ","おとしもの","おとなしい","おどり","おどろかす","おばさん","おまいり","おめでとう","おもいで","おもう","おもたい","おもちゃ","おやつ","おやゆび","およぼす","おらんだ","おろす","おんがく","おんけい","おんしゃ","おんせん","おんだん","おんちゅう","おんどけい","かあつ","かいが","がいき","がいけん","がいこう","かいさつ","かいしゃ","かいすいよく","かいぜん","かいぞうど","かいつう","かいてん","かいとう","かいふく","がいへき","かいほう","かいよう","がいらい","かいわ","かえる","かおり","かかえる","かがく","かがし","かがみ","かくご","かくとく","かざる","がぞう","かたい","かたち","がちょう","がっきゅう","がっこう","がっさん","がっしょう","かなざわし","かのう","がはく","かぶか","かほう","かほご","かまう","かまぼこ","かめれおん","かゆい","かようび","からい","かるい","かろう","かわく","かわら","がんか","かんけい","かんこう","かんしゃ","かんそう","かんたん","かんち","がんばる","きあい","きあつ","きいろ","ぎいん","きうい","きうん","きえる","きおう","きおく","きおち","きおん","きかい","きかく","きかんしゃ","ききて","きくばり","きくらげ","きけんせい","きこう","きこえる","きこく","きさい","きさく","きさま","きさらぎ","ぎじかがく","ぎしき","ぎじたいけん","ぎじにってい","ぎじゅつしゃ","きすう","きせい","きせき","きせつ","きそう","きぞく","きぞん","きたえる","きちょう","きつえん","ぎっちり","きつつき","きつね","きてい","きどう","きどく","きない","きなが","きなこ","きぬごし","きねん","きのう","きのした","きはく","きびしい","きひん","きふく","きぶん","きぼう","きほん","きまる","きみつ","きむずかしい","きめる","きもだめし","きもち","きもの","きゃく","きやく","ぎゅうにく","きよう","きょうりゅう","きらい","きらく","きりん","きれい","きれつ","きろく","ぎろん","きわめる","ぎんいろ","きんかくじ","きんじょ","きんようび","ぐあい","くいず","くうかん","くうき","くうぐん","くうこう","ぐうせい","くうそう","ぐうたら","くうふく","くうぼ","くかん","くきょう","くげん","ぐこう","くさい","くさき","くさばな","くさる","くしゃみ","くしょう","くすのき","くすりゆび","くせげ","くせん","ぐたいてき","くださる","くたびれる","くちこみ","くちさき","くつした","ぐっすり","くつろぐ","くとうてん","くどく","くなん","くねくね","くのう","くふう","くみあわせ","くみたてる","くめる","くやくしょ","くらす","くらべる","くるま","くれる","くろう","くわしい","ぐんかん","ぐんしょく","ぐんたい","ぐんて","けあな","けいかく","けいけん","けいこ","けいさつ","げいじゅつ","けいたい","げいのうじん","けいれき","けいろ","けおとす","けおりもの","げきか","げきげん","げきだん","げきちん","げきとつ","げきは","げきやく","げこう","げこくじょう","げざい","けさき","げざん","けしき","けしごむ","けしょう","げすと","けたば","けちゃっぷ","けちらす","けつあつ","けつい","けつえき","けっこん","けつじょ","けっせき","けってい","けつまつ","げつようび","げつれい","けつろん","げどく","けとばす","けとる","けなげ","けなす","けなみ","けぬき","げねつ","けねん","けはい","げひん","けぶかい","げぼく","けまり","けみかる","けむし","けむり","けもの","けらい","けろけろ","けわしい","けんい","けんえつ","けんお","けんか","げんき","けんげん","けんこう","けんさく","けんしゅう","けんすう","げんそう","けんちく","けんてい","けんとう","けんない","けんにん","げんぶつ","けんま","けんみん","けんめい","けんらん","けんり","こあくま","こいぬ","こいびと","ごうい","こうえん","こうおん","こうかん","ごうきゅう","ごうけい","こうこう","こうさい","こうじ","こうすい","ごうせい","こうそく","こうたい","こうちゃ","こうつう","こうてい","こうどう","こうない","こうはい","ごうほう","ごうまん","こうもく","こうりつ","こえる","こおり","ごかい","ごがつ","ごかん","こくご","こくさい","こくとう","こくない","こくはく","こぐま","こけい","こける","ここのか","こころ","こさめ","こしつ","こすう","こせい","こせき","こぜん","こそだて","こたい","こたえる","こたつ","こちょう","こっか","こつこつ","こつばん","こつぶ","こてい","こてん","ことがら","ことし","ことば","ことり","こなごな","こねこね","このまま","このみ","このよ","ごはん","こひつじ","こふう","こふん","こぼれる","ごまあぶら","こまかい","ごますり","こまつな","こまる","こむぎこ","こもじ","こもち","こもの","こもん","こやく","こやま","こゆう","こゆび","こよい","こよう","こりる","これくしょん","ころっけ","こわもて","こわれる","こんいん","こんかい","こんき","こんしゅう","こんすい","こんだて","こんとん","こんなん","こんびに","こんぽん","こんまけ","こんや","こんれい","こんわく","ざいえき","さいかい","さいきん","ざいげん","ざいこ","さいしょ","さいせい","ざいたく","ざいちゅう","さいてき","ざいりょう","さうな","さかいし","さがす","さかな","さかみち","さがる","さぎょう","さくし","さくひん","さくら","さこく","さこつ","さずかる","ざせき","さたん","さつえい","ざつおん","ざっか","ざつがく","さっきょく","ざっし","さつじん","ざっそう","さつたば","さつまいも","さてい","さといも","さとう","さとおや","さとし","さとる","さのう","さばく","さびしい","さべつ","さほう","さほど","さます","さみしい","さみだれ","さむけ","さめる","さやえんどう","さゆう","さよう","さよく","さらだ","ざるそば","さわやか","さわる","さんいん","さんか","さんきゃく","さんこう","さんさい","ざんしょ","さんすう","さんせい","さんそ","さんち","さんま","さんみ","さんらん","しあい","しあげ","しあさって","しあわせ","しいく","しいん","しうち","しえい","しおけ","しかい","しかく","じかん","しごと","しすう","じだい","したうけ","したぎ","したて","したみ","しちょう","しちりん","しっかり","しつじ","しつもん","してい","してき","してつ","じてん","じどう","しなぎれ","しなもの","しなん","しねま","しねん","しのぐ","しのぶ","しはい","しばかり","しはつ","しはらい","しはん","しひょう","しふく","じぶん","しへい","しほう","しほん","しまう","しまる","しみん","しむける","じむしょ","しめい","しめる","しもん","しゃいん","しゃうん","しゃおん","じゃがいも","しやくしょ","しゃくほう","しゃけん","しゃこ","しゃざい","しゃしん","しゃせん","しゃそう","しゃたい","しゃちょう","しゃっきん","じゃま","しゃりん","しゃれい","じゆう","じゅうしょ","しゅくはく","じゅしん","しゅっせき","しゅみ","しゅらば","じゅんばん","しょうかい","しょくたく","しょっけん","しょどう","しょもつ","しらせる","しらべる","しんか","しんこう","じんじゃ","しんせいじ","しんちく","しんりん","すあげ","すあし","すあな","ずあん","すいえい","すいか","すいとう","ずいぶん","すいようび","すうがく","すうじつ","すうせん","すおどり","すきま","すくう","すくない","すける","すごい","すこし","ずさん","すずしい","すすむ","すすめる","すっかり","ずっしり","ずっと","すてき","すてる","すねる","すのこ","すはだ","すばらしい","ずひょう","ずぶぬれ","すぶり","すふれ","すべて","すべる","ずほう","すぼん","すまい","すめし","すもう","すやき","すらすら","するめ","すれちがう","すろっと","すわる","すんぜん","すんぽう","せあぶら","せいかつ","せいげん","せいじ","せいよう","せおう","せかいかん","せきにん","せきむ","せきゆ","せきらんうん","せけん","せこう","せすじ","せたい","せたけ","せっかく","せっきゃく","ぜっく","せっけん","せっこつ","せっさたくま","せつぞく","せつだん","せつでん","せっぱん","せつび","せつぶん","せつめい","せつりつ","せなか","せのび","せはば","せびろ","せぼね","せまい","せまる","せめる","せもたれ","せりふ","ぜんあく","せんい","せんえい","せんか","せんきょ","せんく","せんげん","ぜんご","せんさい","せんしゅ","せんすい","せんせい","せんぞ","せんたく","せんちょう","せんてい","せんとう","せんぬき","せんねん","せんぱい","ぜんぶ","ぜんぽう","せんむ","せんめんじょ","せんもん","せんやく","せんゆう","せんよう","ぜんら","ぜんりゃく","せんれい","せんろ","そあく","そいとげる","そいね","そうがんきょう","そうき","そうご","そうしん","そうだん","そうなん","そうび","そうめん","そうり","そえもの","そえん","そがい","そげき","そこう","そこそこ","そざい","そしな","そせい","そせん","そそぐ","そだてる","そつう","そつえん","そっかん","そつぎょう","そっけつ","そっこう","そっせん","そっと","そとがわ","そとづら","そなえる","そなた","そふぼ","そぼく","そぼろ","そまつ","そまる","そむく","そむりえ","そめる","そもそも","そよかぜ","そらまめ","そろう","そんかい","そんけい","そんざい","そんしつ","そんぞく","そんちょう","ぞんび","ぞんぶん","そんみん","たあい","たいいん","たいうん","たいえき","たいおう","だいがく","たいき","たいぐう","たいけん","たいこ","たいざい","だいじょうぶ","だいすき","たいせつ","たいそう","だいたい","たいちょう","たいてい","だいどころ","たいない","たいねつ","たいのう","たいはん","だいひょう","たいふう","たいへん","たいほ","たいまつばな","たいみんぐ","たいむ","たいめん","たいやき","たいよう","たいら","たいりょく","たいる","たいわん","たうえ","たえる","たおす","たおる","たおれる","たかい","たかね","たきび","たくさん","たこく","たこやき","たさい","たしざん","だじゃれ","たすける","たずさわる","たそがれ","たたかう","たたく","ただしい","たたみ","たちばな","だっかい","だっきゃく","だっこ","だっしゅつ","だったい","たてる","たとえる","たなばた","たにん","たぬき","たのしみ","たはつ","たぶん","たべる","たぼう","たまご","たまる","だむる","ためいき","ためす","ためる","たもつ","たやすい","たよる","たらす","たりきほんがん","たりょう","たりる","たると","たれる","たれんと","たろっと","たわむれる","だんあつ","たんい","たんおん","たんか","たんき","たんけん","たんご","たんさん","たんじょうび","だんせい","たんそく","たんたい","だんち","たんてい","たんとう","だんな","たんにん","だんねつ","たんのう","たんぴん","だんぼう","たんまつ","たんめい","だんれつ","だんろ","だんわ","ちあい","ちあん","ちいき","ちいさい","ちえん","ちかい","ちから","ちきゅう","ちきん","ちけいず","ちけん","ちこく","ちさい","ちしき","ちしりょう","ちせい","ちそう","ちたい","ちたん","ちちおや","ちつじょ","ちてき","ちてん","ちぬき","ちぬり","ちのう","ちひょう","ちへいせん","ちほう","ちまた","ちみつ","ちみどろ","ちめいど","ちゃんこなべ","ちゅうい","ちゆりょく","ちょうし","ちょさくけん","ちらし","ちらみ","ちりがみ","ちりょう","ちるど","ちわわ","ちんたい","ちんもく","ついか","ついたち","つうか","つうじょう","つうはん","つうわ","つかう","つかれる","つくね","つくる","つけね","つける","つごう","つたえる","つづく","つつじ","つつむ","つとめる","つながる","つなみ","つねづね","つのる","つぶす","つまらない","つまる","つみき","つめたい","つもり","つもる","つよい","つるぼ","つるみく","つわもの","つわり","てあし","てあて","てあみ","ていおん","ていか","ていき","ていけい","ていこく","ていさつ","ていし","ていせい","ていたい","ていど","ていねい","ていひょう","ていへん","ていぼう","てうち","ておくれ","てきとう","てくび","でこぼこ","てさぎょう","てさげ","てすり","てそう","てちがい","てちょう","てつがく","てつづき","でっぱ","てつぼう","てつや","でぬかえ","てぬき","てぬぐい","てのひら","てはい","てぶくろ","てふだ","てほどき","てほん","てまえ","てまきずし","てみじか","てみやげ","てらす","てれび","てわけ","てわたし","でんあつ","てんいん","てんかい","てんき","てんぐ","てんけん","てんごく","てんさい","てんし","てんすう","でんち","てんてき","てんとう","てんない","てんぷら","てんぼうだい","てんめつ","てんらんかい","でんりょく","でんわ","どあい","といれ","どうかん","とうきゅう","どうぐ","とうし","とうむぎ","とおい","とおか","とおく","とおす","とおる","とかい","とかす","ときおり","ときどき","とくい","とくしゅう","とくてん","とくに","とくべつ","とけい","とける","とこや","とさか","としょかん","とそう","とたん","とちゅう","とっきゅう","とっくん","とつぜん","とつにゅう","とどける","ととのえる","とない","となえる","となり","とのさま","とばす","どぶがわ","とほう","とまる","とめる","ともだち","ともる","どようび","とらえる","とんかつ","どんぶり","ないかく","ないこう","ないしょ","ないす","ないせん","ないそう","なおす","ながい","なくす","なげる","なこうど","なさけ","なたでここ","なっとう","なつやすみ","ななおし","なにごと","なにもの","なにわ","なのか","なふだ","なまいき","なまえ","なまみ","なみだ","なめらか","なめる","なやむ","ならう","ならび","ならぶ","なれる","なわとび","なわばり","にあう","にいがた","にうけ","におい","にかい","にがて","にきび","にくしみ","にくまん","にげる","にさんかたんそ","にしき","にせもの","にちじょう","にちようび","にっか","にっき","にっけい","にっこう","にっさん","にっしょく","にっすう","にっせき","にってい","になう","にほん","にまめ","にもつ","にやり","にゅういん","にりんしゃ","にわとり","にんい","にんか","にんき","にんげん","にんしき","にんずう","にんそう","にんたい","にんち","にんてい","にんにく","にんぷ","にんまり","にんむ","にんめい","にんよう","ぬいくぎ","ぬかす","ぬぐいとる","ぬぐう","ぬくもり","ぬすむ","ぬまえび","ぬめり","ぬらす","ぬんちゃく","ねあげ","ねいき","ねいる","ねいろ","ねぐせ","ねくたい","ねくら","ねこぜ","ねこむ","ねさげ","ねすごす","ねそべる","ねだん","ねつい","ねっしん","ねつぞう","ねったいぎょ","ねぶそく","ねふだ","ねぼう","ねほりはほり","ねまき","ねまわし","ねみみ","ねむい","ねむたい","ねもと","ねらう","ねわざ","ねんいり","ねんおし","ねんかん","ねんきん","ねんぐ","ねんざ","ねんし","ねんちゃく","ねんど","ねんぴ","ねんぶつ","ねんまつ","ねんりょう","ねんれい","のいず","のおづま","のがす","のきなみ","のこぎり","のこす","のこる","のせる","のぞく","のぞむ","のたまう","のちほど","のっく","のばす","のはら","のべる","のぼる","のみもの","のやま","のらいぬ","のらねこ","のりもの","のりゆき","のれん","のんき","ばあい","はあく","ばあさん","ばいか","ばいく","はいけん","はいご","はいしん","はいすい","はいせん","はいそう","はいち","ばいばい","はいれつ","はえる","はおる","はかい","ばかり","はかる","はくしゅ","はけん","はこぶ","はさみ","はさん","はしご","ばしょ","はしる","はせる","ぱそこん","はそん","はたん","はちみつ","はつおん","はっかく","はづき","はっきり","はっくつ","はっけん","はっこう","はっさん","はっしん","はったつ","はっちゅう","はってん","はっぴょう","はっぽう","はなす","はなび","はにかむ","はぶらし","はみがき","はむかう","はめつ","はやい","はやし","はらう","はろうぃん","はわい","はんい","はんえい","はんおん","はんかく","はんきょう","ばんぐみ","はんこ","はんしゃ","はんすう","はんだん","ぱんち","ぱんつ","はんてい","はんとし","はんのう","はんぱ","はんぶん","はんぺん","はんぼうき","はんめい","はんらん","はんろん","ひいき","ひうん","ひえる","ひかく","ひかり","ひかる","ひかん","ひくい","ひけつ","ひこうき","ひこく","ひさい","ひさしぶり","ひさん","びじゅつかん","ひしょ","ひそか","ひそむ","ひたむき","ひだり","ひたる","ひつぎ","ひっこし","ひっし","ひつじゅひん","ひっす","ひつぜん","ぴったり","ぴっちり","ひつよう","ひてい","ひとごみ","ひなまつり","ひなん","ひねる","ひはん","ひびく","ひひょう","ひほう","ひまわり","ひまん","ひみつ","ひめい","ひめじし","ひやけ","ひやす","ひよう","びょうき","ひらがな","ひらく","ひりつ","ひりょう","ひるま","ひるやすみ","ひれい","ひろい","ひろう","ひろき","ひろゆき","ひんかく","ひんけつ","ひんこん","ひんしゅ","ひんそう","ぴんち","ひんぱん","びんぼう","ふあん","ふいうち","ふうけい","ふうせん","ぷうたろう","ふうとう","ふうふ","ふえる","ふおん","ふかい","ふきん","ふくざつ","ふくぶくろ","ふこう","ふさい","ふしぎ","ふじみ","ふすま","ふせい","ふせぐ","ふそく","ぶたにく","ふたん","ふちょう","ふつう","ふつか","ふっかつ","ふっき","ふっこく","ぶどう","ふとる","ふとん","ふのう","ふはい","ふひょう","ふへん","ふまん","ふみん","ふめつ","ふめん","ふよう","ふりこ","ふりる","ふるい","ふんいき","ぶんがく","ぶんぐ","ふんしつ","ぶんせき","ふんそう","ぶんぽう","へいあん","へいおん","へいがい","へいき","へいげん","へいこう","へいさ","へいしゃ","へいせつ","へいそ","へいたく","へいてん","へいねつ","へいわ","へきが","へこむ","べにいろ","べにしょうが","へらす","へんかん","べんきょう","べんごし","へんさい","へんたい","べんり","ほあん","ほいく","ぼうぎょ","ほうこく","ほうそう","ほうほう","ほうもん","ほうりつ","ほえる","ほおん","ほかん","ほきょう","ぼきん","ほくろ","ほけつ","ほけん","ほこう","ほこる","ほしい","ほしつ","ほしゅ","ほしょう","ほせい","ほそい","ほそく","ほたて","ほたる","ぽちぶくろ","ほっきょく","ほっさ","ほったん","ほとんど","ほめる","ほんい","ほんき","ほんけ","ほんしつ","ほんやく","まいにち","まかい","まかせる","まがる","まける","まこと","まさつ","まじめ","ますく","まぜる","まつり","まとめ","まなぶ","まぬけ","まねく","まほう","まもる","まゆげ","まよう","まろやか","まわす","まわり","まわる","まんが","まんきつ","まんぞく","まんなか","みいら","みうち","みえる","みがく","みかた","みかん","みけん","みこん","みじかい","みすい","みすえる","みせる","みっか","みつかる","みつける","みてい","みとめる","みなと","みなみかさい","みねらる","みのう","みのがす","みほん","みもと","みやげ","みらい","みりょく","みわく","みんか","みんぞく","むいか","むえき","むえん","むかい","むかう","むかえ","むかし","むぎちゃ","むける","むげん","むさぼる","むしあつい","むしば","むじゅん","むしろ","むすう","むすこ","むすぶ","むすめ","むせる","むせん","むちゅう","むなしい","むのう","むやみ","むよう","むらさき","むりょう","むろん","めいあん","めいうん","めいえん","めいかく","めいきょく","めいさい","めいし","めいそう","めいぶつ","めいれい","めいわく","めぐまれる","めざす","めした","めずらしい","めだつ","めまい","めやす","めんきょ","めんせき","めんどう","もうしあげる","もうどうけん","もえる","もくし","もくてき","もくようび","もちろん","もどる","もらう","もんく","もんだい","やおや","やける","やさい","やさしい","やすい","やすたろう","やすみ","やせる","やそう","やたい","やちん","やっと","やっぱり","やぶる","やめる","ややこしい","やよい","やわらかい","ゆうき","ゆうびんきょく","ゆうべ","ゆうめい","ゆけつ","ゆしゅつ","ゆせん","ゆそう","ゆたか","ゆちゃく","ゆでる","ゆにゅう","ゆびわ","ゆらい","ゆれる","ようい","ようか","ようきゅう","ようじ","ようす","ようちえん","よかぜ","よかん","よきん","よくせい","よくぼう","よけい","よごれる","よさん","よしゅう","よそう","よそく","よっか","よてい","よどがわく","よねつ","よやく","よゆう","よろこぶ","よろしい","らいう","らくがき","らくご","らくさつ","らくだ","らしんばん","らせん","らぞく","らたい","らっか","られつ","りえき","りかい","りきさく","りきせつ","りくぐん","りくつ","りけん","りこう","りせい","りそう","りそく","りてん","りねん","りゆう","りゅうがく","りよう","りょうり","りょかん","りょくちゃ","りょこう","りりく","りれき","りろん","りんご","るいけい","るいさい","るいじ","るいせき","るすばん","るりがわら","れいかん","れいぎ","れいせい","れいぞうこ","れいとう","れいぼう","れきし","れきだい","れんあい","れんけい","れんこん","れんさい","れんしゅう","れんぞく","れんらく","ろうか","ろうご","ろうじん","ろうそく","ろくが","ろこつ","ろじうら","ろしゅつ","ろせん","ろてん","ろめん","ろれつ","ろんぎ","ろんぱ","ろんぶん","ろんり","わかす","わかめ","わかやま","わかれる","わしつ","わじまし","わすれもの","わらう","われる"]'
      );
    },
    function (e) {
      e.exports = JSON.parse(
        '["가격","가끔","가난","가능","가득","가르침","가뭄","가방","가상","가슴","가운데","가을","가이드","가입","가장","가정","가족","가죽","각오","각자","간격","간부","간섭","간장","간접","간판","갈등","갈비","갈색","갈증","감각","감기","감소","감수성","감자","감정","갑자기","강남","강당","강도","강력히","강변","강북","강사","강수량","강아지","강원도","강의","강제","강조","같이","개구리","개나리","개방","개별","개선","개성","개인","객관적","거실","거액","거울","거짓","거품","걱정","건강","건물","건설","건조","건축","걸음","검사","검토","게시판","게임","겨울","견해","결과","결국","결론","결석","결승","결심","결정","결혼","경계","경고","경기","경력","경복궁","경비","경상도","경영","경우","경쟁","경제","경주","경찰","경치","경향","경험","계곡","계단","계란","계산","계속","계약","계절","계층","계획","고객","고구려","고궁","고급","고등학생","고무신","고민","고양이","고장","고전","고집","고춧가루","고통","고향","곡식","골목","골짜기","골프","공간","공개","공격","공군","공급","공기","공동","공무원","공부","공사","공식","공업","공연","공원","공장","공짜","공책","공통","공포","공항","공휴일","과목","과일","과장","과정","과학","관객","관계","관광","관념","관람","관련","관리","관습","관심","관점","관찰","광경","광고","광장","광주","괴로움","굉장히","교과서","교문","교복","교실","교양","교육","교장","교직","교통","교환","교훈","구경","구름","구멍","구별","구분","구석","구성","구속","구역","구입","구청","구체적","국가","국기","국내","국립","국물","국민","국수","국어","국왕","국적","국제","국회","군대","군사","군인","궁극적","권리","권위","권투","귀국","귀신","규정","규칙","균형","그날","그냥","그늘","그러나","그룹","그릇","그림","그제서야","그토록","극복","극히","근거","근교","근래","근로","근무","근본","근원","근육","근처","글씨","글자","금강산","금고","금년","금메달","금액","금연","금요일","금지","긍정적","기간","기관","기념","기능","기독교","기둥","기록","기름","기법","기본","기분","기쁨","기숙사","기술","기억","기업","기온","기운","기원","기적","기준","기침","기혼","기획","긴급","긴장","길이","김밥","김치","김포공항","깍두기","깜빡","깨달음","깨소금","껍질","꼭대기","꽃잎","나들이","나란히","나머지","나물","나침반","나흘","낙엽","난방","날개","날씨","날짜","남녀","남대문","남매","남산","남자","남편","남학생","낭비","낱말","내년","내용","내일","냄비","냄새","냇물","냉동","냉면","냉방","냉장고","넥타이","넷째","노동","노란색","노력","노인","녹음","녹차","녹화","논리","논문","논쟁","놀이","농구","농담","농민","농부","농업","농장","농촌","높이","눈동자","눈물","눈썹","뉴욕","느낌","늑대","능동적","능력","다방","다양성","다음","다이어트","다행","단계","단골","단독","단맛","단순","단어","단위","단점","단체","단추","단편","단풍","달걀","달러","달력","달리","닭고기","담당","담배","담요","담임","답변","답장","당근","당분간","당연히","당장","대규모","대낮","대단히","대답","대도시","대략","대량","대륙","대문","대부분","대신","대응","대장","대전","대접","대중","대책","대출","대충","대통령","대학","대한민국","대합실","대형","덩어리","데이트","도대체","도덕","도둑","도망","도서관","도심","도움","도입","도자기","도저히","도전","도중","도착","독감","독립","독서","독일","독창적","동화책","뒷모습","뒷산","딸아이","마누라","마늘","마당","마라톤","마련","마무리","마사지","마약","마요네즈","마을","마음","마이크","마중","마지막","마찬가지","마찰","마흔","막걸리","막내","막상","만남","만두","만세","만약","만일","만점","만족","만화","많이","말기","말씀","말투","맘대로","망원경","매년","매달","매력","매번","매스컴","매일","매장","맥주","먹이","먼저","먼지","멀리","메일","며느리","며칠","면담","멸치","명단","명령","명예","명의","명절","명칭","명함","모금","모니터","모델","모든","모범","모습","모양","모임","모조리","모집","모퉁이","목걸이","목록","목사","목소리","목숨","목적","목표","몰래","몸매","몸무게","몸살","몸속","몸짓","몸통","몹시","무관심","무궁화","무더위","무덤","무릎","무슨","무엇","무역","무용","무조건","무지개","무척","문구","문득","문법","문서","문제","문학","문화","물가","물건","물결","물고기","물론","물리학","물음","물질","물체","미국","미디어","미사일","미술","미역","미용실","미움","미인","미팅","미혼","민간","민족","민주","믿음","밀가루","밀리미터","밑바닥","바가지","바구니","바나나","바늘","바닥","바닷가","바람","바이러스","바탕","박물관","박사","박수","반대","반드시","반말","반발","반성","반응","반장","반죽","반지","반찬","받침","발가락","발걸음","발견","발달","발레","발목","발바닥","발생","발음","발자국","발전","발톱","발표","밤하늘","밥그릇","밥맛","밥상","밥솥","방금","방면","방문","방바닥","방법","방송","방식","방안","방울","방지","방학","방해","방향","배경","배꼽","배달","배드민턴","백두산","백색","백성","백인","백제","백화점","버릇","버섯","버튼","번개","번역","번지","번호","벌금","벌레","벌써","범위","범인","범죄","법률","법원","법적","법칙","베이징","벨트","변경","변동","변명","변신","변호사","변화","별도","별명","별일","병실","병아리","병원","보관","보너스","보라색","보람","보름","보상","보안","보자기","보장","보전","보존","보통","보편적","보험","복도","복사","복숭아","복습","볶음","본격적","본래","본부","본사","본성","본인","본질","볼펜","봉사","봉지","봉투","부근","부끄러움","부담","부동산","부문","부분","부산","부상","부엌","부인","부작용","부장","부정","부족","부지런히","부친","부탁","부품","부회장","북부","북한","분노","분량","분리","분명","분석","분야","분위기","분필","분홍색","불고기","불과","불교","불꽃","불만","불법","불빛","불안","불이익","불행","브랜드","비극","비난","비닐","비둘기","비디오","비로소","비만","비명","비밀","비바람","비빔밥","비상","비용","비율","비중","비타민","비판","빌딩","빗물","빗방울","빗줄기","빛깔","빨간색","빨래","빨리","사건","사계절","사나이","사냥","사람","사랑","사립","사모님","사물","사방","사상","사생활","사설","사슴","사실","사업","사용","사월","사장","사전","사진","사촌","사춘기","사탕","사투리","사흘","산길","산부인과","산업","산책","살림","살인","살짝","삼계탕","삼국","삼십","삼월","삼촌","상관","상금","상대","상류","상반기","상상","상식","상업","상인","상자","상점","상처","상추","상태","상표","상품","상황","새벽","색깔","색연필","생각","생명","생물","생방송","생산","생선","생신","생일","생활","서랍","서른","서명","서민","서비스","서양","서울","서적","서점","서쪽","서클","석사","석유","선거","선물","선배","선생","선수","선원","선장","선전","선택","선풍기","설거지","설날","설렁탕","설명","설문","설사","설악산","설치","설탕","섭씨","성공","성당","성명","성별","성인","성장","성적","성질","성함","세금","세미나","세상","세월","세종대왕","세탁","센터","센티미터","셋째","소규모","소극적","소금","소나기","소년","소득","소망","소문","소설","소속","소아과","소용","소원","소음","소중히","소지품","소질","소풍","소형","속담","속도","속옷","손가락","손길","손녀","손님","손등","손목","손뼉","손실","손질","손톱","손해","솔직히","솜씨","송아지","송이","송편","쇠고기","쇼핑","수건","수년","수단","수돗물","수동적","수면","수명","수박","수상","수석","수술","수시로","수업","수염","수영","수입","수준","수집","수출","수컷","수필","수학","수험생","수화기","숙녀","숙소","숙제","순간","순서","순수","순식간","순위","숟가락","술병","술집","숫자","스님","스물","스스로","스승","스웨터","스위치","스케이트","스튜디오","스트레스","스포츠","슬쩍","슬픔","습관","습기","승객","승리","승부","승용차","승진","시각","시간","시골","시금치","시나리오","시댁","시리즈","시멘트","시민","시부모","시선","시설","시스템","시아버지","시어머니","시월","시인","시일","시작","시장","시절","시점","시중","시즌","시집","시청","시합","시험","식구","식기","식당","식량","식료품","식물","식빵","식사","식생활","식초","식탁","식품","신고","신규","신념","신문","신발","신비","신사","신세","신용","신제품","신청","신체","신화","실감","실내","실력","실례","실망","실수","실습","실시","실장","실정","실질적","실천","실체","실컷","실태","실패","실험","실현","심리","심부름","심사","심장","심정","심판","쌍둥이","씨름","씨앗","아가씨","아나운서","아드님","아들","아쉬움","아스팔트","아시아","아울러","아저씨","아줌마","아직","아침","아파트","아프리카","아픔","아홉","아흔","악기","악몽","악수","안개","안경","안과","안내","안녕","안동","안방","안부","안주","알루미늄","알코올","암시","암컷","압력","앞날","앞문","애인","애정","액수","앨범","야간","야단","야옹","약간","약국","약속","약수","약점","약품","약혼녀","양념","양력","양말","양배추","양주","양파","어둠","어려움","어른","어젯밤","어쨌든","어쩌다가","어쩐지","언니","언덕","언론","언어","얼굴","얼른","얼음","얼핏","엄마","업무","업종","업체","엉덩이","엉망","엉터리","엊그제","에너지","에어컨","엔진","여건","여고생","여관","여군","여권","여대생","여덟","여동생","여든","여론","여름","여섯","여성","여왕","여인","여전히","여직원","여학생","여행","역사","역시","역할","연결","연구","연극","연기","연락","연설","연세","연속","연습","연애","연예인","연인","연장","연주","연출","연필","연합","연휴","열기","열매","열쇠","열심히","열정","열차","열흘","염려","엽서","영국","영남","영상","영양","영역","영웅","영원히","영하","영향","영혼","영화","옆구리","옆방","옆집","예감","예금","예방","예산","예상","예선","예술","예습","예식장","예약","예전","예절","예정","예컨대","옛날","오늘","오락","오랫동안","오렌지","오로지","오른발","오븐","오십","오염","오월","오전","오직","오징어","오페라","오피스텔","오히려","옥상","옥수수","온갖","온라인","온몸","온종일","온통","올가을","올림픽","올해","옷차림","와이셔츠","와인","완성","완전","왕비","왕자","왜냐하면","왠지","외갓집","외국","외로움","외삼촌","외출","외침","외할머니","왼발","왼손","왼쪽","요금","요일","요즘","요청","용기","용서","용어","우산","우선","우승","우연히","우정","우체국","우편","운동","운명","운반","운전","운행","울산","울음","움직임","웃어른","웃음","워낙","원고","원래","원서","원숭이","원인","원장","원피스","월급","월드컵","월세","월요일","웨이터","위반","위법","위성","위원","위험","위협","윗사람","유난히","유럽","유명","유물","유산","유적","유치원","유학","유행","유형","육군","육상","육십","육체","은행","음력","음료","음반","음성","음식","음악","음주","의견","의논","의문","의복","의식","의심","의외로","의욕","의원","의학","이것","이곳","이념","이놈","이달","이대로","이동","이렇게","이력서","이론적","이름","이민","이발소","이별","이불","이빨","이상","이성","이슬","이야기","이용","이웃","이월","이윽고","이익","이전","이중","이튿날","이틀","이혼","인간","인격","인공","인구","인근","인기","인도","인류","인물","인생","인쇄","인연","인원","인재","인종","인천","인체","인터넷","인하","인형","일곱","일기","일단","일대","일등","일반","일본","일부","일상","일생","일손","일요일","일월","일정","일종","일주일","일찍","일체","일치","일행","일회용","임금","임무","입대","입력","입맛","입사","입술","입시","입원","입장","입학","자가용","자격","자극","자동","자랑","자부심","자식","자신","자연","자원","자율","자전거","자정","자존심","자판","작가","작년","작성","작업","작용","작은딸","작품","잔디","잔뜩","잔치","잘못","잠깐","잠수함","잠시","잠옷","잠자리","잡지","장관","장군","장기간","장래","장례","장르","장마","장면","장모","장미","장비","장사","장소","장식","장애인","장인","장점","장차","장학금","재능","재빨리","재산","재생","재작년","재정","재채기","재판","재학","재활용","저것","저고리","저곳","저녁","저런","저렇게","저번","저울","저절로","저축","적극","적당히","적성","적용","적응","전개","전공","전기","전달","전라도","전망","전문","전반","전부","전세","전시","전용","전자","전쟁","전주","전철","전체","전통","전혀","전후","절대","절망","절반","절약","절차","점검","점수","점심","점원","점점","점차","접근","접시","접촉","젓가락","정거장","정도","정류장","정리","정말","정면","정문","정반대","정보","정부","정비","정상","정성","정오","정원","정장","정지","정치","정확히","제공","제과점","제대로","제목","제발","제법","제삿날","제안","제일","제작","제주도","제출","제품","제한","조각","조건","조금","조깅","조명","조미료","조상","조선","조용히","조절","조정","조직","존댓말","존재","졸업","졸음","종교","종로","종류","종소리","종업원","종종","종합","좌석","죄인","주관적","주름","주말","주머니","주먹","주문","주민","주방","주변","주식","주인","주일","주장","주전자","주택","준비","줄거리","줄기","줄무늬","중간","중계방송","중국","중년","중단","중독","중반","중부","중세","중소기업","중순","중앙","중요","중학교","즉석","즉시","즐거움","증가","증거","증권","증상","증세","지각","지갑","지경","지극히","지금","지급","지능","지름길","지리산","지방","지붕","지식","지역","지우개","지원","지적","지점","지진","지출","직선","직업","직원","직장","진급","진동","진로","진료","진리","진짜","진찰","진출","진통","진행","질문","질병","질서","짐작","집단","집안","집중","짜증","찌꺼기","차남","차라리","차량","차림","차별","차선","차츰","착각","찬물","찬성","참가","참기름","참새","참석","참여","참외","참조","찻잔","창가","창고","창구","창문","창밖","창작","창조","채널","채점","책가방","책방","책상","책임","챔피언","처벌","처음","천국","천둥","천장","천재","천천히","철도","철저히","철학","첫날","첫째","청년","청바지","청소","청춘","체계","체력","체온","체육","체중","체험","초등학생","초반","초밥","초상화","초순","초여름","초원","초저녁","초점","초청","초콜릿","촛불","총각","총리","총장","촬영","최근","최상","최선","최신","최악","최종","추석","추억","추진","추천","추측","축구","축소","축제","축하","출근","출발","출산","출신","출연","출입","출장","출판","충격","충고","충돌","충분히","충청도","취업","취직","취향","치약","친구","친척","칠십","칠월","칠판","침대","침묵","침실","칫솔","칭찬","카메라","카운터","칼국수","캐릭터","캠퍼스","캠페인","커튼","컨디션","컬러","컴퓨터","코끼리","코미디","콘서트","콜라","콤플렉스","콩나물","쾌감","쿠데타","크림","큰길","큰딸","큰소리","큰아들","큰어머니","큰일","큰절","클래식","클럽","킬로","타입","타자기","탁구","탁자","탄생","태권도","태양","태풍","택시","탤런트","터널","터미널","테니스","테스트","테이블","텔레비전","토론","토마토","토요일","통계","통과","통로","통신","통역","통일","통장","통제","통증","통합","통화","퇴근","퇴원","퇴직금","튀김","트럭","특급","특별","특성","특수","특징","특히","튼튼히","티셔츠","파란색","파일","파출소","판결","판단","판매","판사","팔십","팔월","팝송","패션","팩스","팩시밀리","팬티","퍼센트","페인트","편견","편의","편지","편히","평가","평균","평생","평소","평양","평일","평화","포스터","포인트","포장","포함","표면","표정","표준","표현","품목","품질","풍경","풍속","풍습","프랑스","프린터","플라스틱","피곤","피망","피아노","필름","필수","필요","필자","필통","핑계","하느님","하늘","하드웨어","하룻밤","하반기","하숙집","하순","하여튼","하지만","하천","하품","하필","학과","학교","학급","학기","학년","학력","학번","학부모","학비","학생","학술","학습","학용품","학원","학위","학자","학점","한계","한글","한꺼번에","한낮","한눈","한동안","한때","한라산","한마디","한문","한번","한복","한식","한여름","한쪽","할머니","할아버지","할인","함께","함부로","합격","합리적","항공","항구","항상","항의","해결","해군","해답","해당","해물","해석","해설","해수욕장","해안","핵심","핸드백","햄버거","햇볕","햇살","행동","행복","행사","행운","행위","향기","향상","향수","허락","허용","헬기","현관","현금","현대","현상","현실","현장","현재","현지","혈액","협력","형부","형사","형수","형식","형제","형태","형편","혜택","호기심","호남","호랑이","호박","호텔","호흡","혹시","홀로","홈페이지","홍보","홍수","홍차","화면","화분","화살","화요일","화장","화학","확보","확인","확장","확정","환갑","환경","환영","환율","환자","활기","활동","활발히","활용","활짝","회견","회관","회복","회색","회원","회장","회전","횟수","횡단보도","효율적","후반","후춧가루","훈련","훨씬","휴식","휴일","흉내","흐름","흑백","흑인","흔적","흔히","흥미","흥분","희곡","희망","희생","흰색","힘껏"]'
      );
    },
    function (e) {
      e.exports = JSON.parse(
        '["ábaco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","acción","aceite","acelga","acento","aceptar","ácido","aclarar","acné","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","aéreo","afectar","afición","afinar","afirmar","ágil","agitar","agonía","agosto","agotar","agregar","agrio","agua","agudo","águila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacrán","alambre","alarma","alba","álbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodón","aliado","aliento","alivio","alma","almeja","almíbar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","ámbar","ámbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","andén","anemia","ángulo","anillo","ánimo","anís","anotar","antena","antiguo","antojo","anual","anular","anuncio","añadir","añejo","año","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","araña","arar","árbitro","árbol","arbusto","archivo","arco","arder","ardilla","arduo","área","árido","aries","armonía","arnés","aroma","arpa","arpón","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","áspero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","ático","atleta","átomo","atraer","atroz","atún","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avión","aviso","ayer","ayuda","ayuno","azafrán","azar","azote","azúcar","azufre","azul","baba","babor","bache","bahía","baile","bajar","balanza","balcón","balde","bambú","banco","banda","baño","barba","barco","barniz","barro","báscula","bastón","basura","batalla","batería","batir","batuta","baúl","bazar","bebé","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsái","borde","borrar","bosque","bote","botín","bóveda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufón","búho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzón","caballo","cabeza","cabina","cabra","cacao","cadáver","cadena","caer","café","caída","caimán","caja","cajón","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","cáncer","candil","canela","canguro","canica","canto","caña","cañón","caoba","caos","capaz","capitán","capote","captar","capucha","cara","carbón","cárcel","careta","carga","cariño","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","célebre","celoso","célula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","césped","cetro","chacal","chaleco","champú","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclón","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","ciprés","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","clínica","cobre","cocción","cochino","cocina","coco","código","codo","cofre","coger","cohete","cojín","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","cómodo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazón","corbata","corcho","cordón","corona","correr","coser","cosmos","costa","cráneo","cráter","crear","crecer","creído","crema","cría","crimen","cripta","crisis","cromo","crónica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupón","cúpula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","dátil","deber","débil","década","decir","dedo","defensa","definir","dejar","delfín","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvío","detalle","detener","deuda","día","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difícil","digno","dilema","diluir","dinero","directo","dirigir","disco","diseño","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","dragón","droga","ducha","duda","duelo","dueño","dulce","dúo","duque","durar","dureza","duro","ébano","ebrio","echar","eco","ecuador","edad","edición","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","élite","elixir","elogio","eludir","embudo","emitir","emoción","empate","empeño","empleo","empresa","enano","encargo","enchufe","encía","enemigo","enero","enfado","enfermo","engaño","enigma","enlace","enorme","enredo","ensayo","enseñar","entero","entrar","envase","envío","época","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espía","esposa","espuma","esquí","estar","este","estilo","estufa","etapa","eterno","ética","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","éxito","experto","explicar","exponer","extremo","fábrica","fábula","fachada","fácil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","faraón","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fértil","fervor","festín","fiable","fianza","fiar","fibra","ficción","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flúor","fobia","foca","fogata","fogón","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","frágil","franja","frase","fraude","freír","freno","fresa","frío","frito","fruta","fuego","fuente","fuerza","fuga","fumar","función","funda","furgón","furia","fusil","fútbol","futuro","gacela","gafas","gaita","gajo","gala","galería","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavilán","gemelo","gemir","gen","género","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gráfico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","grúa","grueso","grumo","grupo","guante","guapo","guardia","guerra","guía","guiño","guion","guiso","guitarra","gusano","gustar","haber","hábil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazaña","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","héroe","hervir","hielo","hierro","hígado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","húmedo","humilde","humo","hundir","huracán","hurto","icono","ideal","idioma","ídolo","iglesia","iglú","igual","ilegal","ilusión","imagen","imán","imitar","impar","imperio","imponer","impulso","incapaz","índice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","interés","íntimo","intuir","inútil","invierno","ira","iris","ironía","isla","islote","jabalí","jabón","jamón","jarabe","jardín","jarra","jaula","jazmín","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","júpiter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladrón","lagarto","lágrima","laguna","laico","lamer","lámina","lámpara","lana","lancha","langosta","lanza","lápiz","largo","larva","lástima","lata","látex","latir","laurel","lavar","lazo","leal","lección","leche","lector","leer","legión","legumbre","lejano","lengua","lento","leña","león","leopardo","lesión","letal","letra","leve","leyenda","libertad","libro","licor","líder","lidiar","lienzo","liga","ligero","lima","límite","limón","limpio","lince","lindo","línea","lingote","lino","linterna","líquido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","loción","loco","locura","lógica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","maíz","maldad","maleta","malla","malo","mamá","mambo","mamut","manco","mando","manejar","manga","maniquí","manjar","mano","manso","manta","mañana","mapa","máquina","mar","marco","marea","marfil","margen","marido","mármol","marrón","martes","marzo","masa","máscara","masivo","matar","materia","matiz","matriz","máximo","mayor","mazorca","mecha","medalla","medio","médula","mejilla","mejor","melena","melón","memoria","menor","mensaje","mente","menú","mercado","merengue","mérito","mes","mesón","meta","meter","método","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millón","mimo","mina","minero","mínimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","moción","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","moño","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","móvil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","muñeca","mural","muro","músculo","museo","musgo","música","muslo","nácar","nación","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","náusea","naval","nave","navidad","necio","néctar","negar","negocio","negro","neón","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","niñez","niño","nítido","nivel","nobleza","noche","nómina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","núcleo","nudillo","nudo","nuera","nueve","nuez","nulo","número","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","océano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oído","oír","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opción","ópera","opinar","oponer","optar","óptica","opuesto","oración","orador","oral","órbita","orca","orden","oreja","órgano","orgía","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadía","oscuro","osezno","oso","ostra","otoño","otro","oveja","óvulo","óxido","oxígeno","oyente","ozono","pacto","padre","paella","página","pago","país","pájaro","palabra","palco","paleta","pálido","palma","paloma","palpar","pan","panal","pánico","pantera","pañuelo","papá","papel","papilla","paquete","parar","parcela","pared","parir","paro","párpado","parque","párrafo","parte","pasar","paseo","pasión","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peatón","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldaño","pelea","peligro","pellejo","pelo","peluca","pena","pensar","peñón","peón","peor","pepino","pequeño","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pésimo","pestaña","pétalo","petróleo","pez","pezuña","picar","pichón","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","piña","piojo","pipa","pirata","pisar","piscina","piso","pista","pitón","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesía","poeta","polen","policía","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porción","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","príncipe","prisión","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","próximo","prueba","público","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmón","pulpo","pulso","puma","punto","puñal","puño","pupa","pupila","puré","quedar","queja","quemar","querer","queso","quieto","química","quince","quitar","rábano","rabia","rabo","ración","radical","raíz","rama","rampa","rancho","rango","rapaz","rápido","rapto","rasgo","raspa","rato","rayo","raza","razón","reacción","realidad","rebaño","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refrán","refugio","regalo","regir","regla","regreso","rehén","reino","reír","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","revés","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","rígido","rigor","rincón","riñón","río","riqueza","risa","ritmo","rito","rizo","roble","roce","rociar","rodar","rodeo","rodilla","roer","rojizo","rojo","romero","romper","ron","ronco","ronda","ropa","ropero","rosa","rosca","rostro","rotar","rubí","rubor","rudo","rueda","rugir","ruido","ruina","ruleta","rulo","rumbo","rumor","ruptura","ruta","rutina","sábado","saber","sabio","sable","sacar","sagaz","sagrado","sala","saldo","salero","salir","salmón","salón","salsa","salto","salud","salvar","samba","sanción","sandía","sanear","sangre","sanidad","sano","santo","sapo","saque","sardina","sartén","sastre","satán","sauna","saxofón","sección","seco","secreto","secta","sed","seguir","seis","sello","selva","semana","semilla","senda","sensor","señal","señor","separar","sepia","sequía","ser","serie","sermón","servir","sesenta","sesión","seta","setenta","severo","sexo","sexto","sidra","siesta","siete","siglo","signo","sílaba","silbar","silencio","silla","símbolo","simio","sirena","sistema","sitio","situar","sobre","socio","sodio","sol","solapa","soldado","soledad","sólido","soltar","solución","sombra","sondeo","sonido","sonoro","sonrisa","sopa","soplar","soporte","sordo","sorpresa","sorteo","sostén","sótano","suave","subir","suceso","sudor","suegra","suelo","sueño","suerte","sufrir","sujeto","sultán","sumar","superar","suplir","suponer","supremo","sur","surco","sureño","surgir","susto","sutil","tabaco","tabique","tabla","tabú","taco","tacto","tajo","talar","talco","talento","talla","talón","tamaño","tambor","tango","tanque","tapa","tapete","tapia","tapón","taquilla","tarde","tarea","tarifa","tarjeta","tarot","tarro","tarta","tatuaje","tauro","taza","tazón","teatro","techo","tecla","técnica","tejado","tejer","tejido","tela","teléfono","tema","temor","templo","tenaz","tender","tener","tenis","tenso","teoría","terapia","terco","término","ternura","terror","tesis","tesoro","testigo","tetera","texto","tez","tibio","tiburón","tiempo","tienda","tierra","tieso","tigre","tijera","tilde","timbre","tímido","timo","tinta","tío","típico","tipo","tira","tirón","titán","títere","título","tiza","toalla","tobillo","tocar","tocino","todo","toga","toldo","tomar","tono","tonto","topar","tope","toque","tórax","torero","tormenta","torneo","toro","torpedo","torre","torso","tortuga","tos","tosco","toser","tóxico","trabajo","tractor","traer","tráfico","trago","traje","tramo","trance","trato","trauma","trazar","trébol","tregua","treinta","tren","trepar","tres","tribu","trigo","tripa","triste","triunfo","trofeo","trompa","tronco","tropa","trote","trozo","truco","trueno","trufa","tubería","tubo","tuerto","tumba","tumor","túnel","túnica","turbina","turismo","turno","tutor","ubicar","úlcera","umbral","unidad","unir","universo","uno","untar","uña","urbano","urbe","urgente","urna","usar","usuario","útil","utopía","uva","vaca","vacío","vacuna","vagar","vago","vaina","vajilla","vale","válido","valle","valor","válvula","vampiro","vara","variar","varón","vaso","vecino","vector","vehículo","veinte","vejez","vela","velero","veloz","vena","vencer","venda","veneno","vengar","venir","venta","venus","ver","verano","verbo","verde","vereda","verja","verso","verter","vía","viaje","vibrar","vicio","víctima","vida","vídeo","vidrio","viejo","viernes","vigor","vil","villa","vinagre","vino","viñedo","violín","viral","virgo","virtud","visor","víspera","vista","vitamina","viudo","vivaz","vivero","vivir","vivo","volcán","volumen","volver","voraz","votar","voto","voz","vuelo","vulgar","yacer","yate","yegua","yema","yerno","yeso","yodo","yoga","yogur","zafiro","zanja","zapato","zarza","zona","zorro","zumo","zurdo"]'
      );
    },
    function (e, t, r) {
      'use strict';
      var n = r(131),
        i = r(2).Buffer;
      e.exports = function (e) {
        function t(t) {
          var r = t.slice(0, -4),
            n = t.slice(-4),
            i = e(r);
          if (!((n[0] ^ i[0]) | (n[1] ^ i[1]) | (n[2] ^ i[2]) | (n[3] ^ i[3])))
            return r;
        }
        return {
          encode: function (t) {
            var r = e(t);
            return n.encode(i.concat([t, r], t.length + 4));
          },
          decode: function (e) {
            var r = t(n.decode(e));
            if (!r) throw new Error('Invalid checksum');
            return r;
          },
          decodeUnsafe: function (e) {
            var r = n.decodeUnsafe(e);
            if (r) return t(r);
          },
        };
      };
    },
    function (e, t, r) {
      var n = r(132);
      e.exports = n(
        '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'
      );
    },
    function (e, t, r) {
      'use strict';
      var n = r(2).Buffer;
      e.exports = function (e) {
        if (e.length >= 255) throw new TypeError('Alphabet too long');
        for (var t = new Uint8Array(256), r = 0; r < t.length; r++) t[r] = 255;
        for (var i = 0; i < e.length; i++) {
          var o = e.charAt(i),
            a = o.charCodeAt(0);
          if (255 !== t[a]) throw new TypeError(o + ' is ambiguous');
          t[a] = i;
        }
        var s = e.length,
          u = e.charAt(0),
          c = Math.log(s) / Math.log(256),
          f = Math.log(256) / Math.log(s);
        function l(e) {
          if ('string' != typeof e) throw new TypeError('Expected String');
          if (0 === e.length) return n.alloc(0);
          var r = 0;
          if (' ' !== e[r]) {
            for (var i = 0, o = 0; e[r] === u; ) i++, r++;
            for (
              var a = ((e.length - r) * c + 1) >>> 0, f = new Uint8Array(a);
              e[r];

            ) {
              var l = t[e.charCodeAt(r)];
              if (255 === l) return;
              for (
                var d = 0, p = a - 1;
                (0 !== l || d < o) && -1 !== p;
                p--, d++
              )
                (l += (s * f[p]) >>> 0),
                  (f[p] = l % 256 >>> 0),
                  (l = (l / 256) >>> 0);
              if (0 !== l) throw new Error('Non-zero carry');
              (o = d), r++;
            }
            if (' ' !== e[r]) {
              for (var h = a - o; h !== a && 0 === f[h]; ) h++;
              var m = n.allocUnsafe(i + (a - h));
              m.fill(0, 0, i);
              for (var b = i; h !== a; ) m[b++] = f[h++];
              return m;
            }
          }
        }
        return {
          encode: function (t) {
            if (
              ((Array.isArray(t) || t instanceof Uint8Array) && (t = n.from(t)),
              !n.isBuffer(t))
            )
              throw new TypeError('Expected Buffer');
            if (0 === t.length) return '';
            for (var r = 0, i = 0, o = 0, a = t.length; o !== a && 0 === t[o]; )
              o++, r++;
            for (
              var c = ((a - o) * f + 1) >>> 0, l = new Uint8Array(c);
              o !== a;

            ) {
              for (
                var d = t[o], p = 0, h = c - 1;
                (0 !== d || p < i) && -1 !== h;
                h--, p++
              )
                (d += (256 * l[h]) >>> 0),
                  (l[h] = d % s >>> 0),
                  (d = (d / s) >>> 0);
              if (0 !== d) throw new Error('Non-zero carry');
              (i = p), o++;
            }
            for (var m = c - i; m !== c && 0 === l[m]; ) m++;
            for (var b = u.repeat(r); m < c; ++m) b += e.charAt(l[m]);
            return b;
          },
          decodeUnsafe: l,
          decode: function (e) {
            var t = l(e);
            if (t) return t;
            throw new Error('Non-base' + s + ' character');
          },
        };
      };
    },
    function (e, t, r) {
      let n = r(26),
        i = r(46);
      e.exports = {
        hash160: function (e) {
          const t = n('sha256').update(e).digest();
          try {
            return n('rmd160').update(t).digest();
          } catch (e) {
            return n('ripemd160').update(t).digest();
          }
        },
        hmacSHA512: function (e, t) {
          return i('sha512', e).update(t).digest();
        },
      };
    },
    function (e, t, r) {
      'use strict';
      let n = r(70)('secp256k1');
      delete n.path;
      for (let e in n)
        0 === e.indexOf('is') &&
          (n[e].toJSON = function () {
            return e;
          });
      e.exports = n;
    },
    function (e, t, r) {
      var n = r(33).sep || '/';
      e.exports = function (e) {
        if (
          'string' != typeof e ||
          e.length <= 7 ||
          'file://' != e.substring(0, 7)
        )
          throw new TypeError(
            'must pass in a file:// URI to convert to a file path'
          );
        var t = decodeURI(e.substring(7)),
          r = t.indexOf('/'),
          i = t.substring(0, r),
          o = t.substring(r + 1);
        'localhost' == i && (i = '');
        i && (i = n + n + i);
        (o = o.replace(/^(.+)\|/, '$1:')),
          '\\' == n && (o = o.replace(/\//g, '\\'));
        /^.+\:/.test(o) || (o = n + o);
        return i + o;
      };
    },
    function (e, t, r) {
      const n = r(10),
        i = new (0, r(71).ec)('secp256k1'),
        o = r(156),
        a = Buffer.alloc(32, 0),
        s = Buffer.from(
          'fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141',
          'hex'
        ),
        u = Buffer.from(
          'fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f',
          'hex'
        ),
        c = i.curve.n,
        f = c.shrn(1),
        l = i.curve.g;
      function d(e) {
        return Buffer.isBuffer(e) && 32 === e.length;
      }
      function p(e) {
        return !!d(e) && e.compare(s) < 0;
      }
      function h(e) {
        if (!Buffer.isBuffer(e)) return !1;
        if (e.length < 33) return !1;
        const t = e[0],
          r = e.slice(1, 33);
        if (0 === r.compare(a)) return !1;
        if (r.compare(u) >= 0) return !1;
        if ((2 === t || 3 === t) && 33 === e.length) {
          try {
            w(e);
          } catch (e) {
            return !1;
          }
          return !0;
        }
        const n = e.slice(33);
        return (
          0 !== n.compare(a) &&
          !(n.compare(u) >= 0) &&
          4 === t &&
          65 === e.length
        );
      }
      function m(e) {
        return 4 !== e[0];
      }
      function b(e) {
        return !!d(e) && e.compare(a) > 0 && e.compare(s) < 0;
      }
      function g(e, t) {
        return void 0 === e && void 0 !== t ? m(t) : void 0 === e || e;
      }
      function v(e) {
        return new n(e);
      }
      function y(e) {
        return e.toArrayLike(Buffer, 'be', 32);
      }
      function w(e) {
        return i.curve.decodePoint(e);
      }
      function _(e, t) {
        return Buffer.from(e._encode(t));
      }
      function E(e, t, r) {
        if (!d(e)) throw new TypeError('Expected Hash');
        if (!b(t)) throw new TypeError('Expected Private');
        if (void 0 !== r && !d(r))
          throw new TypeError('Expected Extra Data (32 bytes)');
        const n = v(t),
          i = v(e);
        let a, s;
        o(
          e,
          t,
          function (e) {
            const t = v(e),
              r = l.mul(t);
            return (
              !r.isInfinity() &&
              ((a = r.x.umod(c)),
              0 !== a.isZero() &&
                ((s = t
                  .invm(c)
                  .mul(i.add(n.mul(a)))
                  .umod(c)),
                0 !== s.isZero()))
            );
          },
          b,
          r
        ),
          s.cmp(f) > 0 && (s = c.sub(s));
        const u = Buffer.allocUnsafe(64);
        return y(a).copy(u, 0), y(s).copy(u, 32), u;
      }
      e.exports = {
        isPoint: h,
        isPointCompressed: function (e) {
          return !!h(e) && m(e);
        },
        isPrivate: b,
        pointAdd: function (e, t, r) {
          if (!h(e)) throw new TypeError('Expected Point');
          if (!h(t)) throw new TypeError('Expected Point');
          const n = w(e),
            i = w(t),
            o = n.add(i);
          return o.isInfinity() ? null : _(o, g(r, e));
        },
        pointAddScalar: function (e, t, r) {
          if (!h(e)) throw new TypeError('Expected Point');
          if (!p(t)) throw new TypeError('Expected Tweak');
          const n = g(r, e),
            i = w(e);
          if (0 === t.compare(a)) return _(i, n);
          const o = v(t),
            s = l.mul(o),
            u = i.add(s);
          return u.isInfinity() ? null : _(u, n);
        },
        pointCompress: function (e, t) {
          if (!h(e)) throw new TypeError('Expected Point');
          const r = w(e);
          if (r.isInfinity()) throw new TypeError('Expected Point');
          return _(r, g(t, e));
        },
        pointFromScalar: function (e, t) {
          if (!b(e)) throw new TypeError('Expected Private');
          const r = v(e),
            n = l.mul(r);
          return n.isInfinity() ? null : _(n, g(t));
        },
        pointMultiply: function (e, t, r) {
          if (!h(e)) throw new TypeError('Expected Point');
          if (!p(t)) throw new TypeError('Expected Tweak');
          const n = g(r, e),
            i = w(e),
            o = v(t),
            a = i.mul(o);
          return a.isInfinity() ? null : _(a, n);
        },
        privateAdd: function (e, t) {
          if (!b(e)) throw new TypeError('Expected Private');
          if (!p(t)) throw new TypeError('Expected Tweak');
          const r = v(e),
            n = v(t),
            i = y(r.add(n).umod(c));
          return b(i) ? i : null;
        },
        privateSub: function (e, t) {
          if (!b(e)) throw new TypeError('Expected Private');
          if (!p(t)) throw new TypeError('Expected Tweak');
          const r = v(e),
            n = v(t),
            i = y(r.sub(n).umod(c));
          return b(i) ? i : null;
        },
        sign: function (e, t) {
          return E(e, t);
        },
        signWithEntropy: function (e, t, r) {
          return E(e, t, r);
        },
        verify: function (e, t, r, n) {
          if (!d(e)) throw new TypeError('Expected Hash');
          if (!h(t)) throw new TypeError('Expected Point');
          if (
            !(function (e) {
              const t = e.slice(0, 32),
                r = e.slice(32, 64);
              return (
                Buffer.isBuffer(e) &&
                64 === e.length &&
                t.compare(s) < 0 &&
                r.compare(s) < 0
              );
            })(r)
          )
            throw new TypeError('Expected Signature');
          const i = w(t),
            o = v(r.slice(0, 32)),
            a = v(r.slice(32, 64));
          if (n && a.cmp(f) > 0) return !1;
          if (o.gtn(0) <= 0) return !1;
          if (a.gtn(0) <= 0) return !1;
          const u = v(e),
            p = a.invm(c),
            m = u.mul(p).umod(c),
            b = o.mul(p).umod(c),
            g = l.mulAdd(m, i, b);
          return !g.isInfinity() && g.x.umod(c).eq(o);
        },
      };
    },
    function (e) {
      e.exports = JSON.parse(
        '{"name":"elliptic","version":"6.5.2","description":"EC cryptography","main":"lib/elliptic.js","files":["lib"],"scripts":{"jscs":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","jshint":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","lint":"npm run jscs && npm run jshint","unit":"istanbul test _mocha --reporter=spec test/index.js","test":"npm run lint && npm run unit","version":"grunt dist && git add dist/"},"repository":{"type":"git","url":"git@github.com:indutny/elliptic"},"keywords":["EC","Elliptic","curve","Cryptography"],"author":"Fedor Indutny <fedor@indutny.com>","license":"MIT","bugs":{"url":"https://github.com/indutny/elliptic/issues"},"homepage":"https://github.com/indutny/elliptic","devDependencies":{"brfs":"^1.4.3","coveralls":"^3.0.8","grunt":"^1.0.4","grunt-browserify":"^5.0.0","grunt-cli":"^1.2.0","grunt-contrib-connect":"^1.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^1.0.1","grunt-mocha-istanbul":"^3.0.1","grunt-saucelabs":"^9.0.1","istanbul":"^0.4.2","jscs":"^3.0.7","jshint":"^2.10.3","mocha":"^6.2.2"},"dependencies":{"bn.js":"^4.4.0","brorand":"^1.0.1","hash.js":"^1.0.0","hmac-drbg":"^1.0.0","inherits":"^2.0.1","minimalistic-assert":"^1.0.0","minimalistic-crypto-utils":"^1.0.0"}}'
      );
    },
    function (e, t, r) {
      'use strict';
      var n = r(8),
        i = r(10),
        o = r(25),
        a = r(35),
        s = n.assert;
      function u(e) {
        a.call(this, 'short', e),
          (this.a = new i(e.a, 16).toRed(this.red)),
          (this.b = new i(e.b, 16).toRed(this.red)),
          (this.tinv = this.two.redInvm()),
          (this.zeroA = 0 === this.a.fromRed().cmpn(0)),
          (this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3)),
          (this.endo = this._getEndomorphism(e)),
          (this._endoWnafT1 = new Array(4)),
          (this._endoWnafT2 = new Array(4));
      }
      function c(e, t, r, n) {
        a.BasePoint.call(this, e, 'affine'),
          null === t && null === r
            ? ((this.x = null), (this.y = null), (this.inf = !0))
            : ((this.x = new i(t, 16)),
              (this.y = new i(r, 16)),
              n &&
                (this.x.forceRed(this.curve.red),
                this.y.forceRed(this.curve.red)),
              this.x.red || (this.x = this.x.toRed(this.curve.red)),
              this.y.red || (this.y = this.y.toRed(this.curve.red)),
              (this.inf = !1));
      }
      function f(e, t, r, n) {
        a.BasePoint.call(this, e, 'jacobian'),
          null === t && null === r && null === n
            ? ((this.x = this.curve.one),
              (this.y = this.curve.one),
              (this.z = new i(0)))
            : ((this.x = new i(t, 16)),
              (this.y = new i(r, 16)),
              (this.z = new i(n, 16))),
          this.x.red || (this.x = this.x.toRed(this.curve.red)),
          this.y.red || (this.y = this.y.toRed(this.curve.red)),
          this.z.red || (this.z = this.z.toRed(this.curve.red)),
          (this.zOne = this.z === this.curve.one);
      }
      o(u, a),
        (e.exports = u),
        (u.prototype._getEndomorphism = function (e) {
          if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
            var t, r;
            if (e.beta) t = new i(e.beta, 16).toRed(this.red);
            else {
              var n = this._getEndoRoots(this.p);
              t = (t = n[0].cmp(n[1]) < 0 ? n[0] : n[1]).toRed(this.red);
            }
            if (e.lambda) r = new i(e.lambda, 16);
            else {
              var o = this._getEndoRoots(this.n);
              0 === this.g.mul(o[0]).x.cmp(this.g.x.redMul(t))
                ? (r = o[0])
                : ((r = o[1]),
                  s(0 === this.g.mul(r).x.cmp(this.g.x.redMul(t))));
            }
            return {
              beta: t,
              lambda: r,
              basis: e.basis
                ? e.basis.map(function (e) {
                    return { a: new i(e.a, 16), b: new i(e.b, 16) };
                  })
                : this._getEndoBasis(r),
            };
          }
        }),
        (u.prototype._getEndoRoots = function (e) {
          var t = e === this.p ? this.red : i.mont(e),
            r = new i(2).toRed(t).redInvm(),
            n = r.redNeg(),
            o = new i(3).toRed(t).redNeg().redSqrt().redMul(r);
          return [n.redAdd(o).fromRed(), n.redSub(o).fromRed()];
        }),
        (u.prototype._getEndoBasis = function (e) {
          for (
            var t,
              r,
              n,
              o,
              a,
              s,
              u,
              c,
              f,
              l = this.n.ushrn(Math.floor(this.n.bitLength() / 2)),
              d = e,
              p = this.n.clone(),
              h = new i(1),
              m = new i(0),
              b = new i(0),
              g = new i(1),
              v = 0;
            0 !== d.cmpn(0);

          ) {
            var y = p.div(d);
            (c = p.sub(y.mul(d))), (f = b.sub(y.mul(h)));
            var w = g.sub(y.mul(m));
            if (!n && c.cmp(l) < 0)
              (t = u.neg()), (r = h), (n = c.neg()), (o = f);
            else if (n && 2 == ++v) break;
            (u = c), (p = d), (d = c), (b = h), (h = f), (g = m), (m = w);
          }
          (a = c.neg()), (s = f);
          var _ = n.sqr().add(o.sqr());
          return (
            a.sqr().add(s.sqr()).cmp(_) >= 0 && ((a = t), (s = r)),
            n.negative && ((n = n.neg()), (o = o.neg())),
            a.negative && ((a = a.neg()), (s = s.neg())),
            [
              { a: n, b: o },
              { a: a, b: s },
            ]
          );
        }),
        (u.prototype._endoSplit = function (e) {
          var t = this.endo.basis,
            r = t[0],
            n = t[1],
            i = n.b.mul(e).divRound(this.n),
            o = r.b.neg().mul(e).divRound(this.n),
            a = i.mul(r.a),
            s = o.mul(n.a),
            u = i.mul(r.b),
            c = o.mul(n.b);
          return { k1: e.sub(a).sub(s), k2: u.add(c).neg() };
        }),
        (u.prototype.pointFromX = function (e, t) {
          (e = new i(e, 16)).red || (e = e.toRed(this.red));
          var r = e
              .redSqr()
              .redMul(e)
              .redIAdd(e.redMul(this.a))
              .redIAdd(this.b),
            n = r.redSqrt();
          if (0 !== n.redSqr().redSub(r).cmp(this.zero))
            throw new Error('invalid point');
          var o = n.fromRed().isOdd();
          return ((t && !o) || (!t && o)) && (n = n.redNeg()), this.point(e, n);
        }),
        (u.prototype.validate = function (e) {
          if (e.inf) return !0;
          var t = e.x,
            r = e.y,
            n = this.a.redMul(t),
            i = t.redSqr().redMul(t).redIAdd(n).redIAdd(this.b);
          return 0 === r.redSqr().redISub(i).cmpn(0);
        }),
        (u.prototype._endoWnafMulAdd = function (e, t, r) {
          for (
            var n = this._endoWnafT1, i = this._endoWnafT2, o = 0;
            o < e.length;
            o++
          ) {
            var a = this._endoSplit(t[o]),
              s = e[o],
              u = s._getBeta();
            a.k1.negative && (a.k1.ineg(), (s = s.neg(!0))),
              a.k2.negative && (a.k2.ineg(), (u = u.neg(!0))),
              (n[2 * o] = s),
              (n[2 * o + 1] = u),
              (i[2 * o] = a.k1),
              (i[2 * o + 1] = a.k2);
          }
          for (
            var c = this._wnafMulAdd(1, n, i, 2 * o, r), f = 0;
            f < 2 * o;
            f++
          )
            (n[f] = null), (i[f] = null);
          return c;
        }),
        o(c, a.BasePoint),
        (u.prototype.point = function (e, t, r) {
          return new c(this, e, t, r);
        }),
        (u.prototype.pointFromJSON = function (e, t) {
          return c.fromJSON(this, e, t);
        }),
        (c.prototype._getBeta = function () {
          if (this.curve.endo) {
            var e = this.precomputed;
            if (e && e.beta) return e.beta;
            var t = this.curve.point(
              this.x.redMul(this.curve.endo.beta),
              this.y
            );
            if (e) {
              var r = this.curve,
                n = function (e) {
                  return r.point(e.x.redMul(r.endo.beta), e.y);
                };
              (e.beta = t),
                (t.precomputed = {
                  beta: null,
                  naf: e.naf && { wnd: e.naf.wnd, points: e.naf.points.map(n) },
                  doubles: e.doubles && {
                    step: e.doubles.step,
                    points: e.doubles.points.map(n),
                  },
                });
            }
            return t;
          }
        }),
        (c.prototype.toJSON = function () {
          return this.precomputed
            ? [
                this.x,
                this.y,
                this.precomputed && {
                  doubles: this.precomputed.doubles && {
                    step: this.precomputed.doubles.step,
                    points: this.precomputed.doubles.points.slice(1),
                  },
                  naf: this.precomputed.naf && {
                    wnd: this.precomputed.naf.wnd,
                    points: this.precomputed.naf.points.slice(1),
                  },
                },
              ]
            : [this.x, this.y];
        }),
        (c.fromJSON = function (e, t, r) {
          'string' == typeof t && (t = JSON.parse(t));
          var n = e.point(t[0], t[1], r);
          if (!t[2]) return n;
          function i(t) {
            return e.point(t[0], t[1], r);
          }
          var o = t[2];
          return (
            (n.precomputed = {
              beta: null,
              doubles: o.doubles && {
                step: o.doubles.step,
                points: [n].concat(o.doubles.points.map(i)),
              },
              naf: o.naf && {
                wnd: o.naf.wnd,
                points: [n].concat(o.naf.points.map(i)),
              },
            }),
            n
          );
        }),
        (c.prototype.inspect = function () {
          return this.isInfinity()
            ? '<EC Point Infinity>'
            : '<EC Point x: ' +
                this.x.fromRed().toString(16, 2) +
                ' y: ' +
                this.y.fromRed().toString(16, 2) +
                '>';
        }),
        (c.prototype.isInfinity = function () {
          return this.inf;
        }),
        (c.prototype.add = function (e) {
          if (this.inf) return e;
          if (e.inf) return this;
          if (this.eq(e)) return this.dbl();
          if (this.neg().eq(e)) return this.curve.point(null, null);
          if (0 === this.x.cmp(e.x)) return this.curve.point(null, null);
          var t = this.y.redSub(e.y);
          0 !== t.cmpn(0) && (t = t.redMul(this.x.redSub(e.x).redInvm()));
          var r = t.redSqr().redISub(this.x).redISub(e.x),
            n = t.redMul(this.x.redSub(r)).redISub(this.y);
          return this.curve.point(r, n);
        }),
        (c.prototype.dbl = function () {
          if (this.inf) return this;
          var e = this.y.redAdd(this.y);
          if (0 === e.cmpn(0)) return this.curve.point(null, null);
          var t = this.curve.a,
            r = this.x.redSqr(),
            n = e.redInvm(),
            i = r.redAdd(r).redIAdd(r).redIAdd(t).redMul(n),
            o = i.redSqr().redISub(this.x.redAdd(this.x)),
            a = i.redMul(this.x.redSub(o)).redISub(this.y);
          return this.curve.point(o, a);
        }),
        (c.prototype.getX = function () {
          return this.x.fromRed();
        }),
        (c.prototype.getY = function () {
          return this.y.fromRed();
        }),
        (c.prototype.mul = function (e) {
          return (
            (e = new i(e, 16)),
            this.isInfinity()
              ? this
              : this._hasDoubles(e)
              ? this.curve._fixedNafMul(this, e)
              : this.curve.endo
              ? this.curve._endoWnafMulAdd([this], [e])
              : this.curve._wnafMul(this, e)
          );
        }),
        (c.prototype.mulAdd = function (e, t, r) {
          var n = [this, t],
            i = [e, r];
          return this.curve.endo
            ? this.curve._endoWnafMulAdd(n, i)
            : this.curve._wnafMulAdd(1, n, i, 2);
        }),
        (c.prototype.jmulAdd = function (e, t, r) {
          var n = [this, t],
            i = [e, r];
          return this.curve.endo
            ? this.curve._endoWnafMulAdd(n, i, !0)
            : this.curve._wnafMulAdd(1, n, i, 2, !0);
        }),
        (c.prototype.eq = function (e) {
          return (
            this === e ||
            (this.inf === e.inf &&
              (this.inf || (0 === this.x.cmp(e.x) && 0 === this.y.cmp(e.y))))
          );
        }),
        (c.prototype.neg = function (e) {
          if (this.inf) return this;
          var t = this.curve.point(this.x, this.y.redNeg());
          if (e && this.precomputed) {
            var r = this.precomputed,
              n = function (e) {
                return e.neg();
              };
            t.precomputed = {
              naf: r.naf && { wnd: r.naf.wnd, points: r.naf.points.map(n) },
              doubles: r.doubles && {
                step: r.doubles.step,
                points: r.doubles.points.map(n),
              },
            };
          }
          return t;
        }),
        (c.prototype.toJ = function () {
          return this.inf
            ? this.curve.jpoint(null, null, null)
            : this.curve.jpoint(this.x, this.y, this.curve.one);
        }),
        o(f, a.BasePoint),
        (u.prototype.jpoint = function (e, t, r) {
          return new f(this, e, t, r);
        }),
        (f.prototype.toP = function () {
          if (this.isInfinity()) return this.curve.point(null, null);
          var e = this.z.redInvm(),
            t = e.redSqr(),
            r = this.x.redMul(t),
            n = this.y.redMul(t).redMul(e);
          return this.curve.point(r, n);
        }),
        (f.prototype.neg = function () {
          return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
        }),
        (f.prototype.add = function (e) {
          if (this.isInfinity()) return e;
          if (e.isInfinity()) return this;
          var t = e.z.redSqr(),
            r = this.z.redSqr(),
            n = this.x.redMul(t),
            i = e.x.redMul(r),
            o = this.y.redMul(t.redMul(e.z)),
            a = e.y.redMul(r.redMul(this.z)),
            s = n.redSub(i),
            u = o.redSub(a);
          if (0 === s.cmpn(0))
            return 0 !== u.cmpn(0)
              ? this.curve.jpoint(null, null, null)
              : this.dbl();
          var c = s.redSqr(),
            f = c.redMul(s),
            l = n.redMul(c),
            d = u.redSqr().redIAdd(f).redISub(l).redISub(l),
            p = u.redMul(l.redISub(d)).redISub(o.redMul(f)),
            h = this.z.redMul(e.z).redMul(s);
          return this.curve.jpoint(d, p, h);
        }),
        (f.prototype.mixedAdd = function (e) {
          if (this.isInfinity()) return e.toJ();
          if (e.isInfinity()) return this;
          var t = this.z.redSqr(),
            r = this.x,
            n = e.x.redMul(t),
            i = this.y,
            o = e.y.redMul(t).redMul(this.z),
            a = r.redSub(n),
            s = i.redSub(o);
          if (0 === a.cmpn(0))
            return 0 !== s.cmpn(0)
              ? this.curve.jpoint(null, null, null)
              : this.dbl();
          var u = a.redSqr(),
            c = u.redMul(a),
            f = r.redMul(u),
            l = s.redSqr().redIAdd(c).redISub(f).redISub(f),
            d = s.redMul(f.redISub(l)).redISub(i.redMul(c)),
            p = this.z.redMul(a);
          return this.curve.jpoint(l, d, p);
        }),
        (f.prototype.dblp = function (e) {
          if (0 === e) return this;
          if (this.isInfinity()) return this;
          if (!e) return this.dbl();
          if (this.curve.zeroA || this.curve.threeA) {
            for (var t = this, r = 0; r < e; r++) t = t.dbl();
            return t;
          }
          var n = this.curve.a,
            i = this.curve.tinv,
            o = this.x,
            a = this.y,
            s = this.z,
            u = s.redSqr().redSqr(),
            c = a.redAdd(a);
          for (r = 0; r < e; r++) {
            var f = o.redSqr(),
              l = c.redSqr(),
              d = l.redSqr(),
              p = f.redAdd(f).redIAdd(f).redIAdd(n.redMul(u)),
              h = o.redMul(l),
              m = p.redSqr().redISub(h.redAdd(h)),
              b = h.redISub(m),
              g = p.redMul(b);
            g = g.redIAdd(g).redISub(d);
            var v = c.redMul(s);
            r + 1 < e && (u = u.redMul(d)), (o = m), (s = v), (c = g);
          }
          return this.curve.jpoint(o, c.redMul(i), s);
        }),
        (f.prototype.dbl = function () {
          return this.isInfinity()
            ? this
            : this.curve.zeroA
            ? this._zeroDbl()
            : this.curve.threeA
            ? this._threeDbl()
            : this._dbl();
        }),
        (f.prototype._zeroDbl = function () {
          var e, t, r;
          if (this.zOne) {
            var n = this.x.redSqr(),
              i = this.y.redSqr(),
              o = i.redSqr(),
              a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
            a = a.redIAdd(a);
            var s = n.redAdd(n).redIAdd(n),
              u = s.redSqr().redISub(a).redISub(a),
              c = o.redIAdd(o);
            (c = (c = c.redIAdd(c)).redIAdd(c)),
              (e = u),
              (t = s.redMul(a.redISub(u)).redISub(c)),
              (r = this.y.redAdd(this.y));
          } else {
            var f = this.x.redSqr(),
              l = this.y.redSqr(),
              d = l.redSqr(),
              p = this.x.redAdd(l).redSqr().redISub(f).redISub(d);
            p = p.redIAdd(p);
            var h = f.redAdd(f).redIAdd(f),
              m = h.redSqr(),
              b = d.redIAdd(d);
            (b = (b = b.redIAdd(b)).redIAdd(b)),
              (e = m.redISub(p).redISub(p)),
              (t = h.redMul(p.redISub(e)).redISub(b)),
              (r = (r = this.y.redMul(this.z)).redIAdd(r));
          }
          return this.curve.jpoint(e, t, r);
        }),
        (f.prototype._threeDbl = function () {
          var e, t, r;
          if (this.zOne) {
            var n = this.x.redSqr(),
              i = this.y.redSqr(),
              o = i.redSqr(),
              a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
            a = a.redIAdd(a);
            var s = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),
              u = s.redSqr().redISub(a).redISub(a);
            e = u;
            var c = o.redIAdd(o);
            (c = (c = c.redIAdd(c)).redIAdd(c)),
              (t = s.redMul(a.redISub(u)).redISub(c)),
              (r = this.y.redAdd(this.y));
          } else {
            var f = this.z.redSqr(),
              l = this.y.redSqr(),
              d = this.x.redMul(l),
              p = this.x.redSub(f).redMul(this.x.redAdd(f));
            p = p.redAdd(p).redIAdd(p);
            var h = d.redIAdd(d),
              m = (h = h.redIAdd(h)).redAdd(h);
            (e = p.redSqr().redISub(m)),
              (r = this.y.redAdd(this.z).redSqr().redISub(l).redISub(f));
            var b = l.redSqr();
            (b = (b = (b = b.redIAdd(b)).redIAdd(b)).redIAdd(b)),
              (t = p.redMul(h.redISub(e)).redISub(b));
          }
          return this.curve.jpoint(e, t, r);
        }),
        (f.prototype._dbl = function () {
          var e = this.curve.a,
            t = this.x,
            r = this.y,
            n = this.z,
            i = n.redSqr().redSqr(),
            o = t.redSqr(),
            a = r.redSqr(),
            s = o.redAdd(o).redIAdd(o).redIAdd(e.redMul(i)),
            u = t.redAdd(t),
            c = (u = u.redIAdd(u)).redMul(a),
            f = s.redSqr().redISub(c.redAdd(c)),
            l = c.redISub(f),
            d = a.redSqr();
          d = (d = (d = d.redIAdd(d)).redIAdd(d)).redIAdd(d);
          var p = s.redMul(l).redISub(d),
            h = r.redAdd(r).redMul(n);
          return this.curve.jpoint(f, p, h);
        }),
        (f.prototype.trpl = function () {
          if (!this.curve.zeroA) return this.dbl().add(this);
          var e = this.x.redSqr(),
            t = this.y.redSqr(),
            r = this.z.redSqr(),
            n = t.redSqr(),
            i = e.redAdd(e).redIAdd(e),
            o = i.redSqr(),
            a = this.x.redAdd(t).redSqr().redISub(e).redISub(n),
            s = (a = (a = (a = a.redIAdd(a)).redAdd(a).redIAdd(a)).redISub(
              o
            )).redSqr(),
            u = n.redIAdd(n);
          u = (u = (u = u.redIAdd(u)).redIAdd(u)).redIAdd(u);
          var c = i.redIAdd(a).redSqr().redISub(o).redISub(s).redISub(u),
            f = t.redMul(c);
          f = (f = f.redIAdd(f)).redIAdd(f);
          var l = this.x.redMul(s).redISub(f);
          l = (l = l.redIAdd(l)).redIAdd(l);
          var d = this.y.redMul(c.redMul(u.redISub(c)).redISub(a.redMul(s)));
          d = (d = (d = d.redIAdd(d)).redIAdd(d)).redIAdd(d);
          var p = this.z.redAdd(a).redSqr().redISub(r).redISub(s);
          return this.curve.jpoint(l, d, p);
        }),
        (f.prototype.mul = function (e, t) {
          return (e = new i(e, t)), this.curve._wnafMul(this, e);
        }),
        (f.prototype.eq = function (e) {
          if ('affine' === e.type) return this.eq(e.toJ());
          if (this === e) return !0;
          var t = this.z.redSqr(),
            r = e.z.redSqr();
          if (0 !== this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0)) return !1;
          var n = t.redMul(this.z),
            i = r.redMul(e.z);
          return 0 === this.y.redMul(i).redISub(e.y.redMul(n)).cmpn(0);
        }),
        (f.prototype.eqXToP = function (e) {
          var t = this.z.redSqr(),
            r = e.toRed(this.curve.red).redMul(t);
          if (0 === this.x.cmp(r)) return !0;
          for (var n = e.clone(), i = this.curve.redN.redMul(t); ; ) {
            if ((n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0)) return !1;
            if ((r.redIAdd(i), 0 === this.x.cmp(r))) return !0;
          }
        }),
        (f.prototype.inspect = function () {
          return this.isInfinity()
            ? '<EC JPoint Infinity>'
            : '<EC JPoint x: ' +
                this.x.toString(16, 2) +
                ' y: ' +
                this.y.toString(16, 2) +
                ' z: ' +
                this.z.toString(16, 2) +
                '>';
        }),
        (f.prototype.isInfinity = function () {
          return 0 === this.z.cmpn(0);
        });
    },
    function (e, t) {
      'function' == typeof Object.create
        ? (e.exports = function (e, t) {
            t &&
              ((e.super_ = t),
              (e.prototype = Object.create(t.prototype, {
                constructor: {
                  value: e,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              })));
          })
        : (e.exports = function (e, t) {
            if (t) {
              e.super_ = t;
              var r = function () {};
              (r.prototype = t.prototype),
                (e.prototype = new r()),
                (e.prototype.constructor = e);
            }
          });
    },
    function (e, t, r) {
      'use strict';
      var n = r(10),
        i = r(25),
        o = r(35),
        a = r(8);
      function s(e) {
        o.call(this, 'mont', e),
          (this.a = new n(e.a, 16).toRed(this.red)),
          (this.b = new n(e.b, 16).toRed(this.red)),
          (this.i4 = new n(4).toRed(this.red).redInvm()),
          (this.two = new n(2).toRed(this.red)),
          (this.a24 = this.i4.redMul(this.a.redAdd(this.two)));
      }
      function u(e, t, r) {
        o.BasePoint.call(this, e, 'projective'),
          null === t && null === r
            ? ((this.x = this.curve.one), (this.z = this.curve.zero))
            : ((this.x = new n(t, 16)),
              (this.z = new n(r, 16)),
              this.x.red || (this.x = this.x.toRed(this.curve.red)),
              this.z.red || (this.z = this.z.toRed(this.curve.red)));
      }
      i(s, o),
        (e.exports = s),
        (s.prototype.validate = function (e) {
          var t = e.normalize().x,
            r = t.redSqr(),
            n = r.redMul(t).redAdd(r.redMul(this.a)).redAdd(t);
          return 0 === n.redSqrt().redSqr().cmp(n);
        }),
        i(u, o.BasePoint),
        (s.prototype.decodePoint = function (e, t) {
          return this.point(a.toArray(e, t), 1);
        }),
        (s.prototype.point = function (e, t) {
          return new u(this, e, t);
        }),
        (s.prototype.pointFromJSON = function (e) {
          return u.fromJSON(this, e);
        }),
        (u.prototype.precompute = function () {}),
        (u.prototype._encode = function () {
          return this.getX().toArray('be', this.curve.p.byteLength());
        }),
        (u.fromJSON = function (e, t) {
          return new u(e, t[0], t[1] || e.one);
        }),
        (u.prototype.inspect = function () {
          return this.isInfinity()
            ? '<EC Point Infinity>'
            : '<EC Point x: ' +
                this.x.fromRed().toString(16, 2) +
                ' z: ' +
                this.z.fromRed().toString(16, 2) +
                '>';
        }),
        (u.prototype.isInfinity = function () {
          return 0 === this.z.cmpn(0);
        }),
        (u.prototype.dbl = function () {
          var e = this.x.redAdd(this.z).redSqr(),
            t = this.x.redSub(this.z).redSqr(),
            r = e.redSub(t),
            n = e.redMul(t),
            i = r.redMul(t.redAdd(this.curve.a24.redMul(r)));
          return this.curve.point(n, i);
        }),
        (u.prototype.add = function () {
          throw new Error('Not supported on Montgomery curve');
        }),
        (u.prototype.diffAdd = function (e, t) {
          var r = this.x.redAdd(this.z),
            n = this.x.redSub(this.z),
            i = e.x.redAdd(e.z),
            o = e.x.redSub(e.z).redMul(r),
            a = i.redMul(n),
            s = t.z.redMul(o.redAdd(a).redSqr()),
            u = t.x.redMul(o.redISub(a).redSqr());
          return this.curve.point(s, u);
        }),
        (u.prototype.mul = function (e) {
          for (
            var t = e.clone(),
              r = this,
              n = this.curve.point(null, null),
              i = [];
            0 !== t.cmpn(0);
            t.iushrn(1)
          )
            i.push(t.andln(1));
          for (var o = i.length - 1; o >= 0; o--)
            0 === i[o]
              ? ((r = r.diffAdd(n, this)), (n = n.dbl()))
              : ((n = r.diffAdd(n, this)), (r = r.dbl()));
          return n;
        }),
        (u.prototype.mulAdd = function () {
          throw new Error('Not supported on Montgomery curve');
        }),
        (u.prototype.jumlAdd = function () {
          throw new Error('Not supported on Montgomery curve');
        }),
        (u.prototype.eq = function (e) {
          return 0 === this.getX().cmp(e.getX());
        }),
        (u.prototype.normalize = function () {
          return (
            (this.x = this.x.redMul(this.z.redInvm())),
            (this.z = this.curve.one),
            this
          );
        }),
        (u.prototype.getX = function () {
          return this.normalize(), this.x.fromRed();
        });
    },
    function (e, t, r) {
      'use strict';
      var n = r(8),
        i = r(10),
        o = r(25),
        a = r(35),
        s = n.assert;
      function u(e) {
        (this.twisted = 1 != (0 | e.a)),
          (this.mOneA = this.twisted && -1 == (0 | e.a)),
          (this.extended = this.mOneA),
          a.call(this, 'edwards', e),
          (this.a = new i(e.a, 16).umod(this.red.m)),
          (this.a = this.a.toRed(this.red)),
          (this.c = new i(e.c, 16).toRed(this.red)),
          (this.c2 = this.c.redSqr()),
          (this.d = new i(e.d, 16).toRed(this.red)),
          (this.dd = this.d.redAdd(this.d)),
          s(!this.twisted || 0 === this.c.fromRed().cmpn(1)),
          (this.oneC = 1 == (0 | e.c));
      }
      function c(e, t, r, n, o) {
        a.BasePoint.call(this, e, 'projective'),
          null === t && null === r && null === n
            ? ((this.x = this.curve.zero),
              (this.y = this.curve.one),
              (this.z = this.curve.one),
              (this.t = this.curve.zero),
              (this.zOne = !0))
            : ((this.x = new i(t, 16)),
              (this.y = new i(r, 16)),
              (this.z = n ? new i(n, 16) : this.curve.one),
              (this.t = o && new i(o, 16)),
              this.x.red || (this.x = this.x.toRed(this.curve.red)),
              this.y.red || (this.y = this.y.toRed(this.curve.red)),
              this.z.red || (this.z = this.z.toRed(this.curve.red)),
              this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)),
              (this.zOne = this.z === this.curve.one),
              this.curve.extended &&
                !this.t &&
                ((this.t = this.x.redMul(this.y)),
                this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
      }
      o(u, a),
        (e.exports = u),
        (u.prototype._mulA = function (e) {
          return this.mOneA ? e.redNeg() : this.a.redMul(e);
        }),
        (u.prototype._mulC = function (e) {
          return this.oneC ? e : this.c.redMul(e);
        }),
        (u.prototype.jpoint = function (e, t, r, n) {
          return this.point(e, t, r, n);
        }),
        (u.prototype.pointFromX = function (e, t) {
          (e = new i(e, 16)).red || (e = e.toRed(this.red));
          var r = e.redSqr(),
            n = this.c2.redSub(this.a.redMul(r)),
            o = this.one.redSub(this.c2.redMul(this.d).redMul(r)),
            a = n.redMul(o.redInvm()),
            s = a.redSqrt();
          if (0 !== s.redSqr().redSub(a).cmp(this.zero))
            throw new Error('invalid point');
          var u = s.fromRed().isOdd();
          return ((t && !u) || (!t && u)) && (s = s.redNeg()), this.point(e, s);
        }),
        (u.prototype.pointFromY = function (e, t) {
          (e = new i(e, 16)).red || (e = e.toRed(this.red));
          var r = e.redSqr(),
            n = r.redSub(this.c2),
            o = r.redMul(this.d).redMul(this.c2).redSub(this.a),
            a = n.redMul(o.redInvm());
          if (0 === a.cmp(this.zero)) {
            if (t) throw new Error('invalid point');
            return this.point(this.zero, e);
          }
          var s = a.redSqrt();
          if (0 !== s.redSqr().redSub(a).cmp(this.zero))
            throw new Error('invalid point');
          return (
            s.fromRed().isOdd() !== t && (s = s.redNeg()), this.point(s, e)
          );
        }),
        (u.prototype.validate = function (e) {
          if (e.isInfinity()) return !0;
          e.normalize();
          var t = e.x.redSqr(),
            r = e.y.redSqr(),
            n = t.redMul(this.a).redAdd(r),
            i = this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(r)));
          return 0 === n.cmp(i);
        }),
        o(c, a.BasePoint),
        (u.prototype.pointFromJSON = function (e) {
          return c.fromJSON(this, e);
        }),
        (u.prototype.point = function (e, t, r, n) {
          return new c(this, e, t, r, n);
        }),
        (c.fromJSON = function (e, t) {
          return new c(e, t[0], t[1], t[2]);
        }),
        (c.prototype.inspect = function () {
          return this.isInfinity()
            ? '<EC Point Infinity>'
            : '<EC Point x: ' +
                this.x.fromRed().toString(16, 2) +
                ' y: ' +
                this.y.fromRed().toString(16, 2) +
                ' z: ' +
                this.z.fromRed().toString(16, 2) +
                '>';
        }),
        (c.prototype.isInfinity = function () {
          return (
            0 === this.x.cmpn(0) &&
            (0 === this.y.cmp(this.z) ||
              (this.zOne && 0 === this.y.cmp(this.curve.c)))
          );
        }),
        (c.prototype._extDbl = function () {
          var e = this.x.redSqr(),
            t = this.y.redSqr(),
            r = this.z.redSqr();
          r = r.redIAdd(r);
          var n = this.curve._mulA(e),
            i = this.x.redAdd(this.y).redSqr().redISub(e).redISub(t),
            o = n.redAdd(t),
            a = o.redSub(r),
            s = n.redSub(t),
            u = i.redMul(a),
            c = o.redMul(s),
            f = i.redMul(s),
            l = a.redMul(o);
          return this.curve.point(u, c, l, f);
        }),
        (c.prototype._projDbl = function () {
          var e,
            t,
            r,
            n = this.x.redAdd(this.y).redSqr(),
            i = this.x.redSqr(),
            o = this.y.redSqr();
          if (this.curve.twisted) {
            var a = (c = this.curve._mulA(i)).redAdd(o);
            if (this.zOne)
              (e = n.redSub(i).redSub(o).redMul(a.redSub(this.curve.two))),
                (t = a.redMul(c.redSub(o))),
                (r = a.redSqr().redSub(a).redSub(a));
            else {
              var s = this.z.redSqr(),
                u = a.redSub(s).redISub(s);
              (e = n.redSub(i).redISub(o).redMul(u)),
                (t = a.redMul(c.redSub(o))),
                (r = a.redMul(u));
            }
          } else {
            var c = i.redAdd(o);
            (s = this.curve._mulC(this.z).redSqr()),
              (u = c.redSub(s).redSub(s));
            (e = this.curve._mulC(n.redISub(c)).redMul(u)),
              (t = this.curve._mulC(c).redMul(i.redISub(o))),
              (r = c.redMul(u));
          }
          return this.curve.point(e, t, r);
        }),
        (c.prototype.dbl = function () {
          return this.isInfinity()
            ? this
            : this.curve.extended
            ? this._extDbl()
            : this._projDbl();
        }),
        (c.prototype._extAdd = function (e) {
          var t = this.y.redSub(this.x).redMul(e.y.redSub(e.x)),
            r = this.y.redAdd(this.x).redMul(e.y.redAdd(e.x)),
            n = this.t.redMul(this.curve.dd).redMul(e.t),
            i = this.z.redMul(e.z.redAdd(e.z)),
            o = r.redSub(t),
            a = i.redSub(n),
            s = i.redAdd(n),
            u = r.redAdd(t),
            c = o.redMul(a),
            f = s.redMul(u),
            l = o.redMul(u),
            d = a.redMul(s);
          return this.curve.point(c, f, d, l);
        }),
        (c.prototype._projAdd = function (e) {
          var t,
            r,
            n = this.z.redMul(e.z),
            i = n.redSqr(),
            o = this.x.redMul(e.x),
            a = this.y.redMul(e.y),
            s = this.curve.d.redMul(o).redMul(a),
            u = i.redSub(s),
            c = i.redAdd(s),
            f = this.x
              .redAdd(this.y)
              .redMul(e.x.redAdd(e.y))
              .redISub(o)
              .redISub(a),
            l = n.redMul(u).redMul(f);
          return (
            this.curve.twisted
              ? ((t = n.redMul(c).redMul(a.redSub(this.curve._mulA(o)))),
                (r = u.redMul(c)))
              : ((t = n.redMul(c).redMul(a.redSub(o))),
                (r = this.curve._mulC(u).redMul(c))),
            this.curve.point(l, t, r)
          );
        }),
        (c.prototype.add = function (e) {
          return this.isInfinity()
            ? e
            : e.isInfinity()
            ? this
            : this.curve.extended
            ? this._extAdd(e)
            : this._projAdd(e);
        }),
        (c.prototype.mul = function (e) {
          return this._hasDoubles(e)
            ? this.curve._fixedNafMul(this, e)
            : this.curve._wnafMul(this, e);
        }),
        (c.prototype.mulAdd = function (e, t, r) {
          return this.curve._wnafMulAdd(1, [this, t], [e, r], 2, !1);
        }),
        (c.prototype.jmulAdd = function (e, t, r) {
          return this.curve._wnafMulAdd(1, [this, t], [e, r], 2, !0);
        }),
        (c.prototype.normalize = function () {
          if (this.zOne) return this;
          var e = this.z.redInvm();
          return (
            (this.x = this.x.redMul(e)),
            (this.y = this.y.redMul(e)),
            this.t && (this.t = this.t.redMul(e)),
            (this.z = this.curve.one),
            (this.zOne = !0),
            this
          );
        }),
        (c.prototype.neg = function () {
          return this.curve.point(
            this.x.redNeg(),
            this.y,
            this.z,
            this.t && this.t.redNeg()
          );
        }),
        (c.prototype.getX = function () {
          return this.normalize(), this.x.fromRed();
        }),
        (c.prototype.getY = function () {
          return this.normalize(), this.y.fromRed();
        }),
        (c.prototype.eq = function (e) {
          return (
            this === e ||
            (0 === this.getX().cmp(e.getX()) && 0 === this.getY().cmp(e.getY()))
          );
        }),
        (c.prototype.eqXToP = function (e) {
          var t = e.toRed(this.curve.red).redMul(this.z);
          if (0 === this.x.cmp(t)) return !0;
          for (var r = e.clone(), n = this.curve.redN.redMul(this.z); ; ) {
            if ((r.iadd(this.curve.n), r.cmp(this.curve.p) >= 0)) return !1;
            if ((t.redIAdd(n), 0 === this.x.cmp(t))) return !0;
          }
        }),
        (c.prototype.toP = c.prototype.normalize),
        (c.prototype.mixedAdd = c.prototype.add);
    },
    function (e, t, r) {
      'use strict';
      (t.sha1 = r(143)),
        (t.sha224 = r(144)),
        (t.sha256 = r(76)),
        (t.sha384 = r(145)),
        (t.sha512 = r(77));
    },
    function (e, t, r) {
      'use strict';
      var n = r(12),
        i = r(30),
        o = r(75),
        a = n.rotl32,
        s = n.sum32,
        u = n.sum32_5,
        c = o.ft_1,
        f = i.BlockHash,
        l = [1518500249, 1859775393, 2400959708, 3395469782];
      function d() {
        if (!(this instanceof d)) return new d();
        f.call(this),
          (this.h = [
            1732584193,
            4023233417,
            2562383102,
            271733878,
            3285377520,
          ]),
          (this.W = new Array(80));
      }
      n.inherits(d, f),
        (e.exports = d),
        (d.blockSize = 512),
        (d.outSize = 160),
        (d.hmacStrength = 80),
        (d.padLength = 64),
        (d.prototype._update = function (e, t) {
          for (var r = this.W, n = 0; n < 16; n++) r[n] = e[t + n];
          for (; n < r.length; n++)
            r[n] = a(r[n - 3] ^ r[n - 8] ^ r[n - 14] ^ r[n - 16], 1);
          var i = this.h[0],
            o = this.h[1],
            f = this.h[2],
            d = this.h[3],
            p = this.h[4];
          for (n = 0; n < r.length; n++) {
            var h = ~~(n / 20),
              m = u(a(i, 5), c(h, o, f, d), p, r[n], l[h]);
            (p = d), (d = f), (f = a(o, 30)), (o = i), (i = m);
          }
          (this.h[0] = s(this.h[0], i)),
            (this.h[1] = s(this.h[1], o)),
            (this.h[2] = s(this.h[2], f)),
            (this.h[3] = s(this.h[3], d)),
            (this.h[4] = s(this.h[4], p));
        }),
        (d.prototype._digest = function (e) {
          return 'hex' === e
            ? n.toHex32(this.h, 'big')
            : n.split32(this.h, 'big');
        });
    },
    function (e, t, r) {
      'use strict';
      var n = r(12),
        i = r(76);
      function o() {
        if (!(this instanceof o)) return new o();
        i.call(this),
          (this.h = [
            3238371032,
            914150663,
            812702999,
            4144912697,
            4290775857,
            1750603025,
            1694076839,
            3204075428,
          ]);
      }
      n.inherits(o, i),
        (e.exports = o),
        (o.blockSize = 512),
        (o.outSize = 224),
        (o.hmacStrength = 192),
        (o.padLength = 64),
        (o.prototype._digest = function (e) {
          return 'hex' === e
            ? n.toHex32(this.h.slice(0, 7), 'big')
            : n.split32(this.h.slice(0, 7), 'big');
        });
    },
    function (e, t, r) {
      'use strict';
      var n = r(12),
        i = r(77);
      function o() {
        if (!(this instanceof o)) return new o();
        i.call(this),
          (this.h = [
            3418070365,
            3238371032,
            1654270250,
            914150663,
            2438529370,
            812702999,
            355462360,
            4144912697,
            1731405415,
            4290775857,
            2394180231,
            1750603025,
            3675008525,
            1694076839,
            1203062813,
            3204075428,
          ]);
      }
      n.inherits(o, i),
        (e.exports = o),
        (o.blockSize = 1024),
        (o.outSize = 384),
        (o.hmacStrength = 192),
        (o.padLength = 128),
        (o.prototype._digest = function (e) {
          return 'hex' === e
            ? n.toHex32(this.h.slice(0, 12), 'big')
            : n.split32(this.h.slice(0, 12), 'big');
        });
    },
    function (e, t, r) {
      'use strict';
      var n = r(12),
        i = r(30),
        o = n.rotl32,
        a = n.sum32,
        s = n.sum32_3,
        u = n.sum32_4,
        c = i.BlockHash;
      function f() {
        if (!(this instanceof f)) return new f();
        c.call(this),
          (this.h = [
            1732584193,
            4023233417,
            2562383102,
            271733878,
            3285377520,
          ]),
          (this.endian = 'little');
      }
      function l(e, t, r, n) {
        return e <= 15
          ? t ^ r ^ n
          : e <= 31
          ? (t & r) | (~t & n)
          : e <= 47
          ? (t | ~r) ^ n
          : e <= 63
          ? (t & n) | (r & ~n)
          : t ^ (r | ~n);
      }
      function d(e) {
        return e <= 15
          ? 0
          : e <= 31
          ? 1518500249
          : e <= 47
          ? 1859775393
          : e <= 63
          ? 2400959708
          : 2840853838;
      }
      function p(e) {
        return e <= 15
          ? 1352829926
          : e <= 31
          ? 1548603684
          : e <= 47
          ? 1836072691
          : e <= 63
          ? 2053994217
          : 0;
      }
      n.inherits(f, c),
        (t.ripemd160 = f),
        (f.blockSize = 512),
        (f.outSize = 160),
        (f.hmacStrength = 192),
        (f.padLength = 64),
        (f.prototype._update = function (e, t) {
          for (
            var r = this.h[0],
              n = this.h[1],
              i = this.h[2],
              c = this.h[3],
              f = this.h[4],
              v = r,
              y = n,
              w = i,
              _ = c,
              E = f,
              S = 0;
            S < 80;
            S++
          ) {
            var x = a(o(u(r, l(S, n, i, c), e[h[S] + t], d(S)), b[S]), f);
            (r = f),
              (f = c),
              (c = o(i, 10)),
              (i = n),
              (n = x),
              (x = a(o(u(v, l(79 - S, y, w, _), e[m[S] + t], p(S)), g[S]), E)),
              (v = E),
              (E = _),
              (_ = o(w, 10)),
              (w = y),
              (y = x);
          }
          (x = s(this.h[1], i, _)),
            (this.h[1] = s(this.h[2], c, E)),
            (this.h[2] = s(this.h[3], f, v)),
            (this.h[3] = s(this.h[4], r, y)),
            (this.h[4] = s(this.h[0], n, w)),
            (this.h[0] = x);
        }),
        (f.prototype._digest = function (e) {
          return 'hex' === e
            ? n.toHex32(this.h, 'little')
            : n.split32(this.h, 'little');
        });
      var h = [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          7,
          4,
          13,
          1,
          10,
          6,
          15,
          3,
          12,
          0,
          9,
          5,
          2,
          14,
          11,
          8,
          3,
          10,
          14,
          4,
          9,
          15,
          8,
          1,
          2,
          7,
          0,
          6,
          13,
          11,
          5,
          12,
          1,
          9,
          11,
          10,
          0,
          8,
          12,
          4,
          13,
          3,
          7,
          15,
          14,
          5,
          6,
          2,
          4,
          0,
          5,
          9,
          7,
          12,
          2,
          10,
          14,
          1,
          3,
          8,
          11,
          6,
          15,
          13,
        ],
        m = [
          5,
          14,
          7,
          0,
          9,
          2,
          11,
          4,
          13,
          6,
          15,
          8,
          1,
          10,
          3,
          12,
          6,
          11,
          3,
          7,
          0,
          13,
          5,
          10,
          14,
          15,
          8,
          12,
          4,
          9,
          1,
          2,
          15,
          5,
          1,
          3,
          7,
          14,
          6,
          9,
          11,
          8,
          12,
          2,
          10,
          0,
          4,
          13,
          8,
          6,
          4,
          1,
          3,
          11,
          15,
          0,
          5,
          12,
          2,
          13,
          9,
          7,
          10,
          14,
          12,
          15,
          10,
          4,
          1,
          5,
          8,
          7,
          6,
          2,
          13,
          14,
          0,
          3,
          9,
          11,
        ],
        b = [
          11,
          14,
          15,
          12,
          5,
          8,
          7,
          9,
          11,
          13,
          14,
          15,
          6,
          7,
          9,
          8,
          7,
          6,
          8,
          13,
          11,
          9,
          7,
          15,
          7,
          12,
          15,
          9,
          11,
          7,
          13,
          12,
          11,
          13,
          6,
          7,
          14,
          9,
          13,
          15,
          14,
          8,
          13,
          6,
          5,
          12,
          7,
          5,
          11,
          12,
          14,
          15,
          14,
          15,
          9,
          8,
          9,
          14,
          5,
          6,
          8,
          6,
          5,
          12,
          9,
          15,
          5,
          11,
          6,
          8,
          13,
          12,
          5,
          12,
          13,
          14,
          11,
          8,
          5,
          6,
        ],
        g = [
          8,
          9,
          9,
          11,
          13,
          15,
          15,
          5,
          7,
          7,
          8,
          11,
          14,
          14,
          12,
          6,
          9,
          13,
          15,
          7,
          12,
          8,
          9,
          11,
          7,
          7,
          12,
          7,
          6,
          15,
          13,
          11,
          9,
          7,
          15,
          11,
          8,
          6,
          6,
          14,
          12,
          13,
          5,
          14,
          13,
          13,
          7,
          5,
          15,
          5,
          8,
          11,
          14,
          14,
          6,
          14,
          6,
          9,
          12,
          9,
          12,
          5,
          15,
          8,
          8,
          5,
          12,
          9,
          12,
          5,
          14,
          6,
          8,
          13,
          6,
          5,
          15,
          13,
          11,
          11,
        ];
    },
    function (e, t, r) {
      'use strict';
      var n = r(12),
        i = r(22);
      function o(e, t, r) {
        if (!(this instanceof o)) return new o(e, t, r);
        (this.Hash = e),
          (this.blockSize = e.blockSize / 8),
          (this.outSize = e.outSize / 8),
          (this.inner = null),
          (this.outer = null),
          this._init(n.toArray(t, r));
      }
      (e.exports = o),
        (o.prototype._init = function (e) {
          e.length > this.blockSize && (e = new this.Hash().update(e).digest()),
            i(e.length <= this.blockSize);
          for (var t = e.length; t < this.blockSize; t++) e.push(0);
          for (t = 0; t < e.length; t++) e[t] ^= 54;
          for (this.inner = new this.Hash().update(e), t = 0; t < e.length; t++)
            e[t] ^= 106;
          this.outer = new this.Hash().update(e);
        }),
        (o.prototype.update = function (e, t) {
          return this.inner.update(e, t), this;
        }),
        (o.prototype.digest = function (e) {
          return this.outer.update(this.inner.digest()), this.outer.digest(e);
        });
    },
    function (e, t) {
      e.exports = {
        doubles: {
          step: 4,
          points: [
            [
              'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
              'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',
            ],
            [
              '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
              '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',
            ],
            [
              '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
              'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',
            ],
            [
              '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
              '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',
            ],
            [
              '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
              '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',
            ],
            [
              '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
              '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',
            ],
            [
              'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
              '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',
            ],
            [
              '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
              'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',
            ],
            [
              'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
              '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',
            ],
            [
              'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
              'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',
            ],
            [
              'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
              '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',
            ],
            [
              '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
              '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',
            ],
            [
              '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
              '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',
            ],
            [
              '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
              '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',
            ],
            [
              '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
              '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',
            ],
            [
              '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
              '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',
            ],
            [
              '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
              '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',
            ],
            [
              '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
              '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',
            ],
            [
              '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
              'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',
            ],
            [
              'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
              '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',
            ],
            [
              'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
              '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',
            ],
            [
              '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
              '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',
            ],
            [
              '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
              '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',
            ],
            [
              'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
              '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',
            ],
            [
              '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
              'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',
            ],
            [
              'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
              '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',
            ],
            [
              'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
              'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',
            ],
            [
              'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
              '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',
            ],
            [
              'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
              'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',
            ],
            [
              'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
              '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',
            ],
            [
              '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
              'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',
            ],
            [
              '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
              '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',
            ],
            [
              'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
              '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',
            ],
            [
              '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
              'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',
            ],
            [
              'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
              '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',
            ],
            [
              'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
              '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',
            ],
            [
              'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
              'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',
            ],
            [
              '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
              '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',
            ],
            [
              '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
              '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',
            ],
            [
              '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
              'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',
            ],
            [
              '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
              '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',
            ],
            [
              'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
              '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',
            ],
            [
              '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
              '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',
            ],
            [
              '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
              'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',
            ],
            [
              '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
              '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',
            ],
            [
              'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
              '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',
            ],
            [
              '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
              'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',
            ],
            [
              'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
              'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',
            ],
            [
              'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
              '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',
            ],
            [
              '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
              'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',
            ],
            [
              '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
              'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',
            ],
            [
              'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
              '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',
            ],
            [
              'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
              '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',
            ],
            [
              'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
              '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',
            ],
            [
              '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
              'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',
            ],
            [
              '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
              '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',
            ],
            [
              'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
              'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',
            ],
            [
              '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
              'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',
            ],
            [
              '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
              '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',
            ],
            [
              '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
              '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',
            ],
            [
              'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
              'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',
            ],
            [
              '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
              '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',
            ],
            [
              '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
              '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',
            ],
            [
              'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
              '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',
            ],
            [
              'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
              'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',
            ],
          ],
        },
        naf: {
          wnd: 7,
          points: [
            [
              'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
              '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',
            ],
            [
              '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
              'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',
            ],
            [
              '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
              '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',
            ],
            [
              'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
              'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',
            ],
            [
              '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
              'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',
            ],
            [
              'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
              'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',
            ],
            [
              'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
              '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',
            ],
            [
              'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
              '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',
            ],
            [
              '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
              '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',
            ],
            [
              '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
              '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',
            ],
            [
              '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
              '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',
            ],
            [
              '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
              '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',
            ],
            [
              'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
              'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',
            ],
            [
              'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
              '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',
            ],
            [
              '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
              'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',
            ],
            [
              '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
              'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',
            ],
            [
              '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
              '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',
            ],
            [
              '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
              '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',
            ],
            [
              '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
              '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',
            ],
            [
              '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
              'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',
            ],
            [
              'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
              'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',
            ],
            [
              '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
              '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',
            ],
            [
              '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
              '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',
            ],
            [
              'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
              'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',
            ],
            [
              '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
              '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',
            ],
            [
              'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
              'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',
            ],
            [
              'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
              'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',
            ],
            [
              '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
              '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',
            ],
            [
              '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
              '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',
            ],
            [
              '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
              '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',
            ],
            [
              'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
              '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',
            ],
            [
              '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
              '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',
            ],
            [
              'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
              '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',
            ],
            [
              '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
              'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',
            ],
            [
              '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
              'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',
            ],
            [
              'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
              'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',
            ],
            [
              '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
              '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',
            ],
            [
              '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
              'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',
            ],
            [
              'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
              'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',
            ],
            [
              '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
              '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',
            ],
            [
              '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
              'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',
            ],
            [
              '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
              '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',
            ],
            [
              '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
              'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',
            ],
            [
              'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
              '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',
            ],
            [
              '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
              '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',
            ],
            [
              '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
              'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',
            ],
            [
              '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
              'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',
            ],
            [
              'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
              'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',
            ],
            [
              'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
              'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',
            ],
            [
              '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
              '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',
            ],
            [
              '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
              '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',
            ],
            [
              'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
              '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',
            ],
            [
              'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
              'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',
            ],
            [
              '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
              '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',
            ],
            [
              '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
              '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',
            ],
            [
              'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
              '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',
            ],
            [
              '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
              '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',
            ],
            [
              'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
              'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',
            ],
            [
              '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
              'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',
            ],
            [
              '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
              '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',
            ],
            [
              'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
              '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',
            ],
            [
              'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
              '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',
            ],
            [
              '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
              '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',
            ],
            [
              '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
              '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',
            ],
            [
              '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
              'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',
            ],
            [
              '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
              'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',
            ],
            [
              '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
              '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',
            ],
            [
              '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
              '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',
            ],
            [
              '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
              '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',
            ],
            [
              '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
              'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',
            ],
            [
              'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
              'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',
            ],
            [
              '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
              'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',
            ],
            [
              'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
              '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',
            ],
            [
              'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
              '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',
            ],
            [
              'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
              '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',
            ],
            [
              'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
              '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',
            ],
            [
              '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
              'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',
            ],
            [
              '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
              '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',
            ],
            [
              '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
              'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',
            ],
            [
              'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
              'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',
            ],
            [
              'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
              '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',
            ],
            [
              'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
              'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',
            ],
            [
              'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
              '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',
            ],
            [
              '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
              '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',
            ],
            [
              'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
              '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',
            ],
            [
              'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
              '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',
            ],
            [
              '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
              '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',
            ],
            [
              '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
              'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',
            ],
            [
              'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
              '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',
            ],
            [
              'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
              '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',
            ],
            [
              'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
              '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',
            ],
            [
              '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
              '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',
            ],
            [
              'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
              'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',
            ],
            [
              '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
              'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',
            ],
            [
              'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
              'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',
            ],
            [
              'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
              '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',
            ],
            [
              '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
              'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',
            ],
            [
              'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
              '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',
            ],
            [
              'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
              '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',
            ],
            [
              'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
              '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',
            ],
            [
              '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
              'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',
            ],
            [
              '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
              'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',
            ],
            [
              'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
              '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',
            ],
            [
              '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
              'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',
            ],
            [
              '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
              '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',
            ],
            [
              '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
              'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',
            ],
            [
              'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
              'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',
            ],
            [
              '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
              'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',
            ],
            [
              '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
              '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',
            ],
            [
              '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
              'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',
            ],
            [
              '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
              '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',
            ],
            [
              'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
              'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',
            ],
            [
              '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
              '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',
            ],
            [
              'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
              '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',
            ],
            [
              '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
              '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',
            ],
            [
              'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
              'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',
            ],
            [
              'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
              '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',
            ],
            [
              'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
              'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',
            ],
            [
              '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
              'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',
            ],
            [
              '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
              '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',
            ],
            [
              '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
              'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',
            ],
            [
              '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
              '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',
            ],
            [
              '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
              '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',
            ],
            [
              '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
              'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',
            ],
            [
              '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
              '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',
            ],
            [
              '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
              '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',
            ],
            [
              '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
              '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',
            ],
          ],
        },
      };
    },
    function (e, t, r) {
      'use strict';
      var n = r(10),
        i = r(150),
        o = r(8),
        a = r(48),
        s = r(73),
        u = o.assert,
        c = r(151),
        f = r(152);
      function l(e) {
        if (!(this instanceof l)) return new l(e);
        'string' == typeof e &&
          (u(a.hasOwnProperty(e), 'Unknown curve ' + e), (e = a[e])),
          e instanceof a.PresetCurve && (e = { curve: e }),
          (this.curve = e.curve.curve),
          (this.n = this.curve.n),
          (this.nh = this.n.ushrn(1)),
          (this.g = this.curve.g),
          (this.g = e.curve.g),
          this.g.precompute(e.curve.n.bitLength() + 1),
          (this.hash = e.hash || e.curve.hash);
      }
      (e.exports = l),
        (l.prototype.keyPair = function (e) {
          return new c(this, e);
        }),
        (l.prototype.keyFromPrivate = function (e, t) {
          return c.fromPrivate(this, e, t);
        }),
        (l.prototype.keyFromPublic = function (e, t) {
          return c.fromPublic(this, e, t);
        }),
        (l.prototype.genKeyPair = function (e) {
          e || (e = {});
          for (
            var t = new i({
                hash: this.hash,
                pers: e.pers,
                persEnc: e.persEnc || 'utf8',
                entropy: e.entropy || s(this.hash.hmacStrength),
                entropyEnc: (e.entropy && e.entropyEnc) || 'utf8',
                nonce: this.n.toArray(),
              }),
              r = this.n.byteLength(),
              o = this.n.sub(new n(2));
            ;

          ) {
            var a = new n(t.generate(r));
            if (!(a.cmp(o) > 0)) return a.iaddn(1), this.keyFromPrivate(a);
          }
        }),
        (l.prototype._truncateToN = function (e, t) {
          var r = 8 * e.byteLength() - this.n.bitLength();
          return (
            r > 0 && (e = e.ushrn(r)),
            !t && e.cmp(this.n) >= 0 ? e.sub(this.n) : e
          );
        }),
        (l.prototype.sign = function (e, t, r, o) {
          'object' == typeof r && ((o = r), (r = null)),
            o || (o = {}),
            (t = this.keyFromPrivate(t, r)),
            (e = this._truncateToN(new n(e, 16)));
          for (
            var a = this.n.byteLength(),
              s = t.getPrivate().toArray('be', a),
              u = e.toArray('be', a),
              c = new i({
                hash: this.hash,
                entropy: s,
                nonce: u,
                pers: o.pers,
                persEnc: o.persEnc || 'utf8',
              }),
              l = this.n.sub(new n(1)),
              d = 0;
            ;
            d++
          ) {
            var p = o.k ? o.k(d) : new n(c.generate(this.n.byteLength()));
            if (
              !((p = this._truncateToN(p, !0)).cmpn(1) <= 0 || p.cmp(l) >= 0)
            ) {
              var h = this.g.mul(p);
              if (!h.isInfinity()) {
                var m = h.getX(),
                  b = m.umod(this.n);
                if (0 !== b.cmpn(0)) {
                  var g = p.invm(this.n).mul(b.mul(t.getPrivate()).iadd(e));
                  if (0 !== (g = g.umod(this.n)).cmpn(0)) {
                    var v =
                      (h.getY().isOdd() ? 1 : 0) | (0 !== m.cmp(b) ? 2 : 0);
                    return (
                      o.canonical &&
                        g.cmp(this.nh) > 0 &&
                        ((g = this.n.sub(g)), (v ^= 1)),
                      new f({ r: b, s: g, recoveryParam: v })
                    );
                  }
                }
              }
            }
          }
        }),
        (l.prototype.verify = function (e, t, r, i) {
          (e = this._truncateToN(new n(e, 16))), (r = this.keyFromPublic(r, i));
          var o = (t = new f(t, 'hex')).r,
            a = t.s;
          if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
          if (a.cmpn(1) < 0 || a.cmp(this.n) >= 0) return !1;
          var s,
            u = a.invm(this.n),
            c = u.mul(e).umod(this.n),
            l = u.mul(o).umod(this.n);
          return this.curve._maxwellTrick
            ? !(s = this.g.jmulAdd(c, r.getPublic(), l)).isInfinity() &&
                s.eqXToP(o)
            : !(s = this.g.mulAdd(c, r.getPublic(), l)).isInfinity() &&
                0 === s.getX().umod(this.n).cmp(o);
        }),
        (l.prototype.recoverPubKey = function (e, t, r, i) {
          u((3 & r) === r, 'The recovery param is more than two bits'),
            (t = new f(t, i));
          var o = this.n,
            a = new n(e),
            s = t.r,
            c = t.s,
            l = 1 & r,
            d = r >> 1;
          if (s.cmp(this.curve.p.umod(this.curve.n)) >= 0 && d)
            throw new Error('Unable to find sencond key candinate');
          s = d
            ? this.curve.pointFromX(s.add(this.curve.n), l)
            : this.curve.pointFromX(s, l);
          var p = t.r.invm(o),
            h = o.sub(a).mul(p).umod(o),
            m = c.mul(p).umod(o);
          return this.g.mulAdd(h, s, m);
        }),
        (l.prototype.getKeyRecoveryParam = function (e, t, r, n) {
          if (null !== (t = new f(t, n)).recoveryParam) return t.recoveryParam;
          for (var i = 0; i < 4; i++) {
            var o;
            try {
              o = this.recoverPubKey(e, t, i);
            } catch (e) {
              continue;
            }
            if (o.eq(r)) return i;
          }
          throw new Error('Unable to find valid recovery factor');
        });
    },
    function (e, t, r) {
      'use strict';
      var n = r(49),
        i = r(72),
        o = r(22);
      function a(e) {
        if (!(this instanceof a)) return new a(e);
        (this.hash = e.hash),
          (this.predResist = !!e.predResist),
          (this.outLen = this.hash.outSize),
          (this.minEntropy = e.minEntropy || this.hash.hmacStrength),
          (this._reseed = null),
          (this.reseedInterval = null),
          (this.K = null),
          (this.V = null);
        var t = i.toArray(e.entropy, e.entropyEnc || 'hex'),
          r = i.toArray(e.nonce, e.nonceEnc || 'hex'),
          n = i.toArray(e.pers, e.persEnc || 'hex');
        o(
          t.length >= this.minEntropy / 8,
          'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits'
        ),
          this._init(t, r, n);
      }
      (e.exports = a),
        (a.prototype._init = function (e, t, r) {
          var n = e.concat(t).concat(r);
          (this.K = new Array(this.outLen / 8)),
            (this.V = new Array(this.outLen / 8));
          for (var i = 0; i < this.V.length; i++)
            (this.K[i] = 0), (this.V[i] = 1);
          this._update(n),
            (this._reseed = 1),
            (this.reseedInterval = 281474976710656);
        }),
        (a.prototype._hmac = function () {
          return new n.hmac(this.hash, this.K);
        }),
        (a.prototype._update = function (e) {
          var t = this._hmac().update(this.V).update([0]);
          e && (t = t.update(e)),
            (this.K = t.digest()),
            (this.V = this._hmac().update(this.V).digest()),
            e &&
              ((this.K = this._hmac()
                .update(this.V)
                .update([1])
                .update(e)
                .digest()),
              (this.V = this._hmac().update(this.V).digest()));
        }),
        (a.prototype.reseed = function (e, t, r, n) {
          'string' != typeof t && ((n = r), (r = t), (t = null)),
            (e = i.toArray(e, t)),
            (r = i.toArray(r, n)),
            o(
              e.length >= this.minEntropy / 8,
              'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits'
            ),
            this._update(e.concat(r || [])),
            (this._reseed = 1);
        }),
        (a.prototype.generate = function (e, t, r, n) {
          if (this._reseed > this.reseedInterval)
            throw new Error('Reseed is required');
          'string' != typeof t && ((n = r), (r = t), (t = null)),
            r && ((r = i.toArray(r, n || 'hex')), this._update(r));
          for (var o = []; o.length < e; )
            (this.V = this._hmac().update(this.V).digest()),
              (o = o.concat(this.V));
          var a = o.slice(0, e);
          return this._update(r), this._reseed++, i.encode(a, t);
        });
    },
    function (e, t, r) {
      'use strict';
      var n = r(10),
        i = r(8).assert;
      function o(e, t) {
        (this.ec = e),
          (this.priv = null),
          (this.pub = null),
          t.priv && this._importPrivate(t.priv, t.privEnc),
          t.pub && this._importPublic(t.pub, t.pubEnc);
      }
      (e.exports = o),
        (o.fromPublic = function (e, t, r) {
          return t instanceof o ? t : new o(e, { pub: t, pubEnc: r });
        }),
        (o.fromPrivate = function (e, t, r) {
          return t instanceof o ? t : new o(e, { priv: t, privEnc: r });
        }),
        (o.prototype.validate = function () {
          var e = this.getPublic();
          return e.isInfinity()
            ? { result: !1, reason: 'Invalid public key' }
            : e.validate()
            ? e.mul(this.ec.curve.n).isInfinity()
              ? { result: !0, reason: null }
              : { result: !1, reason: 'Public key * N != O' }
            : { result: !1, reason: 'Public key is not a point' };
        }),
        (o.prototype.getPublic = function (e, t) {
          return (
            'string' == typeof e && ((t = e), (e = null)),
            this.pub || (this.pub = this.ec.g.mul(this.priv)),
            t ? this.pub.encode(t, e) : this.pub
          );
        }),
        (o.prototype.getPrivate = function (e) {
          return 'hex' === e ? this.priv.toString(16, 2) : this.priv;
        }),
        (o.prototype._importPrivate = function (e, t) {
          (this.priv = new n(e, t || 16)),
            (this.priv = this.priv.umod(this.ec.curve.n));
        }),
        (o.prototype._importPublic = function (e, t) {
          if (e.x || e.y)
            return (
              'mont' === this.ec.curve.type
                ? i(e.x, 'Need x coordinate')
                : ('short' !== this.ec.curve.type &&
                    'edwards' !== this.ec.curve.type) ||
                  i(e.x && e.y, 'Need both x and y coordinate'),
              void (this.pub = this.ec.curve.point(e.x, e.y))
            );
          this.pub = this.ec.curve.decodePoint(e, t);
        }),
        (o.prototype.derive = function (e) {
          return e.mul(this.priv).getX();
        }),
        (o.prototype.sign = function (e, t, r) {
          return this.ec.sign(e, this, t, r);
        }),
        (o.prototype.verify = function (e, t) {
          return this.ec.verify(e, t, this);
        }),
        (o.prototype.inspect = function () {
          return (
            '<Key priv: ' +
            (this.priv && this.priv.toString(16, 2)) +
            ' pub: ' +
            (this.pub && this.pub.inspect()) +
            ' >'
          );
        });
    },
    function (e, t, r) {
      'use strict';
      var n = r(10),
        i = r(8),
        o = i.assert;
      function a(e, t) {
        if (e instanceof a) return e;
        this._importDER(e, t) ||
          (o(e.r && e.s, 'Signature without r or s'),
          (this.r = new n(e.r, 16)),
          (this.s = new n(e.s, 16)),
          void 0 === e.recoveryParam
            ? (this.recoveryParam = null)
            : (this.recoveryParam = e.recoveryParam));
      }
      function s() {
        this.place = 0;
      }
      function u(e, t) {
        var r = e[t.place++];
        if (!(128 & r)) return r;
        for (var n = 15 & r, i = 0, o = 0, a = t.place; o < n; o++, a++)
          (i <<= 8), (i |= e[a]);
        return (t.place = a), i;
      }
      function c(e) {
        for (var t = 0, r = e.length - 1; !e[t] && !(128 & e[t + 1]) && t < r; )
          t++;
        return 0 === t ? e : e.slice(t);
      }
      function f(e, t) {
        if (t < 128) e.push(t);
        else {
          var r = 1 + ((Math.log(t) / Math.LN2) >>> 3);
          for (e.push(128 | r); --r; ) e.push((t >>> (r << 3)) & 255);
          e.push(t);
        }
      }
      (e.exports = a),
        (a.prototype._importDER = function (e, t) {
          e = i.toArray(e, t);
          var r = new s();
          if (48 !== e[r.place++]) return !1;
          if (u(e, r) + r.place !== e.length) return !1;
          if (2 !== e[r.place++]) return !1;
          var o = u(e, r),
            a = e.slice(r.place, o + r.place);
          if (((r.place += o), 2 !== e[r.place++])) return !1;
          var c = u(e, r);
          if (e.length !== c + r.place) return !1;
          var f = e.slice(r.place, c + r.place);
          return (
            0 === a[0] && 128 & a[1] && (a = a.slice(1)),
            0 === f[0] && 128 & f[1] && (f = f.slice(1)),
            (this.r = new n(a)),
            (this.s = new n(f)),
            (this.recoveryParam = null),
            !0
          );
        }),
        (a.prototype.toDER = function (e) {
          var t = this.r.toArray(),
            r = this.s.toArray();
          for (
            128 & t[0] && (t = [0].concat(t)),
              128 & r[0] && (r = [0].concat(r)),
              t = c(t),
              r = c(r);
            !(r[0] || 128 & r[1]);

          )
            r = r.slice(1);
          var n = [2];
          f(n, t.length), (n = n.concat(t)).push(2), f(n, r.length);
          var o = n.concat(r),
            a = [48];
          return f(a, o.length), (a = a.concat(o)), i.encode(a, e);
        });
    },
    function (e, t, r) {
      'use strict';
      var n = r(49),
        i = r(48),
        o = r(8),
        a = o.assert,
        s = o.parseBytes,
        u = r(154),
        c = r(155);
      function f(e) {
        if (
          (a('ed25519' === e, 'only tested with ed25519 so far'),
          !(this instanceof f))
        )
          return new f(e);
        e = i[e].curve;
        (this.curve = e),
          (this.g = e.g),
          this.g.precompute(e.n.bitLength() + 1),
          (this.pointClass = e.point().constructor),
          (this.encodingLength = Math.ceil(e.n.bitLength() / 8)),
          (this.hash = n.sha512);
      }
      (e.exports = f),
        (f.prototype.sign = function (e, t) {
          e = s(e);
          var r = this.keyFromSecret(t),
            n = this.hashInt(r.messagePrefix(), e),
            i = this.g.mul(n),
            o = this.encodePoint(i),
            a = this.hashInt(o, r.pubBytes(), e).mul(r.priv()),
            u = n.add(a).umod(this.curve.n);
          return this.makeSignature({ R: i, S: u, Rencoded: o });
        }),
        (f.prototype.verify = function (e, t, r) {
          (e = s(e)), (t = this.makeSignature(t));
          var n = this.keyFromPublic(r),
            i = this.hashInt(t.Rencoded(), n.pubBytes(), e),
            o = this.g.mul(t.S());
          return t.R().add(n.pub().mul(i)).eq(o);
        }),
        (f.prototype.hashInt = function () {
          for (var e = this.hash(), t = 0; t < arguments.length; t++)
            e.update(arguments[t]);
          return o.intFromLE(e.digest()).umod(this.curve.n);
        }),
        (f.prototype.keyFromPublic = function (e) {
          return u.fromPublic(this, e);
        }),
        (f.prototype.keyFromSecret = function (e) {
          return u.fromSecret(this, e);
        }),
        (f.prototype.makeSignature = function (e) {
          return e instanceof c ? e : new c(this, e);
        }),
        (f.prototype.encodePoint = function (e) {
          var t = e.getY().toArray('le', this.encodingLength);
          return (t[this.encodingLength - 1] |= e.getX().isOdd() ? 128 : 0), t;
        }),
        (f.prototype.decodePoint = function (e) {
          var t = (e = o.parseBytes(e)).length - 1,
            r = e.slice(0, t).concat(-129 & e[t]),
            n = 0 != (128 & e[t]),
            i = o.intFromLE(r);
          return this.curve.pointFromY(i, n);
        }),
        (f.prototype.encodeInt = function (e) {
          return e.toArray('le', this.encodingLength);
        }),
        (f.prototype.decodeInt = function (e) {
          return o.intFromLE(e);
        }),
        (f.prototype.isPoint = function (e) {
          return e instanceof this.pointClass;
        });
    },
    function (e, t, r) {
      'use strict';
      var n = r(8),
        i = n.assert,
        o = n.parseBytes,
        a = n.cachedProperty;
      function s(e, t) {
        (this.eddsa = e),
          (this._secret = o(t.secret)),
          e.isPoint(t.pub) ? (this._pub = t.pub) : (this._pubBytes = o(t.pub));
      }
      (s.fromPublic = function (e, t) {
        return t instanceof s ? t : new s(e, { pub: t });
      }),
        (s.fromSecret = function (e, t) {
          return t instanceof s ? t : new s(e, { secret: t });
        }),
        (s.prototype.secret = function () {
          return this._secret;
        }),
        a(s, 'pubBytes', function () {
          return this.eddsa.encodePoint(this.pub());
        }),
        a(s, 'pub', function () {
          return this._pubBytes
            ? this.eddsa.decodePoint(this._pubBytes)
            : this.eddsa.g.mul(this.priv());
        }),
        a(s, 'privBytes', function () {
          var e = this.eddsa,
            t = this.hash(),
            r = e.encodingLength - 1,
            n = t.slice(0, e.encodingLength);
          return (n[0] &= 248), (n[r] &= 127), (n[r] |= 64), n;
        }),
        a(s, 'priv', function () {
          return this.eddsa.decodeInt(this.privBytes());
        }),
        a(s, 'hash', function () {
          return this.eddsa.hash().update(this.secret()).digest();
        }),
        a(s, 'messagePrefix', function () {
          return this.hash().slice(this.eddsa.encodingLength);
        }),
        (s.prototype.sign = function (e) {
          return (
            i(this._secret, 'KeyPair can only verify'), this.eddsa.sign(e, this)
          );
        }),
        (s.prototype.verify = function (e, t) {
          return this.eddsa.verify(e, t, this);
        }),
        (s.prototype.getSecret = function (e) {
          return (
            i(this._secret, 'KeyPair is public only'),
            n.encode(this.secret(), e)
          );
        }),
        (s.prototype.getPublic = function (e) {
          return n.encode(this.pubBytes(), e);
        }),
        (e.exports = s);
    },
    function (e, t, r) {
      'use strict';
      var n = r(10),
        i = r(8),
        o = i.assert,
        a = i.cachedProperty,
        s = i.parseBytes;
      function u(e, t) {
        (this.eddsa = e),
          'object' != typeof t && (t = s(t)),
          Array.isArray(t) &&
            (t = {
              R: t.slice(0, e.encodingLength),
              S: t.slice(e.encodingLength),
            }),
          o(t.R && t.S, 'Signature without R or S'),
          e.isPoint(t.R) && (this._R = t.R),
          t.S instanceof n && (this._S = t.S),
          (this._Rencoded = Array.isArray(t.R) ? t.R : t.Rencoded),
          (this._Sencoded = Array.isArray(t.S) ? t.S : t.Sencoded);
      }
      a(u, 'S', function () {
        return this.eddsa.decodeInt(this.Sencoded());
      }),
        a(u, 'R', function () {
          return this.eddsa.decodePoint(this.Rencoded());
        }),
        a(u, 'Rencoded', function () {
          return this.eddsa.encodePoint(this.R());
        }),
        a(u, 'Sencoded', function () {
          return this.eddsa.encodeInt(this.S());
        }),
        (u.prototype.toBytes = function () {
          return this.Rencoded().concat(this.Sencoded());
        }),
        (u.prototype.toHex = function () {
          return i.encode(this.toBytes(), 'hex').toUpperCase();
        }),
        (e.exports = u);
    },
    function (e, t, r) {
      const n = r(46),
        i = Buffer.alloc(1, 1),
        o = Buffer.alloc(1, 0);
      e.exports = function (e, t, r, a, s) {
        let u = Buffer.alloc(32, 0),
          c = Buffer.alloc(32, 1);
        (u = n('sha256', u)
          .update(c)
          .update(o)
          .update(t)
          .update(e)
          .update(s || '')
          .digest()),
          (c = n('sha256', u).update(c).digest()),
          (u = n('sha256', u)
            .update(c)
            .update(i)
            .update(t)
            .update(e)
            .update(s || '')
            .digest()),
          (c = n('sha256', u).update(c).digest()),
          (c = n('sha256', u).update(c).digest());
        let f = c;
        for (; !a(f) || !r(f); )
          (u = n('sha256', u).update(c).update(o).digest()),
            (c = n('sha256', u).update(c).digest()),
            (c = n('sha256', u).update(c).digest()),
            (f = c);
        return f;
      };
    },
    function (e, t, r) {
      var n = r(50),
        i = r(78);
      function o(e) {
        return Buffer.isBuffer(e);
      }
      function a(e) {
        return 'string' == typeof e && /^([0-9a-f]{2})+$/i.test(e);
      }
      function s(e, t) {
        var r = e.toJSON();
        function n(n) {
          if (!e(n)) return !1;
          if (n.length === t) return !0;
          throw i.tfCustomError(
            r + '(Length: ' + t + ')',
            r + '(Length: ' + n.length + ')'
          );
        }
        return (
          (n.toJSON = function () {
            return r;
          }),
          n
        );
      }
      var u = s.bind(null, n.Array),
        c = s.bind(null, o),
        f = s.bind(null, a),
        l = s.bind(null, n.String);
      var d = Math.pow(2, 53) - 1;
      var p = {
        ArrayN: u,
        Buffer: o,
        BufferN: c,
        Finite: function (e) {
          return 'number' == typeof e && isFinite(e);
        },
        Hex: a,
        HexN: f,
        Int8: function (e) {
          return (e << 24) >> 24 === e;
        },
        Int16: function (e) {
          return (e << 16) >> 16 === e;
        },
        Int32: function (e) {
          return (0 | e) === e;
        },
        Int53: function (e) {
          return (
            'number' == typeof e && e >= -d && e <= d && Math.floor(e) === e
          );
        },
        Range: function (e, t, r) {
          function i(n, i) {
            return r(n, i) && n > e && n < t;
          }
          return (
            (r = r || n.Number),
            (i.toJSON = function () {
              return `${r.toJSON()} between [${e}, ${t}]`;
            }),
            i
          );
        },
        StringN: l,
        UInt8: function (e) {
          return (255 & e) === e;
        },
        UInt16: function (e) {
          return (65535 & e) === e;
        },
        UInt32: function (e) {
          return e >>> 0 === e;
        },
        UInt53: function (e) {
          return (
            'number' == typeof e && e >= 0 && e <= d && Math.floor(e) === e
          );
        },
      };
      for (var h in p)
        p[h].toJSON = function (e) {
          return e;
        }.bind(null, h);
      e.exports = p;
    },
    function (e, t, r) {
      'use strict';
      try {
        e.exports = r(159);
      } catch (t) {
        process.env.DEBUG &&
          console.error(
            'Secp256k1 bindings are not compiled. Pure JS implementation will be used.'
          ),
          (e.exports = r(160));
      }
    },
    function (e, t, r) {
      'use strict';
      e.exports = r(70)('secp256k1');
    },
    function (e, t, r) {
      'use strict';
      e.exports = r(161)(r(164));
    },
    function (e, t, r) {
      'use strict';
      var n = r(162),
        i = r(163),
        o = r(80);
      function a(e, t) {
        return void 0 === e
          ? t
          : (n.isBoolean(e, o.COMPRESSED_TYPE_INVALID), e);
      }
      e.exports = function (e) {
        return {
          privateKeyVerify: function (t) {
            return (
              n.isBuffer(t, o.EC_PRIVATE_KEY_TYPE_INVALID),
              32 === t.length && e.privateKeyVerify(t)
            );
          },
          privateKeyExport: function (t, r) {
            n.isBuffer(t, o.EC_PRIVATE_KEY_TYPE_INVALID),
              n.isBufferLength(t, 32, o.EC_PRIVATE_KEY_LENGTH_INVALID),
              (r = a(r, !0));
            var s = e.privateKeyExport(t, r);
            return i.privateKeyExport(t, s, r);
          },
          privateKeyImport: function (t) {
            if (
              (n.isBuffer(t, o.EC_PRIVATE_KEY_TYPE_INVALID),
              (t = i.privateKeyImport(t)) &&
                32 === t.length &&
                e.privateKeyVerify(t))
            )
              return t;
            throw new Error(o.EC_PRIVATE_KEY_IMPORT_DER_FAIL);
          },
          privateKeyNegate: function (t) {
            return (
              n.isBuffer(t, o.EC_PRIVATE_KEY_TYPE_INVALID),
              n.isBufferLength(t, 32, o.EC_PRIVATE_KEY_LENGTH_INVALID),
              e.privateKeyNegate(t)
            );
          },
          privateKeyModInverse: function (t) {
            return (
              n.isBuffer(t, o.EC_PRIVATE_KEY_TYPE_INVALID),
              n.isBufferLength(t, 32, o.EC_PRIVATE_KEY_LENGTH_INVALID),
              e.privateKeyModInverse(t)
            );
          },
          privateKeyTweakAdd: function (t, r) {
            return (
              n.isBuffer(t, o.EC_PRIVATE_KEY_TYPE_INVALID),
              n.isBufferLength(t, 32, o.EC_PRIVATE_KEY_LENGTH_INVALID),
              n.isBuffer(r, o.TWEAK_TYPE_INVALID),
              n.isBufferLength(r, 32, o.TWEAK_LENGTH_INVALID),
              e.privateKeyTweakAdd(t, r)
            );
          },
          privateKeyTweakMul: function (t, r) {
            return (
              n.isBuffer(t, o.EC_PRIVATE_KEY_TYPE_INVALID),
              n.isBufferLength(t, 32, o.EC_PRIVATE_KEY_LENGTH_INVALID),
              n.isBuffer(r, o.TWEAK_TYPE_INVALID),
              n.isBufferLength(r, 32, o.TWEAK_LENGTH_INVALID),
              e.privateKeyTweakMul(t, r)
            );
          },
          publicKeyCreate: function (t, r) {
            return (
              n.isBuffer(t, o.EC_PRIVATE_KEY_TYPE_INVALID),
              n.isBufferLength(t, 32, o.EC_PRIVATE_KEY_LENGTH_INVALID),
              (r = a(r, !0)),
              e.publicKeyCreate(t, r)
            );
          },
          publicKeyConvert: function (t, r) {
            return (
              n.isBuffer(t, o.EC_PUBLIC_KEY_TYPE_INVALID),
              n.isBufferLength2(t, 33, 65, o.EC_PUBLIC_KEY_LENGTH_INVALID),
              (r = a(r, !0)),
              e.publicKeyConvert(t, r)
            );
          },
          publicKeyVerify: function (t) {
            return (
              n.isBuffer(t, o.EC_PUBLIC_KEY_TYPE_INVALID), e.publicKeyVerify(t)
            );
          },
          publicKeyTweakAdd: function (t, r, i) {
            return (
              n.isBuffer(t, o.EC_PUBLIC_KEY_TYPE_INVALID),
              n.isBufferLength2(t, 33, 65, o.EC_PUBLIC_KEY_LENGTH_INVALID),
              n.isBuffer(r, o.TWEAK_TYPE_INVALID),
              n.isBufferLength(r, 32, o.TWEAK_LENGTH_INVALID),
              (i = a(i, !0)),
              e.publicKeyTweakAdd(t, r, i)
            );
          },
          publicKeyTweakMul: function (t, r, i) {
            return (
              n.isBuffer(t, o.EC_PUBLIC_KEY_TYPE_INVALID),
              n.isBufferLength2(t, 33, 65, o.EC_PUBLIC_KEY_LENGTH_INVALID),
              n.isBuffer(r, o.TWEAK_TYPE_INVALID),
              n.isBufferLength(r, 32, o.TWEAK_LENGTH_INVALID),
              (i = a(i, !0)),
              e.publicKeyTweakMul(t, r, i)
            );
          },
          publicKeyCombine: function (t, r) {
            n.isArray(t, o.EC_PUBLIC_KEYS_TYPE_INVALID),
              n.isLengthGTZero(t, o.EC_PUBLIC_KEYS_LENGTH_INVALID);
            for (var i = 0; i < t.length; ++i)
              n.isBuffer(t[i], o.EC_PUBLIC_KEY_TYPE_INVALID),
                n.isBufferLength2(t[i], 33, 65, o.EC_PUBLIC_KEY_LENGTH_INVALID);
            return (r = a(r, !0)), e.publicKeyCombine(t, r);
          },
          signatureNormalize: function (t) {
            return (
              n.isBuffer(t, o.ECDSA_SIGNATURE_TYPE_INVALID),
              n.isBufferLength(t, 64, o.ECDSA_SIGNATURE_LENGTH_INVALID),
              e.signatureNormalize(t)
            );
          },
          signatureExport: function (t) {
            n.isBuffer(t, o.ECDSA_SIGNATURE_TYPE_INVALID),
              n.isBufferLength(t, 64, o.ECDSA_SIGNATURE_LENGTH_INVALID);
            var r = e.signatureExport(t);
            return i.signatureExport(r);
          },
          signatureImport: function (t) {
            n.isBuffer(t, o.ECDSA_SIGNATURE_TYPE_INVALID),
              n.isLengthGTZero(t, o.ECDSA_SIGNATURE_LENGTH_INVALID);
            var r = i.signatureImport(t);
            if (r) return e.signatureImport(r);
            throw new Error(o.ECDSA_SIGNATURE_PARSE_DER_FAIL);
          },
          signatureImportLax: function (t) {
            n.isBuffer(t, o.ECDSA_SIGNATURE_TYPE_INVALID),
              n.isLengthGTZero(t, o.ECDSA_SIGNATURE_LENGTH_INVALID);
            var r = i.signatureImportLax(t);
            if (r) return e.signatureImport(r);
            throw new Error(o.ECDSA_SIGNATURE_PARSE_DER_FAIL);
          },
          sign: function (t, r, i) {
            n.isBuffer(t, o.MSG32_TYPE_INVALID),
              n.isBufferLength(t, 32, o.MSG32_LENGTH_INVALID),
              n.isBuffer(r, o.EC_PRIVATE_KEY_TYPE_INVALID),
              n.isBufferLength(r, 32, o.EC_PRIVATE_KEY_LENGTH_INVALID);
            var a = null,
              s = null;
            return (
              void 0 !== i &&
                (n.isObject(i, o.OPTIONS_TYPE_INVALID),
                void 0 !== i.data &&
                  (n.isBuffer(i.data, o.OPTIONS_DATA_TYPE_INVALID),
                  n.isBufferLength(i.data, 32, o.OPTIONS_DATA_LENGTH_INVALID),
                  (a = i.data)),
                void 0 !== i.noncefn &&
                  (n.isFunction(i.noncefn, o.OPTIONS_NONCEFN_TYPE_INVALID),
                  (s = i.noncefn))),
              e.sign(t, r, s, a)
            );
          },
          verify: function (t, r, i) {
            return (
              n.isBuffer(t, o.MSG32_TYPE_INVALID),
              n.isBufferLength(t, 32, o.MSG32_LENGTH_INVALID),
              n.isBuffer(r, o.ECDSA_SIGNATURE_TYPE_INVALID),
              n.isBufferLength(r, 64, o.ECDSA_SIGNATURE_LENGTH_INVALID),
              n.isBuffer(i, o.EC_PUBLIC_KEY_TYPE_INVALID),
              n.isBufferLength2(i, 33, 65, o.EC_PUBLIC_KEY_LENGTH_INVALID),
              e.verify(t, r, i)
            );
          },
          recover: function (t, r, i, s) {
            return (
              n.isBuffer(t, o.MSG32_TYPE_INVALID),
              n.isBufferLength(t, 32, o.MSG32_LENGTH_INVALID),
              n.isBuffer(r, o.ECDSA_SIGNATURE_TYPE_INVALID),
              n.isBufferLength(r, 64, o.ECDSA_SIGNATURE_LENGTH_INVALID),
              n.isNumber(i, o.RECOVERY_ID_TYPE_INVALID),
              n.isNumberInInterval(i, -1, 4, o.RECOVERY_ID_VALUE_INVALID),
              (s = a(s, !0)),
              e.recover(t, r, i, s)
            );
          },
          ecdh: function (t, r) {
            return (
              n.isBuffer(t, o.EC_PUBLIC_KEY_TYPE_INVALID),
              n.isBufferLength2(t, 33, 65, o.EC_PUBLIC_KEY_LENGTH_INVALID),
              n.isBuffer(r, o.EC_PRIVATE_KEY_TYPE_INVALID),
              n.isBufferLength(r, 32, o.EC_PRIVATE_KEY_LENGTH_INVALID),
              e.ecdh(t, r)
            );
          },
          ecdhUnsafe: function (t, r, i) {
            return (
              n.isBuffer(t, o.EC_PUBLIC_KEY_TYPE_INVALID),
              n.isBufferLength2(t, 33, 65, o.EC_PUBLIC_KEY_LENGTH_INVALID),
              n.isBuffer(r, o.EC_PRIVATE_KEY_TYPE_INVALID),
              n.isBufferLength(r, 32, o.EC_PRIVATE_KEY_LENGTH_INVALID),
              (i = a(i, !0)),
              e.ecdhUnsafe(t, r, i)
            );
          },
        };
      };
    },
    function (e, t, r) {
      'use strict';
      var n = Object.prototype.toString;
      (t.isArray = function (e, t) {
        if (!Array.isArray(e)) throw TypeError(t);
      }),
        (t.isBoolean = function (e, t) {
          if ('[object Boolean]' !== n.call(e)) throw TypeError(t);
        }),
        (t.isBuffer = function (e, t) {
          if (!Buffer.isBuffer(e)) throw TypeError(t);
        }),
        (t.isFunction = function (e, t) {
          if ('[object Function]' !== n.call(e)) throw TypeError(t);
        }),
        (t.isNumber = function (e, t) {
          if ('[object Number]' !== n.call(e)) throw TypeError(t);
        }),
        (t.isObject = function (e, t) {
          if ('[object Object]' !== n.call(e)) throw TypeError(t);
        }),
        (t.isBufferLength = function (e, t, r) {
          if (e.length !== t) throw RangeError(r);
        }),
        (t.isBufferLength2 = function (e, t, r, n) {
          if (e.length !== t && e.length !== r) throw RangeError(n);
        }),
        (t.isLengthGTZero = function (e, t) {
          if (0 === e.length) throw RangeError(t);
        }),
        (t.isNumberInInterval = function (e, t, r, n) {
          if (e <= t || e >= r) throw RangeError(n);
        });
    },
    function (e, t, r) {
      'use strict';
      var n = r(2).Buffer,
        i = r(51),
        o = n.from([
          48,
          129,
          211,
          2,
          1,
          1,
          4,
          32,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          160,
          129,
          133,
          48,
          129,
          130,
          2,
          1,
          1,
          48,
          44,
          6,
          7,
          42,
          134,
          72,
          206,
          61,
          1,
          1,
          2,
          33,
          0,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          254,
          255,
          255,
          252,
          47,
          48,
          6,
          4,
          1,
          0,
          4,
          1,
          7,
          4,
          33,
          2,
          121,
          190,
          102,
          126,
          249,
          220,
          187,
          172,
          85,
          160,
          98,
          149,
          206,
          135,
          11,
          7,
          2,
          155,
          252,
          219,
          45,
          206,
          40,
          217,
          89,
          242,
          129,
          91,
          22,
          248,
          23,
          152,
          2,
          33,
          0,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          254,
          186,
          174,
          220,
          230,
          175,
          72,
          160,
          59,
          191,
          210,
          94,
          140,
          208,
          54,
          65,
          65,
          2,
          1,
          1,
          161,
          36,
          3,
          34,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
        ]),
        a = n.from([
          48,
          130,
          1,
          19,
          2,
          1,
          1,
          4,
          32,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          160,
          129,
          165,
          48,
          129,
          162,
          2,
          1,
          1,
          48,
          44,
          6,
          7,
          42,
          134,
          72,
          206,
          61,
          1,
          1,
          2,
          33,
          0,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          254,
          255,
          255,
          252,
          47,
          48,
          6,
          4,
          1,
          0,
          4,
          1,
          7,
          4,
          65,
          4,
          121,
          190,
          102,
          126,
          249,
          220,
          187,
          172,
          85,
          160,
          98,
          149,
          206,
          135,
          11,
          7,
          2,
          155,
          252,
          219,
          45,
          206,
          40,
          217,
          89,
          242,
          129,
          91,
          22,
          248,
          23,
          152,
          72,
          58,
          218,
          119,
          38,
          163,
          196,
          101,
          93,
          164,
          251,
          252,
          14,
          17,
          8,
          168,
          253,
          23,
          180,
          72,
          166,
          133,
          84,
          25,
          156,
          71,
          208,
          143,
          251,
          16,
          212,
          184,
          2,
          33,
          0,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          255,
          254,
          186,
          174,
          220,
          230,
          175,
          72,
          160,
          59,
          191,
          210,
          94,
          140,
          208,
          54,
          65,
          65,
          2,
          1,
          1,
          161,
          68,
          3,
          66,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
        ]);
      (t.privateKeyExport = function (e, t, r) {
        var i = n.from(r ? o : a);
        return e.copy(i, r ? 8 : 9), t.copy(i, r ? 181 : 214), i;
      }),
        (t.privateKeyImport = function (e) {
          var t = e.length,
            r = 0;
          if (
            !(t < r + 1 || 48 !== e[r]) &&
            !(t < (r += 1) + 1) &&
            128 & e[r]
          ) {
            var n = 127 & e[r];
            if (((r += 1), !(n < 1 || n > 2 || t < r + n))) {
              var i = e[r + n - 1] | (n > 1 ? e[r + n - 2] << 8 : 0);
              if (
                !(
                  t < (r += n) + i ||
                  t < r + 3 ||
                  2 !== e[r] ||
                  1 !== e[r + 1] ||
                  1 !== e[r + 2] ||
                  t < (r += 3) + 2 ||
                  4 !== e[r] ||
                  e[r + 1] > 32 ||
                  t < r + 2 + e[r + 1]
                )
              )
                return e.slice(r + 2, r + 2 + e[r + 1]);
            }
          }
        }),
        (t.signatureExport = function (e) {
          for (
            var t = n.concat([n.from([0]), e.r]), r = 33, o = 0;
            r > 1 && 0 === t[o] && !(128 & t[o + 1]);
            --r, ++o
          );
          for (
            var a = n.concat([n.from([0]), e.s]), s = 33, u = 0;
            s > 1 && 0 === a[u] && !(128 & a[u + 1]);
            --s, ++u
          );
          return i.encode(t.slice(o), a.slice(u));
        }),
        (t.signatureImport = function (e) {
          var t = n.alloc(32, 0),
            r = n.alloc(32, 0);
          try {
            var o = i.decode(e);
            if (
              (33 === o.r.length && 0 === o.r[0] && (o.r = o.r.slice(1)),
              o.r.length > 32)
            )
              throw new Error('R length is too long');
            if (
              (33 === o.s.length && 0 === o.s[0] && (o.s = o.s.slice(1)),
              o.s.length > 32)
            )
              throw new Error('S length is too long');
          } catch (e) {
            return;
          }
          return (
            o.r.copy(t, 32 - o.r.length),
            o.s.copy(r, 32 - o.s.length),
            { r: t, s: r }
          );
        }),
        (t.signatureImportLax = function (e) {
          var t = n.alloc(32, 0),
            r = n.alloc(32, 0),
            i = e.length,
            o = 0;
          if (48 === e[o++]) {
            var a = e[o++];
            if (!(128 & a && (o += a - 128) > i) && 2 === e[o++]) {
              var s = e[o++];
              if (128 & s) {
                if (o + (a = s - 128) > i) return;
                for (; a > 0 && 0 === e[o]; o += 1, a -= 1);
                for (s = 0; a > 0; o += 1, a -= 1) s = (s << 8) + e[o];
              }
              if (!(s > i - o)) {
                var u = o;
                if (((o += s), 2 === e[o++])) {
                  var c = e[o++];
                  if (128 & c) {
                    if (o + (a = c - 128) > i) return;
                    for (; a > 0 && 0 === e[o]; o += 1, a -= 1);
                    for (c = 0; a > 0; o += 1, a -= 1) c = (c << 8) + e[o];
                  }
                  if (!(c > i - o)) {
                    var f = o;
                    for (o += c; s > 0 && 0 === e[u]; s -= 1, u += 1);
                    if (!(s > 32)) {
                      var l = e.slice(u, u + s);
                      for (
                        l.copy(t, 32 - l.length);
                        c > 0 && 0 === e[f];
                        c -= 1, f += 1
                      );
                      if (!(c > 32)) {
                        var d = e.slice(f, f + c);
                        return d.copy(r, 32 - d.length), { r: t, s: r };
                      }
                    }
                  }
                }
              }
            }
          }
        });
    },
    function (e, t, r) {
      'use strict';
      var n = r(2).Buffer,
        i = r(26),
        o = r(10),
        a = r(71).ec,
        s = r(80),
        u = new a('secp256k1'),
        c = u.curve;
      function f(e) {
        var t = e[0];
        switch (t) {
          case 2:
          case 3:
            return 33 !== e.length
              ? null
              : (function (e, t) {
                  var r = new o(t);
                  if (r.cmp(c.p) >= 0) return null;
                  var n = (r = r.toRed(c.red))
                    .redSqr()
                    .redIMul(r)
                    .redIAdd(c.b)
                    .redSqrt();
                  return (
                    (3 === e) !== n.isOdd() && (n = n.redNeg()),
                    u.keyPair({ pub: { x: r, y: n } })
                  );
                })(t, e.slice(1, 33));
          case 4:
          case 6:
          case 7:
            return 65 !== e.length
              ? null
              : (function (e, t, r) {
                  var n = new o(t),
                    i = new o(r);
                  if (n.cmp(c.p) >= 0 || i.cmp(c.p) >= 0) return null;
                  if (
                    ((n = n.toRed(c.red)),
                    (i = i.toRed(c.red)),
                    (6 === e || 7 === e) && i.isOdd() !== (7 === e))
                  )
                    return null;
                  var a = n.redSqr().redIMul(n);
                  return i.redSqr().redISub(a.redIAdd(c.b)).isZero()
                    ? u.keyPair({ pub: { x: n, y: i } })
                    : null;
                })(t, e.slice(1, 33), e.slice(33, 65));
          default:
            return null;
        }
      }
      (t.privateKeyVerify = function (e) {
        var t = new o(e);
        return t.cmp(c.n) < 0 && !t.isZero();
      }),
        (t.privateKeyExport = function (e, t) {
          var r = new o(e);
          if (r.cmp(c.n) >= 0 || r.isZero())
            throw new Error(s.EC_PRIVATE_KEY_EXPORT_DER_FAIL);
          return n.from(u.keyFromPrivate(e).getPublic(t, !0));
        }),
        (t.privateKeyNegate = function (e) {
          var t = new o(e);
          return t.isZero()
            ? n.alloc(32)
            : c.n.sub(t).umod(c.n).toArrayLike(n, 'be', 32);
        }),
        (t.privateKeyModInverse = function (e) {
          var t = new o(e);
          if (t.cmp(c.n) >= 0 || t.isZero())
            throw new Error(s.EC_PRIVATE_KEY_RANGE_INVALID);
          return t.invm(c.n).toArrayLike(n, 'be', 32);
        }),
        (t.privateKeyTweakAdd = function (e, t) {
          var r = new o(t);
          if (r.cmp(c.n) >= 0) throw new Error(s.EC_PRIVATE_KEY_TWEAK_ADD_FAIL);
          if ((r.iadd(new o(e)), r.cmp(c.n) >= 0 && r.isub(c.n), r.isZero()))
            throw new Error(s.EC_PRIVATE_KEY_TWEAK_ADD_FAIL);
          return r.toArrayLike(n, 'be', 32);
        }),
        (t.privateKeyTweakMul = function (e, t) {
          var r = new o(t);
          if (r.cmp(c.n) >= 0 || r.isZero())
            throw new Error(s.EC_PRIVATE_KEY_TWEAK_MUL_FAIL);
          return (
            r.imul(new o(e)),
            r.cmp(c.n) && (r = r.umod(c.n)),
            r.toArrayLike(n, 'be', 32)
          );
        }),
        (t.publicKeyCreate = function (e, t) {
          var r = new o(e);
          if (r.cmp(c.n) >= 0 || r.isZero())
            throw new Error(s.EC_PUBLIC_KEY_CREATE_FAIL);
          return n.from(u.keyFromPrivate(e).getPublic(t, !0));
        }),
        (t.publicKeyConvert = function (e, t) {
          var r = f(e);
          if (null === r) throw new Error(s.EC_PUBLIC_KEY_PARSE_FAIL);
          return n.from(r.getPublic(t, !0));
        }),
        (t.publicKeyVerify = function (e) {
          return null !== f(e);
        }),
        (t.publicKeyTweakAdd = function (e, t, r) {
          var i = f(e);
          if (null === i) throw new Error(s.EC_PUBLIC_KEY_PARSE_FAIL);
          if ((t = new o(t)).cmp(c.n) >= 0)
            throw new Error(s.EC_PUBLIC_KEY_TWEAK_ADD_FAIL);
          var a = c.g.mul(t).add(i.pub);
          if (a.isInfinity()) throw new Error(s.EC_PUBLIC_KEY_TWEAK_ADD_FAIL);
          return n.from(a.encode(!0, r));
        }),
        (t.publicKeyTweakMul = function (e, t, r) {
          var i = f(e);
          if (null === i) throw new Error(s.EC_PUBLIC_KEY_PARSE_FAIL);
          if ((t = new o(t)).cmp(c.n) >= 0 || t.isZero())
            throw new Error(s.EC_PUBLIC_KEY_TWEAK_MUL_FAIL);
          return n.from(i.pub.mul(t).encode(!0, r));
        }),
        (t.publicKeyCombine = function (e, t) {
          for (var r = new Array(e.length), i = 0; i < e.length; ++i)
            if (((r[i] = f(e[i])), null === r[i]))
              throw new Error(s.EC_PUBLIC_KEY_PARSE_FAIL);
          for (var o = r[0].pub, a = 1; a < r.length; ++a) o = o.add(r[a].pub);
          if (o.isInfinity()) throw new Error(s.EC_PUBLIC_KEY_COMBINE_FAIL);
          return n.from(o.encode(!0, t));
        }),
        (t.signatureNormalize = function (e) {
          var t = new o(e.slice(0, 32)),
            r = new o(e.slice(32, 64));
          if (t.cmp(c.n) >= 0 || r.cmp(c.n) >= 0)
            throw new Error(s.ECDSA_SIGNATURE_PARSE_FAIL);
          var i = n.from(e);
          return (
            1 === r.cmp(u.nh) &&
              c.n.sub(r).toArrayLike(n, 'be', 32).copy(i, 32),
            i
          );
        }),
        (t.signatureExport = function (e) {
          var t = e.slice(0, 32),
            r = e.slice(32, 64);
          if (new o(t).cmp(c.n) >= 0 || new o(r).cmp(c.n) >= 0)
            throw new Error(s.ECDSA_SIGNATURE_PARSE_FAIL);
          return { r: t, s: r };
        }),
        (t.signatureImport = function (e) {
          var t = new o(e.r);
          t.cmp(c.n) >= 0 && (t = new o(0));
          var r = new o(e.s);
          return (
            r.cmp(c.n) >= 0 && (r = new o(0)),
            n.concat([t.toArrayLike(n, 'be', 32), r.toArrayLike(n, 'be', 32)])
          );
        }),
        (t.sign = function (e, t, r, i) {
          if ('function' == typeof r) {
            var a = r;
            r = function (r) {
              var u = a(e, t, null, i, r);
              if (!n.isBuffer(u) || 32 !== u.length)
                throw new Error(s.ECDSA_SIGN_FAIL);
              return new o(u);
            };
          }
          var f = new o(t);
          if (f.cmp(c.n) >= 0 || f.isZero()) throw new Error(s.ECDSA_SIGN_FAIL);
          var l = u.sign(e, t, { canonical: !0, k: r, pers: i });
          return {
            signature: n.concat([
              l.r.toArrayLike(n, 'be', 32),
              l.s.toArrayLike(n, 'be', 32),
            ]),
            recovery: l.recoveryParam,
          };
        }),
        (t.verify = function (e, t, r) {
          var n = { r: t.slice(0, 32), s: t.slice(32, 64) },
            i = new o(n.r),
            a = new o(n.s);
          if (i.cmp(c.n) >= 0 || a.cmp(c.n) >= 0)
            throw new Error(s.ECDSA_SIGNATURE_PARSE_FAIL);
          if (1 === a.cmp(u.nh) || i.isZero() || a.isZero()) return !1;
          var l = f(r);
          if (null === l) throw new Error(s.EC_PUBLIC_KEY_PARSE_FAIL);
          return u.verify(e, n, { x: l.pub.x, y: l.pub.y });
        }),
        (t.recover = function (e, t, r, i) {
          var a = { r: t.slice(0, 32), s: t.slice(32, 64) },
            f = new o(a.r),
            l = new o(a.s);
          if (f.cmp(c.n) >= 0 || l.cmp(c.n) >= 0)
            throw new Error(s.ECDSA_SIGNATURE_PARSE_FAIL);
          try {
            if (f.isZero() || l.isZero()) throw new Error();
            var d = u.recoverPubKey(e, a, r);
            return n.from(d.encode(!0, i));
          } catch (e) {
            throw new Error(s.ECDSA_RECOVER_FAIL);
          }
        }),
        (t.ecdh = function (e, r) {
          var n = t.ecdhUnsafe(e, r, !0);
          return i('sha256').update(n).digest();
        }),
        (t.ecdhUnsafe = function (e, t, r) {
          var i = f(e);
          if (null === i) throw new Error(s.EC_PUBLIC_KEY_PARSE_FAIL);
          var a = new o(t);
          if (a.cmp(c.n) >= 0 || a.isZero()) throw new Error(s.ECDH_FAIL);
          return n.from(i.pub.mul(a).encode(!0, r));
        });
    },
    function (e, t, r) {
      const n = r(0);
      e.exports = {
        Block: r(169),
        ECPair: r(83),
        Transaction: r(52),
        TransactionBuilder: r(172),
        address: r(84),
        bip32: r(69),
        crypto: r(18),
        networks: r(11),
        opcodes: r(1),
        payments: r(53),
        script: n,
      };
    },
    function (e, t, r) {
      var n = r(1);
      function i(e) {
        return e < n.OP_PUSHDATA1 ? 1 : e <= 255 ? 2 : e <= 65535 ? 3 : 5;
      }
      e.exports = {
        encodingLength: i,
        encode: function (e, t, r) {
          var o = i(t);
          return (
            1 === o
              ? e.writeUInt8(t, r)
              : 2 === o
              ? (e.writeUInt8(n.OP_PUSHDATA1, r), e.writeUInt8(t, r + 1))
              : 3 === o
              ? (e.writeUInt8(n.OP_PUSHDATA2, r), e.writeUInt16LE(t, r + 1))
              : (e.writeUInt8(n.OP_PUSHDATA4, r), e.writeUInt32LE(t, r + 1)),
            o
          );
        },
        decode: function (e, t) {
          var r,
            i,
            o = e.readUInt8(t);
          if (o < n.OP_PUSHDATA1) (r = o), (i = 1);
          else if (o === n.OP_PUSHDATA1) {
            if (t + 2 > e.length) return null;
            (r = e.readUInt8(t + 1)), (i = 2);
          } else if (o === n.OP_PUSHDATA2) {
            if (t + 3 > e.length) return null;
            (r = e.readUInt16LE(t + 1)), (i = 3);
          } else {
            if (t + 5 > e.length) return null;
            if (o !== n.OP_PUSHDATA4) throw new Error('Unexpected opcode');
            (r = e.readUInt32LE(t + 1)), (i = 5);
          }
          return { opcode: o, number: r, size: i };
        },
      };
    },
    function (e, t, r) {
      var n = r(1),
        i = {};
      for (var o in n) {
        i[n[o]] = o;
      }
      e.exports = i;
    },
    function (e, t, r) {
      const n = r(51),
        i = r(2).Buffer,
        o = r(3),
        a = r(13),
        s = i.alloc(1, 0);
      function u(e) {
        let t = 0;
        for (; 0 === e[t]; ) ++t;
        return t === e.length
          ? s
          : 128 & (e = e.slice(t))[0]
          ? i.concat([s, e], 1 + e.length)
          : e;
      }
      function c(e) {
        0 === e[0] && (e = e.slice(1));
        const t = i.alloc(32, 0),
          r = Math.max(0, 32 - e.length);
        return e.copy(t, r), t;
      }
      e.exports = {
        decode: function (e) {
          const t = e.readUInt8(e.length - 1),
            r = -129 & t;
          if (r <= 0 || r >= 4) throw new Error('Invalid hashType ' + t);
          const o = n.decode(e.slice(0, -1)),
            a = c(o.r),
            s = c(o.s);
          return { signature: i.concat([a, s], 64), hashType: t };
        },
        encode: function (e, t) {
          o(
            { signature: a.BufferN(64), hashType: a.UInt8 },
            { signature: e, hashType: t }
          );
          const r = -129 & t;
          if (r <= 0 || r >= 4) throw new Error('Invalid hashType ' + t);
          const s = i.allocUnsafe(1);
          s.writeUInt8(t, 0);
          const c = u(e.slice(0, 32)),
            f = u(e.slice(32, 64));
          return i.concat([n.encode(c, f), s]);
        },
      };
    },
    function (e, t, r) {
      const n = r(2).Buffer,
        i = r(18),
        o = r(170),
        a = r(3),
        s = r(13),
        u = r(82),
        c = r(52);
      function f() {
        (this.version = 1),
          (this.prevHash = null),
          (this.merkleRoot = null),
          (this.timestamp = 0),
          (this.bits = 0),
          (this.nonce = 0);
      }
      (f.fromBuffer = function (e) {
        if (e.length < 80) throw new Error('Buffer too small (< 80 bytes)');
        let t = 0;
        function r(r) {
          return (t += r), e.slice(t - r, t);
        }
        function n() {
          const r = e.readUInt32LE(t);
          return (t += 4), r;
        }
        const i = new f();
        if (
          ((i.version = (function () {
            const r = e.readInt32LE(t);
            return (t += 4), r;
          })()),
          (i.prevHash = r(32)),
          (i.merkleRoot = r(32)),
          (i.timestamp = n()),
          (i.bits = n()),
          (i.nonce = n()),
          80 === e.length)
        )
          return i;
        function o() {
          const r = c.fromBuffer(e.slice(t), !0);
          return (t += r.byteLength()), r;
        }
        const a = (function () {
          const r = u.decode(e, t);
          return (t += u.decode.bytes), r;
        })();
        i.transactions = [];
        for (var s = 0; s < a; ++s) {
          const e = o();
          i.transactions.push(e);
        }
        return i;
      }),
        (f.prototype.byteLength = function (e) {
          return e || !this.transactions
            ? 80
            : 80 +
                u.encodingLength(this.transactions.length) +
                this.transactions.reduce(function (e, t) {
                  return e + t.byteLength();
                }, 0);
        }),
        (f.fromHex = function (e) {
          return f.fromBuffer(n.from(e, 'hex'));
        }),
        (f.prototype.getHash = function () {
          return i.hash256(this.toBuffer(!0));
        }),
        (f.prototype.getId = function () {
          return this.getHash().reverse().toString('hex');
        }),
        (f.prototype.getUTCDate = function () {
          const e = new Date(0);
          return e.setUTCSeconds(this.timestamp), e;
        }),
        (f.prototype.toBuffer = function (e) {
          const t = n.allocUnsafe(this.byteLength(e));
          let r = 0;
          function i(e) {
            e.copy(t, r), (r += e.length);
          }
          function o(e) {
            t.writeUInt32LE(e, r), (r += 4);
          }
          var a;
          return (
            (a = this.version),
            t.writeInt32LE(a, r),
            (r += 4),
            i(this.prevHash),
            i(this.merkleRoot),
            o(this.timestamp),
            o(this.bits),
            o(this.nonce),
            e ||
              !this.transactions ||
              (u.encode(this.transactions.length, t, r),
              (r += u.encode.bytes),
              this.transactions.forEach(function (e) {
                const n = e.byteLength();
                e.toBuffer(t, r), (r += n);
              })),
            t
          );
        }),
        (f.prototype.toHex = function (e) {
          return this.toBuffer(e).toString('hex');
        }),
        (f.calculateTarget = function (e) {
          const t = ((4278190080 & e) >> 24) - 3,
            r = 8388607 & e,
            i = n.alloc(32, 0);
          return i.writeUIntBE(r, 29 - t, 3), i;
        }),
        (f.calculateMerkleRoot = function (e) {
          if ((a([{ getHash: s.Function }], e), 0 === e.length))
            throw TypeError('Cannot compute merkle root for zero transactions');
          const t = e.map(function (e) {
            return e.getHash();
          });
          return o(t, i.hash256);
        }),
        (f.prototype.checkMerkleRoot = function () {
          if (!this.transactions) return !1;
          const e = f.calculateMerkleRoot(this.transactions);
          return 0 === this.merkleRoot.compare(e);
        }),
        (f.prototype.checkProofOfWork = function () {
          const e = this.getHash().reverse(),
            t = f.calculateTarget(this.bits);
          return e.compare(t) <= 0;
        }),
        (e.exports = f);
    },
    function (e, t) {
      e.exports = function (e, t) {
        if (!Array.isArray(e)) throw TypeError('Expected values Array');
        if ('function' != typeof t) throw TypeError('Expected digest Function');
        for (var r = e.length, n = e.concat(); r > 1; ) {
          for (var i = 0, o = 0; o < r; o += 2, ++i) {
            var a = n[o],
              s = o + 1 === r ? a : n[o + 1],
              u = Buffer.concat([a, s]);
            n[i] = t(u);
          }
          r = i;
        }
        return n[0];
      };
    },
    function (e, t) {
      function r(e, t) {
        if ('number' != typeof e)
          throw new Error('cannot write a non-number as a number');
        if (e < 0)
          throw new Error(
            'specified a negative value for writing an unsigned value'
          );
        if (e > t) throw new Error('RangeError: value out of range');
        if (Math.floor(e) !== e)
          throw new Error('value has a fractional component');
      }
      e.exports = {
        readUInt64LE: function (e, t) {
          const n = e.readUInt32LE(t);
          let i = e.readUInt32LE(t + 4);
          return (i *= 4294967296), r(i + n, 9007199254740991), i + n;
        },
        writeUInt64LE: function (e, t, n) {
          return (
            r(t, 9007199254740991),
            e.writeInt32LE(-1 & t, n),
            e.writeUInt32LE(Math.floor(t / 4294967296), n + 4),
            n + 8
          );
        },
      };
    },
    function (e, t, r) {
      const n = r(2).Buffer,
        i = r(84),
        o = r(18),
        a = r(0),
        s = r(11),
        u = r(1),
        c = r(53),
        f = r(3),
        l = r(13),
        d = r(180),
        p = d.types,
        h = r(83),
        m = r(52);
      function b(e, t) {
        f(l.Buffer, e);
        const r = d.output(e);
        switch (r) {
          case p.P2PKH: {
            if (!t) return { type: r };
            const n = c.p2pkh({ output: e }).hash,
              i = o.hash160(t);
            return n.equals(i)
              ? { type: r, pubkeys: [t], signatures: [void 0] }
              : { type: r };
          }
          case p.P2WPKH: {
            if (!t) return { type: r };
            const n = c.p2wpkh({ output: e }).hash,
              i = o.hash160(t);
            return n.equals(i)
              ? { type: r, pubkeys: [t], signatures: [void 0] }
              : { type: r };
          }
          case p.P2PK:
            return {
              type: r,
              pubkeys: [c.p2pk({ output: e }).pubkey],
              signatures: [void 0],
            };
          case p.P2MS: {
            const t = c.p2ms({ output: e });
            return {
              type: r,
              pubkeys: t.pubkeys,
              signatures: t.pubkeys.map(() => {}),
              maxSignatures: t.m,
            };
          }
        }
        return { type: r };
      }
      function g(e, t) {
        (this.__prevTxSet = {}),
          (this.network = e || s.bitcoin),
          (this.maximumFeeRate = t || 2500),
          (this.__inputs = []),
          (this.__tx = new m()),
          (this.__tx.version = 2);
      }
      function v(e) {
        return (
          void 0 !== e.signScript &&
          void 0 !== e.signType &&
          void 0 !== e.pubkeys &&
          void 0 !== e.signatures &&
          e.signatures.length === e.pubkeys.length &&
          e.pubkeys.length > 0 &&
          (!1 === e.hasWitness || void 0 !== e.value)
        );
      }
      function y(e) {
        return e.readUInt8(e.length - 1);
      }
      (g.prototype.setLockTime = function (e) {
        if (
          (f(l.UInt32, e),
          this.__inputs.some(function (e) {
            return (
              !!e.signatures &&
              e.signatures.some(function (e) {
                return e;
              })
            );
          }))
        )
          throw new Error('No, this would invalidate signatures');
        this.__tx.locktime = e;
      }),
        (g.prototype.setVersion = function (e) {
          f(l.UInt32, e), (this.__tx.version = e);
        }),
        (g.fromTransaction = function (e, t) {
          const r = new g(t);
          return (
            r.setVersion(e.version),
            r.setLockTime(e.locktime),
            e.outs.forEach(function (e) {
              r.addOutput(e.script, e.value);
            }),
            e.ins.forEach(function (e) {
              r.__addInputUnsafe(e.hash, e.index, {
                sequence: e.sequence,
                script: e.script,
                witness: e.witness,
              });
            }),
            r.__inputs.forEach(function (t, r) {
              !(function (e, t, r) {
                if (e.redeemScriptType !== p.P2MS || !e.redeemScript) return;
                if (e.pubkeys.length === e.signatures.length) return;
                const n = e.signatures.concat();
                e.signatures = e.pubkeys.map(function (i) {
                  const o = h.fromPublicKey(i);
                  let s;
                  return (
                    n.some(function (i, u) {
                      if (!i) return !1;
                      const c = a.signature.decode(i),
                        f = t.hashForSignature(r, e.redeemScript, c.hashType);
                      return (
                        !!o.verify(f, c.signature) &&
                        ((n[u] = void 0), (s = i), !0)
                      );
                    }),
                    s
                  );
                });
              })(t, e, r);
            }),
            r
          );
        }),
        (g.prototype.addInput = function (e, t, r, i) {
          if (!this.__canModifyInputs())
            throw new Error('No, this would invalidate signatures');
          let o;
          if ('string' == typeof e) e = n.from(e, 'hex').reverse();
          else if (e instanceof m) {
            const r = e.outs[t];
            (i = r.script), (o = r.value), (e = e.getHash());
          }
          return this.__addInputUnsafe(e, t, {
            sequence: r,
            prevOutScript: i,
            value: o,
          });
        }),
        (g.prototype.__addInputUnsafe = function (e, t, r) {
          if (m.isCoinbaseHash(e))
            throw new Error('coinbase inputs not supported');
          const n = e.toString('hex') + ':' + t;
          if (void 0 !== this.__prevTxSet[n])
            throw new Error('Duplicate TxOut: ' + n);
          let i = {};
          if (
            (void 0 !== r.script &&
              (i = (function e(t, r, n, i) {
                if (0 === t.length && 0 === r.length) return {};
                if (!n) {
                  let e = d.input(t, !0),
                    i = d.witness(r, !0);
                  e === p.NONSTANDARD && (e = void 0),
                    i === p.NONSTANDARD && (i = void 0),
                    (n = e || i);
                }
                switch (n) {
                  case p.P2WPKH: {
                    const { output: e, pubkey: t, signature: n } = c.p2wpkh({
                      witness: r,
                    });
                    return {
                      prevOutScript: e,
                      prevOutType: p.P2WPKH,
                      pubkeys: [t],
                      signatures: [n],
                    };
                  }
                  case p.P2PKH: {
                    const { output: e, pubkey: r, signature: n } = c.p2pkh({
                      input: t,
                    });
                    return {
                      prevOutScript: e,
                      prevOutType: p.P2PKH,
                      pubkeys: [r],
                      signatures: [n],
                    };
                  }
                  case p.P2PK: {
                    const { signature: e } = c.p2pk({ input: t });
                    return {
                      prevOutType: p.P2PK,
                      pubkeys: [void 0],
                      signatures: [e],
                    };
                  }
                  case p.P2MS: {
                    const { m: e, pubkeys: r, signatures: n } = c.p2ms(
                      { input: t, output: i },
                      { allowIncomplete: !0 }
                    );
                    return {
                      prevOutType: p.P2MS,
                      pubkeys: r,
                      signatures: n,
                      maxSignatures: e,
                    };
                  }
                }
                if (n === p.P2SH) {
                  const { output: n, redeem: i } = c.p2sh({
                      input: t,
                      witness: r,
                    }),
                    o = d.output(i.output),
                    a = e(i.input, i.witness, o, i.output);
                  return a.prevOutType
                    ? {
                        prevOutScript: n,
                        prevOutType: p.P2SH,
                        redeemScript: i.output,
                        redeemScriptType: a.prevOutType,
                        witnessScript: a.witnessScript,
                        witnessScriptType: a.witnessScriptType,
                        pubkeys: a.pubkeys,
                        signatures: a.signatures,
                      }
                    : {};
                }
                if (n === p.P2WSH) {
                  const { output: n, redeem: i } = c.p2wsh({
                      input: t,
                      witness: r,
                    }),
                    o = d.output(i.output);
                  let s;
                  return (
                    (s =
                      o === p.P2WPKH
                        ? e(i.input, i.witness, o)
                        : e(a.compile(i.witness), [], o, i.output)),
                    s.prevOutType
                      ? {
                          prevOutScript: n,
                          prevOutType: p.P2WSH,
                          witnessScript: i.output,
                          witnessScriptType: s.prevOutType,
                          pubkeys: s.pubkeys,
                          signatures: s.signatures,
                        }
                      : {}
                  );
                }
                return { prevOutType: p.NONSTANDARD, prevOutScript: t };
              })(r.script, r.witness || [])),
            void 0 !== r.value && (i.value = r.value),
            !i.prevOutScript && r.prevOutScript)
          ) {
            let e;
            if (!i.pubkeys && !i.signatures) {
              const t = b(r.prevOutScript);
              t.pubkeys &&
                ((i.pubkeys = t.pubkeys), (i.signatures = t.signatures)),
                (e = t.type);
            }
            (i.prevOutScript = r.prevOutScript),
              (i.prevOutType = e || d.output(r.prevOutScript));
          }
          const o = this.__tx.addInput(e, t, r.sequence, r.scriptSig);
          return (this.__inputs[o] = i), (this.__prevTxSet[n] = !0), o;
        }),
        (g.prototype.addOutput = function (e, t) {
          if (!this.__canModifyOutputs())
            throw new Error('No, this would invalidate signatures');
          return (
            'string' == typeof e && (e = i.toOutputScript(e, this.network)),
            this.__tx.addOutput(e, t)
          );
        }),
        (g.prototype.build = function () {
          return this.__build(!1);
        }),
        (g.prototype.buildIncomplete = function () {
          return this.__build(!0);
        }),
        (g.prototype.__build = function (e) {
          if (!e) {
            if (!this.__tx.ins.length)
              throw new Error('Transaction has no inputs');
            if (!this.__tx.outs.length)
              throw new Error('Transaction has no outputs');
          }
          const t = this.__tx.clone();
          if (
            (this.__inputs.forEach(function (r, n) {
              if (!r.prevOutType && !e)
                throw new Error('Transaction is not complete');
              const i = (function e(t, r, n) {
                const i = r.pubkeys || [];
                let o = r.signatures || [];
                switch (t) {
                  case p.P2PKH:
                    if (0 === i.length) break;
                    if (0 === o.length) break;
                    return c.p2pkh({ pubkey: i[0], signature: o[0] });
                  case p.P2WPKH:
                    if (0 === i.length) break;
                    if (0 === o.length) break;
                    return c.p2wpkh({ pubkey: i[0], signature: o[0] });
                  case p.P2PK:
                    if (0 === i.length) break;
                    if (0 === o.length) break;
                    return c.p2pk({ signature: o[0] });
                  case p.P2MS: {
                    const e = r.maxSignatures;
                    o = n ? o.map((e) => e || u.OP_0) : o.filter((e) => e);
                    const t = !n || e === o.length;
                    return c.p2ms(
                      { m: e, pubkeys: i, signatures: o },
                      { allowIncomplete: n, validate: t }
                    );
                  }
                  case p.P2SH: {
                    const t = e(r.redeemScriptType, r, n);
                    if (!t) return;
                    return c.p2sh({
                      redeem: {
                        output: t.output || r.redeemScript,
                        input: t.input,
                        witness: t.witness,
                      },
                    });
                  }
                  case p.P2WSH: {
                    const t = e(r.witnessScriptType, r, n);
                    if (!t) return;
                    return c.p2wsh({
                      redeem: {
                        output: r.witnessScript,
                        input: t.input,
                        witness: t.witness,
                      },
                    });
                  }
                }
              })(r.prevOutType, r, e);
              if (i) t.setInputScript(n, i.input), t.setWitness(n, i.witness);
              else {
                if (!e && r.prevOutType === p.NONSTANDARD)
                  throw new Error('Unknown input type');
                if (!e) throw new Error('Not enough information');
              }
            }),
            !e && this.__overMaximumFees(t.virtualSize()))
          )
            throw new Error('Transaction has absurd fees');
          return t;
        }),
        (g.prototype.sign = function (e, t, r, n, i, o) {
          if (t.network && t.network !== this.network)
            throw new TypeError('Inconsistent network');
          if (!this.__inputs[e]) throw new Error('No input at index: ' + e);
          if (((n = n || m.SIGHASH_ALL), this.__needsOutputs(n)))
            throw new Error('Transaction needs outputs');
          const s = this.__inputs[e];
          if (void 0 !== s.redeemScript && r && !s.redeemScript.equals(r))
            throw new Error('Inconsistent redeemScript');
          const u = t.publicKey || t.getPublicKey();
          if (!v(s)) {
            if (void 0 !== i) {
              if (void 0 !== s.value && s.value !== i)
                throw new Error("Input didn't match witnessValue");
              f(l.Satoshi, i), (s.value = i);
            }
            if (!v(s)) {
              const e = (function (e, t, r, n) {
                if (r && n) {
                  const i = c.p2wsh({ redeem: { output: n } }),
                    o = c.p2wsh({ output: r }),
                    s = c.p2sh({ redeem: { output: r } }),
                    u = c.p2sh({ redeem: i });
                  if (!i.hash.equals(o.hash))
                    throw new Error(
                      'Witness script inconsistent with prevOutScript'
                    );
                  if (!s.hash.equals(u.hash))
                    throw new Error(
                      'Redeem script inconsistent with prevOutScript'
                    );
                  const f = b(i.redeem.output, t);
                  if (!f.pubkeys)
                    throw new Error(
                      f.type +
                        ' not supported as witnessScript (' +
                        a.toASM(n) +
                        ')'
                    );
                  e.signatures &&
                    e.signatures.some((e) => e) &&
                    (f.signatures = e.signatures);
                  let l = n;
                  if (f.type === p.P2WPKH)
                    throw new Error(
                      'P2SH(P2WSH(P2WPKH)) is a consensus failure'
                    );
                  return {
                    redeemScript: r,
                    redeemScriptType: p.P2WSH,
                    witnessScript: n,
                    witnessScriptType: f.type,
                    prevOutType: p.P2SH,
                    prevOutScript: s.output,
                    hasWitness: !0,
                    signScript: l,
                    signType: f.type,
                    pubkeys: f.pubkeys,
                    signatures: f.signatures,
                    maxSignatures: f.maxSignatures,
                  };
                }
                if (r) {
                  const n = c.p2sh({ redeem: { output: r } });
                  if (e.prevOutScript) {
                    let t;
                    try {
                      t = c.p2sh({ output: e.prevOutScript });
                    } catch (e) {
                      throw new Error('PrevOutScript must be P2SH');
                    }
                    if (!n.hash.equals(t.hash))
                      throw new Error(
                        'Redeem script inconsistent with prevOutScript'
                      );
                  }
                  const i = b(n.redeem.output, t);
                  if (!i.pubkeys)
                    throw new Error(
                      i.type +
                        ' not supported as redeemScript (' +
                        a.toASM(r) +
                        ')'
                    );
                  e.signatures &&
                    e.signatures.some((e) => e) &&
                    (i.signatures = e.signatures);
                  let o = r;
                  return (
                    i.type === p.P2WPKH &&
                      (o = c.p2pkh({ pubkey: i.pubkeys[0] }).output),
                    {
                      redeemScript: r,
                      redeemScriptType: i.type,
                      prevOutType: p.P2SH,
                      prevOutScript: n.output,
                      hasWitness: i.type === p.P2WPKH,
                      signScript: o,
                      signType: i.type,
                      pubkeys: i.pubkeys,
                      signatures: i.signatures,
                      maxSignatures: i.maxSignatures,
                    }
                  );
                }
                if (n) {
                  const r = c.p2wsh({ redeem: { output: n } });
                  if (e.prevOutScript) {
                    const t = c.p2wsh({ output: e.prevOutScript });
                    if (!r.hash.equals(t.hash))
                      throw new Error(
                        'Witness script inconsistent with prevOutScript'
                      );
                  }
                  const i = b(r.redeem.output, t);
                  if (!i.pubkeys)
                    throw new Error(
                      i.type +
                        ' not supported as witnessScript (' +
                        a.toASM(n) +
                        ')'
                    );
                  e.signatures &&
                    e.signatures.some((e) => e) &&
                    (i.signatures = e.signatures);
                  let o = n;
                  if (i.type === p.P2WPKH)
                    throw new Error('P2WSH(P2WPKH) is a consensus failure');
                  return {
                    witnessScript: n,
                    witnessScriptType: i.type,
                    prevOutType: p.P2WSH,
                    prevOutScript: r.output,
                    hasWitness: !0,
                    signScript: o,
                    signType: i.type,
                    pubkeys: i.pubkeys,
                    signatures: i.signatures,
                    maxSignatures: i.maxSignatures,
                  };
                }
                if (e.prevOutType && e.prevOutScript) {
                  if (e.prevOutType === p.P2SH)
                    throw new Error(
                      'PrevOutScript is ' +
                        e.prevOutType +
                        ', requires redeemScript'
                    );
                  if (e.prevOutType === p.P2WSH)
                    throw new Error(
                      'PrevOutScript is ' +
                        e.prevOutType +
                        ', requires witnessScript'
                    );
                  if (!e.prevOutScript)
                    throw new Error('PrevOutScript is missing');
                  const r = b(e.prevOutScript, t);
                  if (!r.pubkeys)
                    throw new Error(
                      r.type +
                        ' not supported (' +
                        a.toASM(e.prevOutScript) +
                        ')'
                    );
                  e.signatures &&
                    e.signatures.some((e) => e) &&
                    (r.signatures = e.signatures);
                  let n = e.prevOutScript;
                  return (
                    r.type === p.P2WPKH &&
                      (n = c.p2pkh({ pubkey: r.pubkeys[0] }).output),
                    {
                      prevOutType: r.type,
                      prevOutScript: e.prevOutScript,
                      hasWitness: r.type === p.P2WPKH,
                      signScript: n,
                      signType: r.type,
                      pubkeys: r.pubkeys,
                      signatures: r.signatures,
                      maxSignatures: r.maxSignatures,
                    }
                  );
                }
                const i = c.p2pkh({ pubkey: t }).output;
                return {
                  prevOutType: p.P2PKH,
                  prevOutScript: i,
                  hasWitness: !1,
                  signScript: i,
                  signType: p.P2PKH,
                  pubkeys: [t],
                  signatures: [void 0],
                };
              })(s, u, r, o);
              Object.assign(s, e);
            }
            if (!v(s)) throw Error(s.prevOutType + ' not supported');
          }
          let d;
          d = s.hasWitness
            ? this.__tx.hashForWitnessV0(e, s.signScript, s.value, n)
            : this.__tx.hashForSignature(e, s.signScript, n);
          if (
            !s.pubkeys.some(function (e, r) {
              if (!u.equals(e)) return !1;
              if (s.signatures[r]) throw new Error('Signature already exists');
              if (33 !== u.length && s.hasWitness)
                throw new Error(
                  'BIP143 rejects uncompressed public keys in P2WPKH or P2WSH'
                );
              const i = t.sign(d);
              return (s.signatures[r] = a.signature.encode(i, n)), !0;
            })
          )
            throw new Error('Key pair cannot sign for this input');
        }),
        (g.prototype.__canModifyInputs = function () {
          return this.__inputs.every(function (e) {
            return (
              !e.signatures ||
              e.signatures.every(function (e) {
                if (!e) return !0;
                return y(e) & m.SIGHASH_ANYONECANPAY;
              })
            );
          });
        }),
        (g.prototype.__needsOutputs = function (e) {
          return e === m.SIGHASH_ALL
            ? 0 === this.__tx.outs.length
            : 0 === this.__tx.outs.length &&
                this.__inputs.some(
                  (e) =>
                    !!e.signatures &&
                    e.signatures.some((e) => {
                      if (!e) return !1;
                      return !(y(e) & m.SIGHASH_NONE);
                    })
                );
        }),
        (g.prototype.__canModifyOutputs = function () {
          const e = this.__tx.ins.length,
            t = this.__tx.outs.length;
          return this.__inputs.every(function (r) {
            return (
              void 0 === r.signatures ||
              r.signatures.every(function (r) {
                if (!r) return !0;
                const n = 31 & y(r);
                return (
                  n === m.SIGHASH_NONE ||
                  (n === m.SIGHASH_SINGLE ? e <= t : void 0)
                );
              })
            );
          });
        }),
        (g.prototype.__overMaximumFees = function (e) {
          return (
            (this.__inputs.reduce(function (e, t) {
              return e + (t.value >>> 0);
            }, 0) -
              this.__tx.outs.reduce(function (e, t) {
                return e + t.value;
              }, 0)) /
              e >
            this.maximumFeeRate
          );
        }),
        (e.exports = g);
    },
    function (e, t, r) {
      const n = r(23),
        i = r(3),
        o = r(1),
        a = r(0),
        s = r(11).bitcoin;
      e.exports = function (e, t) {
        if (!e.data && !e.output) throw new TypeError('Not enough data');
        (t = Object.assign({ validate: !0 }, t || {})),
          i(
            {
              network: i.maybe(i.Object),
              output: i.maybe(i.Buffer),
              data: i.maybe(i.arrayOf(i.Buffer)),
            },
            e
          );
        const r = { network: e.network || s };
        if (
          (n.prop(r, 'output', function () {
            if (e.data) return a.compile([o.OP_RETURN].concat(e.data));
          }),
          n.prop(r, 'data', function () {
            if (e.output) return a.decompile(e.output).slice(1);
          }),
          t.validate && e.output)
        ) {
          const t = a.decompile(e.output);
          if (t[0] !== o.OP_RETURN) throw new TypeError('Output is invalid');
          if (!t.slice(1).every(i.Buffer))
            throw new TypeError('Output is invalid');
          if (
            e.data &&
            !(function (e, t) {
              return (
                e.length === t.length &&
                e.every(function (e, r) {
                  return e.equals(t[r]);
                })
              );
            })(e.data, r.data)
          )
            throw new TypeError('Data mismatch');
        }
        return Object.assign(r, e);
      };
    },
    function (e, t, r) {
      const n = r(23),
        i = r(3),
        o = r(1),
        a = r(21),
        s = r(0),
        u = r(11).bitcoin,
        c = o.OP_RESERVED;
      function f(e, t) {
        return (
          e.length === t.length &&
          e.every(function (e, r) {
            return e.equals(t[r]);
          })
        );
      }
      e.exports = function (e, t) {
        if (
          !(
            e.input ||
            e.output ||
            (e.pubkeys && void 0 !== e.m) ||
            e.signatures
          )
        )
          throw new TypeError('Not enough data');
        function r(e) {
          return (
            s.isCanonicalScriptSignature(e) ||
            (t.allowIncomplete && e === o.OP_0)
          );
        }
        (t = Object.assign({ validate: !0 }, t || {})),
          i(
            {
              network: i.maybe(i.Object),
              m: i.maybe(i.Number),
              n: i.maybe(i.Number),
              output: i.maybe(i.Buffer),
              pubkeys: i.maybe(i.arrayOf(a.isPoint)),
              signatures: i.maybe(i.arrayOf(r)),
              input: i.maybe(i.Buffer),
            },
            e
          );
        const l = { network: e.network || u };
        let d,
          p = !1;
        function h(e) {
          p ||
            ((p = !0),
            (d = s.decompile(e)),
            (l.m = d[0] - c),
            (l.n = d[d.length - 2] - c),
            (l.pubkeys = d.slice(1, -2)));
        }
        if (
          (n.prop(l, 'output', function () {
            if (e.m && l.n && e.pubkeys)
              return s.compile(
                [].concat(c + e.m, e.pubkeys, c + l.n, o.OP_CHECKMULTISIG)
              );
          }),
          n.prop(l, 'm', function () {
            if (l.output) return h(l.output), l.m;
          }),
          n.prop(l, 'n', function () {
            if (l.pubkeys) return l.pubkeys.length;
          }),
          n.prop(l, 'pubkeys', function () {
            if (e.output) return h(e.output), l.pubkeys;
          }),
          n.prop(l, 'signatures', function () {
            if (e.input) return s.decompile(e.input).slice(1);
          }),
          n.prop(l, 'input', function () {
            if (e.signatures) return s.compile([o.OP_0].concat(e.signatures));
          }),
          n.prop(l, 'witness', function () {
            if (l.input) return [];
          }),
          t.validate)
        ) {
          if (e.output) {
            if ((h(e.output), !i.Number(d[0])))
              throw new TypeError('Output is invalid');
            if (!i.Number(d[d.length - 2]))
              throw new TypeError('Output is invalid');
            if (d[d.length - 1] !== o.OP_CHECKMULTISIG)
              throw new TypeError('Output is invalid');
            if (l.m <= 0 || l.n > 16 || l.m > l.n || l.n !== d.length - 3)
              throw new TypeError('Output is invalid');
            if (!l.pubkeys.every((e) => a.isPoint(e)))
              throw new TypeError('Output is invalid');
            if (void 0 !== e.m && e.m !== l.m)
              throw new TypeError('m mismatch');
            if (void 0 !== e.n && e.n !== l.n)
              throw new TypeError('n mismatch');
            if (e.pubkeys && !f(e.pubkeys, l.pubkeys))
              throw new TypeError('Pubkeys mismatch');
          }
          if (e.pubkeys) {
            if (void 0 !== e.n && e.n !== e.pubkeys.length)
              throw new TypeError('Pubkey count mismatch');
            if (((l.n = e.pubkeys.length), l.n < l.m))
              throw new TypeError('Pubkey count cannot be less than m');
          }
          if (e.signatures) {
            if (e.signatures.length < l.m)
              throw new TypeError('Not enough signatures provided');
            if (e.signatures.length > l.m)
              throw new TypeError('Too many signatures provided');
          }
          if (e.input) {
            if (e.input[0] !== o.OP_0) throw new TypeError('Input is invalid');
            if (0 === l.signatures.length || !l.signatures.every(r))
              throw new TypeError('Input has invalid signature(s)');
            if (e.signatures && !f(e.signatures, l.signatures))
              throw new TypeError('Signature mismatch');
            if (void 0 !== e.m && e.m !== e.signatures.length)
              throw new TypeError('Signature count mismatch');
          }
        }
        return Object.assign(l, e);
      };
    },
    function (e, t, r) {
      const n = r(23),
        i = r(3),
        o = r(1),
        a = r(21),
        s = r(0),
        u = r(11).bitcoin;
      e.exports = function (e, t) {
        if (!(e.input || e.output || e.pubkey || e.input || e.signature))
          throw new TypeError('Not enough data');
        (t = Object.assign({ validate: !0 }, t || {})),
          i(
            {
              network: i.maybe(i.Object),
              output: i.maybe(i.Buffer),
              pubkey: i.maybe(a.isPoint),
              signature: i.maybe(s.isCanonicalScriptSignature),
              input: i.maybe(i.Buffer),
            },
            e
          );
        const r = n.value(function () {
            return s.decompile(e.input);
          }),
          c = { network: e.network || u };
        if (
          (n.prop(c, 'output', function () {
            if (e.pubkey) return s.compile([e.pubkey, o.OP_CHECKSIG]);
          }),
          n.prop(c, 'pubkey', function () {
            if (e.output) return e.output.slice(1, -1);
          }),
          n.prop(c, 'signature', function () {
            if (e.input) return r()[0];
          }),
          n.prop(c, 'input', function () {
            if (e.signature) return s.compile([e.signature]);
          }),
          n.prop(c, 'witness', function () {
            if (c.input) return [];
          }),
          t.validate)
        ) {
          if (e.output) {
            if (e.output[e.output.length - 1] !== o.OP_CHECKSIG)
              throw new TypeError('Output is invalid');
            if (!a.isPoint(c.pubkey))
              throw new TypeError('Output pubkey is invalid');
            if (e.pubkey && !e.pubkey.equals(c.pubkey))
              throw new TypeError('Pubkey mismatch');
          }
          if (e.signature && e.input && !e.input.equals(c.input))
            throw new TypeError('Signature mismatch');
          if (e.input) {
            if (1 !== r().length) throw new TypeError('Input is invalid');
            if (!s.isCanonicalScriptSignature(c.signature))
              throw new TypeError('Input has invalid signature');
          }
        }
        return Object.assign(c, e);
      };
    },
    function (e, t, r) {
      const n = r(23),
        i = r(3),
        o = r(1),
        a = r(21),
        s = r(18),
        u = r(0),
        c = r(11).bitcoin,
        f = r(29);
      e.exports = function (e, t) {
        if (!(e.address || e.hash || e.output || e.pubkey || e.input))
          throw new TypeError('Not enough data');
        (t = Object.assign({ validate: !0 }, t || {})),
          i(
            {
              network: i.maybe(i.Object),
              address: i.maybe(i.String),
              hash: i.maybe(i.BufferN(20)),
              output: i.maybe(i.BufferN(25)),
              pubkey: i.maybe(a.isPoint),
              signature: i.maybe(u.isCanonicalScriptSignature),
              input: i.maybe(i.Buffer),
            },
            e
          );
        const r = n.value(function () {
            const t = f.decode(e.address);
            return { version: t.readUInt8(0), hash: t.slice(1) };
          }),
          l = n.value(function () {
            return u.decompile(e.input);
          }),
          d = e.network || c,
          p = { network: d };
        if (
          (n.prop(p, 'address', function () {
            if (!p.hash) return;
            const e = Buffer.allocUnsafe(21);
            return (
              e.writeUInt8(d.pubKeyHash, 0), p.hash.copy(e, 1), f.encode(e)
            );
          }),
          n.prop(p, 'hash', function () {
            return e.output
              ? e.output.slice(3, 23)
              : e.address
              ? r().hash
              : e.pubkey || p.pubkey
              ? s.hash160(e.pubkey || p.pubkey)
              : void 0;
          }),
          n.prop(p, 'output', function () {
            if (p.hash)
              return u.compile([
                o.OP_DUP,
                o.OP_HASH160,
                p.hash,
                o.OP_EQUALVERIFY,
                o.OP_CHECKSIG,
              ]);
          }),
          n.prop(p, 'pubkey', function () {
            if (e.input) return l()[1];
          }),
          n.prop(p, 'signature', function () {
            if (e.input) return l()[0];
          }),
          n.prop(p, 'input', function () {
            if (e.pubkey && e.signature)
              return u.compile([e.signature, e.pubkey]);
          }),
          n.prop(p, 'witness', function () {
            if (p.input) return [];
          }),
          t.validate)
        ) {
          let t;
          if (e.address) {
            if (r().version !== d.pubKeyHash)
              throw new TypeError('Invalid version or Network mismatch');
            if (20 !== r().hash.length) throw new TypeError('Invalid address');
            t = r().hash;
          }
          if (e.hash) {
            if (t && !t.equals(e.hash)) throw new TypeError('Hash mismatch');
            t = e.hash;
          }
          if (e.output) {
            if (
              25 !== e.output.length ||
              e.output[0] !== o.OP_DUP ||
              e.output[1] !== o.OP_HASH160 ||
              20 !== e.output[2] ||
              e.output[23] !== o.OP_EQUALVERIFY ||
              e.output[24] !== o.OP_CHECKSIG
            )
              throw new TypeError('Output is invalid');
            const r = e.output.slice(3, 23);
            if (t && !t.equals(r)) throw new TypeError('Hash mismatch');
            t = r;
          }
          if (e.pubkey) {
            const r = s.hash160(e.pubkey);
            if (t && !t.equals(r)) throw new TypeError('Hash mismatch');
            t = r;
          }
          if (e.input) {
            const r = l();
            if (2 !== r.length) throw new TypeError('Input is invalid');
            if (!u.isCanonicalScriptSignature(r[0]))
              throw new TypeError('Input has invalid signature');
            if (!a.isPoint(r[1]))
              throw new TypeError('Input has invalid pubkey');
            if (e.signature && !e.signature.equals(r[0]))
              throw new TypeError('Signature mismatch');
            if (e.pubkey && !e.pubkey.equals(r[1]))
              throw new TypeError('Pubkey mismatch');
            const n = s.hash160(r[1]);
            if (t && !t.equals(n)) throw new TypeError('Hash mismatch');
          }
        }
        return Object.assign(p, e);
      };
    },
    function (e, t, r) {
      const n = r(23),
        i = r(3),
        o = r(1),
        a = r(18),
        s = r(0),
        u = r(11).bitcoin,
        c = r(29);
      e.exports = function (e, t) {
        if (!(e.address || e.hash || e.output || e.redeem || e.input))
          throw new TypeError('Not enough data');
        (t = Object.assign({ validate: !0 }, t || {})),
          i(
            {
              network: i.maybe(i.Object),
              address: i.maybe(i.String),
              hash: i.maybe(i.BufferN(20)),
              output: i.maybe(i.BufferN(23)),
              redeem: i.maybe({
                network: i.maybe(i.Object),
                output: i.maybe(i.Buffer),
                input: i.maybe(i.Buffer),
                witness: i.maybe(i.arrayOf(i.Buffer)),
              }),
              input: i.maybe(i.Buffer),
              witness: i.maybe(i.arrayOf(i.Buffer)),
            },
            e
          );
        let r = e.network;
        r || (r = (e.redeem && e.redeem.network) || u);
        const f = { network: r },
          l = n.value(function () {
            const t = c.decode(e.address);
            return { version: t.readUInt8(0), hash: t.slice(1) };
          }),
          d = n.value(function () {
            return s.decompile(e.input);
          }),
          p = n.value(function () {
            const t = d();
            return {
              network: r,
              output: t[t.length - 1],
              input: s.compile(t.slice(0, -1)),
              witness: e.witness || [],
            };
          });
        if (
          (n.prop(f, 'address', function () {
            if (!f.hash) return;
            const e = Buffer.allocUnsafe(21);
            return (
              e.writeUInt8(r.scriptHash, 0), f.hash.copy(e, 1), c.encode(e)
            );
          }),
          n.prop(f, 'hash', function () {
            return e.output
              ? e.output.slice(2, 22)
              : e.address
              ? l().hash
              : f.redeem && f.redeem.output
              ? a.hash160(f.redeem.output)
              : void 0;
          }),
          n.prop(f, 'output', function () {
            if (f.hash) return s.compile([o.OP_HASH160, f.hash, o.OP_EQUAL]);
          }),
          n.prop(f, 'redeem', function () {
            if (e.input) return p();
          }),
          n.prop(f, 'input', function () {
            if (e.redeem && e.redeem.input && e.redeem.output)
              return s.compile(
                [].concat(s.decompile(e.redeem.input), e.redeem.output)
              );
          }),
          n.prop(f, 'witness', function () {
            return f.redeem && f.redeem.witness
              ? f.redeem.witness
              : f.input
              ? []
              : void 0;
          }),
          t.validate)
        ) {
          let t;
          if (e.address) {
            if (l().version !== r.scriptHash)
              throw new TypeError('Invalid version or Network mismatch');
            if (20 !== l().hash.length) throw new TypeError('Invalid address');
            t = l().hash;
          }
          if (e.hash) {
            if (t && !t.equals(e.hash)) throw new TypeError('Hash mismatch');
            t = e.hash;
          }
          if (e.output) {
            if (
              23 !== e.output.length ||
              e.output[0] !== o.OP_HASH160 ||
              20 !== e.output[1] ||
              e.output[22] !== o.OP_EQUAL
            )
              throw new TypeError('Output is invalid');
            const r = e.output.slice(2, 22);
            if (t && !t.equals(r)) throw new TypeError('Hash mismatch');
            t = r;
          }
          const n = function (e) {
            if (e.output) {
              const r = s.decompile(e.output);
              if (!r || r.length < 1)
                throw new TypeError('Redeem.output too short');
              const n = a.hash160(e.output);
              if (t && !t.equals(n)) throw new TypeError('Hash mismatch');
              t = n;
            }
            if (e.input) {
              const t = e.input.length > 0,
                r = e.witness && e.witness.length > 0;
              if (!t && !r) throw new TypeError('Empty input');
              if (t && r) throw new TypeError('Input and witness provided');
              if (t) {
                const t = s.decompile(e.input);
                if (!s.isPushOnly(t))
                  throw new TypeError('Non push-only scriptSig');
              }
            }
          };
          if (e.input) {
            const e = d();
            if (!e || e.length < 1) throw new TypeError('Input too short');
            if (!Buffer.isBuffer(p().output))
              throw new TypeError('Input is invalid');
            n(p());
          }
          if (e.redeem) {
            if (e.redeem.network && e.redeem.network !== r)
              throw new TypeError('Network mismatch');
            if (e.input) {
              const t = p();
              if (e.redeem.output && !e.redeem.output.equals(t.output))
                throw new TypeError('Redeem.output mismatch');
              if (e.redeem.input && !e.redeem.input.equals(t.input))
                throw new TypeError('Redeem.input mismatch');
            }
            n(e.redeem);
          }
          if (
            e.witness &&
            e.redeem &&
            e.redeem.witness &&
            !(function (e, t) {
              return (
                e.length === t.length &&
                e.every(function (e, r) {
                  return e.equals(t[r]);
                })
              );
            })(e.redeem.witness, e.witness)
          )
            throw new TypeError('Witness and redeem.witness mismatch');
        }
        return Object.assign(f, e);
      };
    },
    function (e, t, r) {
      const n = r(23),
        i = r(3),
        o = r(1),
        a = r(21),
        s = r(18),
        u = r(36),
        c = r(0),
        f = r(11).bitcoin,
        l = Buffer.alloc(0);
      e.exports = function (e, t) {
        if (!(e.address || e.hash || e.output || e.pubkey || e.witness))
          throw new TypeError('Not enough data');
        (t = Object.assign({ validate: !0 }, t || {})),
          i(
            {
              address: i.maybe(i.String),
              hash: i.maybe(i.BufferN(20)),
              input: i.maybe(i.BufferN(0)),
              network: i.maybe(i.Object),
              output: i.maybe(i.BufferN(22)),
              pubkey: i.maybe(a.isPoint),
              signature: i.maybe(c.isCanonicalScriptSignature),
              witness: i.maybe(i.arrayOf(i.Buffer)),
            },
            e
          );
        const r = n.value(function () {
            const t = u.decode(e.address),
              r = t.words.shift(),
              n = u.fromWords(t.words);
            return { version: r, prefix: t.prefix, data: Buffer.from(n) };
          }),
          d = e.network || f,
          p = { network: d };
        if (
          (n.prop(p, 'address', function () {
            if (!p.hash) return;
            const e = u.toWords(p.hash);
            return e.unshift(0), u.encode(d.bech32, e);
          }),
          n.prop(p, 'hash', function () {
            return e.output
              ? e.output.slice(2, 22)
              : e.address
              ? r().data
              : e.pubkey || p.pubkey
              ? s.hash160(e.pubkey || p.pubkey)
              : void 0;
          }),
          n.prop(p, 'output', function () {
            if (p.hash) return c.compile([o.OP_0, p.hash]);
          }),
          n.prop(p, 'pubkey', function () {
            return e.pubkey ? e.pubkey : e.witness ? e.witness[1] : void 0;
          }),
          n.prop(p, 'signature', function () {
            if (e.witness) return e.witness[0];
          }),
          n.prop(p, 'input', function () {
            if (p.witness) return l;
          }),
          n.prop(p, 'witness', function () {
            if (e.pubkey && e.signature) return [e.signature, e.pubkey];
          }),
          t.validate)
        ) {
          let t;
          if (e.address) {
            if (d && d.bech32 !== r().prefix)
              throw new TypeError('Invalid prefix or Network mismatch');
            if (0 !== r().version)
              throw new TypeError('Invalid address version');
            if (20 !== r().data.length)
              throw new TypeError('Invalid address data');
            t = r().data;
          }
          if (e.hash) {
            if (t && !t.equals(e.hash)) throw new TypeError('Hash mismatch');
            t = e.hash;
          }
          if (e.output) {
            if (
              22 !== e.output.length ||
              e.output[0] !== o.OP_0 ||
              20 !== e.output[1]
            )
              throw new TypeError('Output is invalid');
            if (t && !t.equals(e.output.slice(2)))
              throw new TypeError('Hash mismatch');
            t = e.output.slice(2);
          }
          if (e.pubkey) {
            const r = s.hash160(e.pubkey);
            if (t && !t.equals(r)) throw new TypeError('Hash mismatch');
            t = r;
          }
          if (e.witness) {
            if (2 !== e.witness.length)
              throw new TypeError('Witness is invalid');
            if (!c.isCanonicalScriptSignature(e.witness[0]))
              throw new TypeError('Witness has invalid signature');
            if (!a.isPoint(e.witness[1]))
              throw new TypeError('Witness has invalid pubkey');
            if (e.signature && !e.signature.equals(e.witness[0]))
              throw new TypeError('Signature mismatch');
            if (e.pubkey && !e.pubkey.equals(e.witness[1]))
              throw new TypeError('Pubkey mismatch');
            const r = s.hash160(e.witness[1]);
            if (t && !t.equals(r)) throw new TypeError('Hash mismatch');
          }
        }
        return Object.assign(p, e);
      };
    },
    function (e, t, r) {
      const n = r(23),
        i = r(3),
        o = r(1),
        a = r(36),
        s = r(18),
        u = r(0),
        c = r(11).bitcoin,
        f = Buffer.alloc(0);
      e.exports = function (e, t) {
        if (!(e.address || e.hash || e.output || e.redeem || e.witness))
          throw new TypeError('Not enough data');
        (t = Object.assign({ validate: !0 }, t || {})),
          i(
            {
              network: i.maybe(i.Object),
              address: i.maybe(i.String),
              hash: i.maybe(i.BufferN(32)),
              output: i.maybe(i.BufferN(34)),
              redeem: i.maybe({
                input: i.maybe(i.Buffer),
                network: i.maybe(i.Object),
                output: i.maybe(i.Buffer),
                witness: i.maybe(i.arrayOf(i.Buffer)),
              }),
              input: i.maybe(i.BufferN(0)),
              witness: i.maybe(i.arrayOf(i.Buffer)),
            },
            e
          );
        const r = n.value(function () {
            const t = a.decode(e.address),
              r = t.words.shift(),
              n = a.fromWords(t.words);
            return { version: r, prefix: t.prefix, data: Buffer.from(n) };
          }),
          l = n.value(function () {
            return u.decompile(e.redeem.input);
          });
        let d = e.network;
        d || (d = (e.redeem && e.redeem.network) || c);
        const p = { network: d };
        if (
          (n.prop(p, 'address', function () {
            if (!p.hash) return;
            const e = a.toWords(p.hash);
            return e.unshift(0), a.encode(d.bech32, e);
          }),
          n.prop(p, 'hash', function () {
            return e.output
              ? e.output.slice(2)
              : e.address
              ? r().data
              : p.redeem && p.redeem.output
              ? s.sha256(p.redeem.output)
              : void 0;
          }),
          n.prop(p, 'output', function () {
            if (p.hash) return u.compile([o.OP_0, p.hash]);
          }),
          n.prop(p, 'redeem', function () {
            if (e.witness)
              return {
                output: e.witness[e.witness.length - 1],
                input: f,
                witness: e.witness.slice(0, -1),
              };
          }),
          n.prop(p, 'input', function () {
            if (p.witness) return f;
          }),
          n.prop(p, 'witness', function () {
            if (
              e.redeem &&
              e.redeem.input &&
              e.redeem.input.length > 0 &&
              e.redeem.output &&
              e.redeem.output.length > 0
            ) {
              const t = u.toStack(l());
              return (
                (p.redeem = Object.assign({ witness: t }, e.redeem)),
                (p.redeem.input = f),
                [].concat(t, e.redeem.output)
              );
            }
            if (e.redeem && e.redeem.output && e.redeem.witness)
              return [].concat(e.redeem.witness, e.redeem.output);
          }),
          t.validate)
        ) {
          let t;
          if (e.address) {
            if (r().prefix !== d.bech32)
              throw new TypeError('Invalid prefix or Network mismatch');
            if (0 !== r().version)
              throw new TypeError('Invalid address version');
            if (32 !== r().data.length)
              throw new TypeError('Invalid address data');
            t = r().data;
          }
          if (e.hash) {
            if (t && !t.equals(e.hash)) throw new TypeError('Hash mismatch');
            t = e.hash;
          }
          if (e.output) {
            if (
              34 !== e.output.length ||
              e.output[0] !== o.OP_0 ||
              32 !== e.output[1]
            )
              throw new TypeError('Output is invalid');
            const r = e.output.slice(2);
            if (t && !t.equals(r)) throw new TypeError('Hash mismatch');
            t = r;
          }
          if (e.redeem) {
            if (e.redeem.network && e.redeem.network !== d)
              throw new TypeError('Network mismatch');
            if (
              e.redeem.input &&
              e.redeem.input.length > 0 &&
              e.redeem.witness &&
              e.redeem.witness.length > 0
            )
              throw new TypeError('Ambiguous witness source');
            if (e.redeem.output) {
              if (0 === u.decompile(e.redeem.output).length)
                throw new TypeError('Redeem.output is invalid');
              const r = s.sha256(e.redeem.output);
              if (t && !t.equals(r)) throw new TypeError('Hash mismatch');
              t = r;
            }
            if (e.redeem.input && !u.isPushOnly(l()))
              throw new TypeError('Non push-only scriptSig');
            if (
              e.witness &&
              e.redeem.witness &&
              !(function (e, t) {
                return (
                  e.length === t.length &&
                  e.every(function (e, r) {
                    return e.equals(t[r]);
                  })
                );
              })(e.witness, e.redeem.witness)
            )
              throw new TypeError('Witness and redeem.witness mismatch');
          }
          if (
            e.witness &&
            e.redeem &&
            e.redeem.output &&
            !e.redeem.output.equals(e.witness[e.witness.length - 1])
          )
            throw new TypeError('Witness and redeem.output mismatch');
        }
        return Object.assign(p, e);
      };
    },
    function (e, t, r) {
      const n = r(0).decompile,
        i = r(54),
        o = r(183),
        a = r(55),
        s = r(56),
        u = r(188),
        c = r(191),
        f = r(193),
        l = r(195),
        d = {
          P2MS: 'multisig',
          NONSTANDARD: 'nonstandard',
          NULLDATA: 'nulldata',
          P2PK: 'pubkey',
          P2PKH: 'pubkeyhash',
          P2SH: 'scripthash',
          P2WPKH: 'witnesspubkeyhash',
          P2WSH: 'witnessscripthash',
          WITNESS_COMMITMENT: 'witnesscommitment',
        };
      e.exports = {
        input: function (e, t) {
          const r = n(e);
          if (!r) throw new TypeError('Invalid script');
          return s.input.check(r)
            ? d.P2PKH
            : u.input.check(r, t)
            ? d.P2SH
            : i.input.check(r, t)
            ? d.P2MS
            : a.input.check(r)
            ? d.P2PK
            : d.NONSTANDARD;
        },
        output: function (e) {
          if (c.output.check(e)) return d.P2WPKH;
          if (f.output.check(e)) return d.P2WSH;
          if (s.output.check(e)) return d.P2PKH;
          if (u.output.check(e)) return d.P2SH;
          const t = n(e);
          if (!t) throw new TypeError('Invalid script');
          return i.output.check(t)
            ? d.P2MS
            : a.output.check(t)
            ? d.P2PK
            : l.output.check(t)
            ? d.WITNESS_COMMITMENT
            : o.output.check(t)
            ? d.NULLDATA
            : d.NONSTANDARD;
        },
        witness: function (e, t) {
          const r = n(e);
          if (!r) throw new TypeError('Invalid script');
          return c.input.check(r)
            ? d.P2WPKH
            : f.input.check(r, t)
            ? d.P2WSH
            : d.NONSTANDARD;
        },
        types: d,
      };
    },
    function (e, t, r) {
      const n = r(0),
        i = r(1);
      function o(e) {
        return e === i.OP_0 || n.isCanonicalScriptSignature(e);
      }
      function a(e, t) {
        const r = n.decompile(e);
        return (
          !(r.length < 2) &&
          r[0] === i.OP_0 &&
          (t
            ? r.slice(1).every(o)
            : r.slice(1).every(n.isCanonicalScriptSignature))
        );
      }
      (a.toJSON = function () {
        return 'multisig input';
      }),
        (e.exports = { check: a });
    },
    function (e, t, r) {
      const n = r(0),
        i = r(13),
        o = r(1),
        a = o.OP_RESERVED;
      function s(e, t) {
        const r = n.decompile(e);
        if (r.length < 4) return !1;
        if (r[r.length - 1] !== o.OP_CHECKMULTISIG) return !1;
        if (!i.Number(r[0])) return !1;
        if (!i.Number(r[r.length - 2])) return !1;
        const s = r[0] - a,
          u = r[r.length - 2] - a;
        if (s <= 0) return !1;
        if (u > 16) return !1;
        if (s > u) return !1;
        if (u !== r.length - 3) return !1;
        if (t) return !0;
        return r.slice(1, -2).every(n.isCanonicalPubKey);
      }
      (s.toJSON = function () {
        return 'multi-sig output';
      }),
        (e.exports = { check: s });
    },
    function (e, t, r) {
      const n = r(0),
        i = r(1);
      function o(e) {
        const t = n.compile(e);
        return t.length > 1 && t[0] === i.OP_RETURN;
      }
      (o.toJSON = function () {
        return 'null data output';
      }),
        (e.exports = { output: { check: o } });
    },
    function (e, t, r) {
      const n = r(0);
      function i(e) {
        const t = n.decompile(e);
        return 1 === t.length && n.isCanonicalScriptSignature(t[0]);
      }
      (i.toJSON = function () {
        return 'pubKey input';
      }),
        (e.exports = { check: i });
    },
    function (e, t, r) {
      const n = r(0),
        i = r(1);
      function o(e) {
        const t = n.decompile(e);
        return (
          2 === t.length && n.isCanonicalPubKey(t[0]) && t[1] === i.OP_CHECKSIG
        );
      }
      (o.toJSON = function () {
        return 'pubKey output';
      }),
        (e.exports = { check: o });
    },
    function (e, t, r) {
      const n = r(0);
      function i(e) {
        const t = n.decompile(e);
        return (
          2 === t.length &&
          n.isCanonicalScriptSignature(t[0]) &&
          n.isCanonicalPubKey(t[1])
        );
      }
      (i.toJSON = function () {
        return 'pubKeyHash input';
      }),
        (e.exports = { check: i });
    },
    function (e, t, r) {
      const n = r(0),
        i = r(1);
      function o(e) {
        const t = n.compile(e);
        return (
          25 === t.length &&
          t[0] === i.OP_DUP &&
          t[1] === i.OP_HASH160 &&
          20 === t[2] &&
          t[23] === i.OP_EQUALVERIFY &&
          t[24] === i.OP_CHECKSIG
        );
      }
      (o.toJSON = function () {
        return 'pubKeyHash output';
      }),
        (e.exports = { check: o });
    },
    function (e, t, r) {
      e.exports = { input: r(189), output: r(190) };
    },
    function (e, t, r) {
      const n = r(2).Buffer,
        i = r(0),
        o = r(54),
        a = r(55),
        s = r(56),
        u = r(85),
        c = r(86);
      function f(e, t) {
        const r = i.decompile(e);
        if (r.length < 1) return !1;
        const f = r[r.length - 1];
        if (!n.isBuffer(f)) return !1;
        const l = i.decompile(i.compile(r.slice(0, -1))),
          d = i.decompile(f);
        return (
          !!d &&
          !!i.isPushOnly(l) &&
          (1 === r.length
            ? c.check(d) || u.check(d)
            : !(!s.input.check(l) || !s.output.check(d)) ||
              !(!o.input.check(l, t) || !o.output.check(d)) ||
              !(!a.input.check(l) || !a.output.check(d)))
        );
      }
      (f.toJSON = function () {
        return 'scriptHash input';
      }),
        (e.exports = { check: f });
    },
    function (e, t, r) {
      const n = r(0),
        i = r(1);
      function o(e) {
        const t = n.compile(e);
        return (
          23 === t.length &&
          t[0] === i.OP_HASH160 &&
          20 === t[1] &&
          t[22] === i.OP_EQUAL
        );
      }
      (o.toJSON = function () {
        return 'scriptHash output';
      }),
        (e.exports = { check: o });
    },
    function (e, t, r) {
      e.exports = { input: r(192), output: r(85) };
    },
    function (e, t, r) {
      const n = r(0);
      function i(e) {
        const t = n.decompile(e);
        return (
          2 === t.length &&
          n.isCanonicalScriptSignature(t[0]) &&
          ((r = t[1]), n.isCanonicalPubKey(r) && 33 === r.length)
        );
        var r;
      }
      (i.toJSON = function () {
        return 'witnessPubKeyHash input';
      }),
        (e.exports = { check: i });
    },
    function (e, t, r) {
      e.exports = { input: r(194), output: r(86) };
    },
    function (e, t, r) {
      const n = r(0),
        i = r(13),
        o = r(3),
        a = r(54),
        s = r(55),
        u = r(56);
      function c(e, t) {
        if ((o(i.Array, e), e.length < 1)) return !1;
        const r = e[e.length - 1];
        if (!Buffer.isBuffer(r)) return !1;
        const c = n.decompile(r);
        if (!c || 0 === c.length) return !1;
        const f = n.compile(e.slice(0, -1));
        return (
          !(!u.input.check(f) || !u.output.check(c)) ||
          !(!a.input.check(f, t) || !a.output.check(c)) ||
          !(!s.input.check(f) || !s.output.check(c))
        );
      }
      (c.toJSON = function () {
        return 'witnessScriptHash input';
      }),
        (e.exports = { check: c });
    },
    function (e, t, r) {
      e.exports = { output: r(196) };
    },
    function (e, t, r) {
      const n = r(2).Buffer,
        i = r(0),
        o = r(13),
        a = r(3),
        s = r(1),
        u = n.from('aa21a9ed', 'hex');
      function c(e) {
        const t = i.compile(e);
        return (
          t.length > 37 &&
          t[0] === s.OP_RETURN &&
          36 === t[1] &&
          t.slice(2, 6).equals(u)
        );
      }
      (c.toJSON = function () {
        return 'Witness commitment output';
      }),
        (e.exports = {
          check: c,
          decode: function (e) {
            return a(c, e), i.decompile(e)[1].slice(4, 36);
          },
          encode: function (e) {
            a(o.Hash256bit, e);
            const t = n.allocUnsafe(36);
            return u.copy(t, 0), e.copy(t, 4), i.compile([s.OP_RETURN, t]);
          },
        });
    },
    function (e, t, r) {
      const n = r(40),
        i = r(33);
      function o(e) {
        console.log('[dotenv][DEBUG] ' + e);
      }
      const a = /^\s*([\w.-]+)\s*=\s*(.*)?\s*$/,
        s = /\\n/g,
        u = /\n|\r|\r\n/;
      function c(e, t) {
        const r = Boolean(t && t.debug),
          n = {};
        return (
          e
            .toString()
            .split(u)
            .forEach(function (e, t) {
              const i = e.match(a);
              if (null != i) {
                const e = i[1];
                let t = i[2] || '';
                const r = t.length - 1,
                  o = '"' === t[0] && '"' === t[r];
                ("'" === t[0] && "'" === t[r]) || o
                  ? ((t = t.substring(1, r)), o && (t = t.replace(s, '\n')))
                  : (t = t.trim()),
                  (n[e] = t);
              } else r && o(`did not match key and value when parsing line ${t + 1}: ${e}`);
            }),
          n
        );
      }
      (e.exports.config = function (e) {
        let t = i.resolve(process.cwd(), '.env'),
          r = 'utf8',
          a = !1;
        e &&
          (null != e.path && (t = e.path),
          null != e.encoding && (r = e.encoding),
          null != e.debug && (a = !0));
        try {
          const e = c(n.readFileSync(t, { encoding: r }), { debug: a });
          return (
            Object.keys(e).forEach(function (t) {
              Object.prototype.hasOwnProperty.call(process.env, t)
                ? a &&
                  o(
                    `"${t}" is already defined in \`process.env\` and will not be overwritten`
                  )
                : (process.env[t] = e[t]);
            }),
            { parsed: e }
          );
        } catch (e) {
          return { error: e };
        }
      }),
        (e.exports.parse = c);
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    function (e, t, r) {
      const { fetchAll: n } = r(101);
      t.handler = async (e, t, r) => {
        let i = await n('twitter');
        return (i = JSON.stringify(i)), { statusCode: 200, body: i };
      };
    },
  ])
);
